{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/hexo-theme-matery/source/favicon.png","path":"favicon.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/barrager.css","path":"css/barrager.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/bb.css","path":"css/bb.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/gallery.css","path":"css/gallery.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/dark.css","path":"css/dark.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/gitment.css","path":"css/gitment.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/indexcover.css","path":"css/indexcover.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/matery.css","path":"css/matery.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/my-gitalk.css","path":"css/my-gitalk.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/my.css","path":"css/my.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/post.css","path":"css/post.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/reward.css","path":"css/reward.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/crypto-js.js","path":"js/crypto-js.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/gallery-encrypt.js","path":"js/gallery-encrypt.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/jquery.barrager.js","path":"js/jquery.barrager.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/matery.js","path":"js/matery.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/avatar.jpg","path":"medias/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/comment_bg.png","path":"medias/comment_bg.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/cover.jpg","path":"medias/cover.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/icp.png","path":"medias/icp.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/logo.png","path":"medias/logo.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.css","path":"libs/aos/aos.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/animate/animate.min.css","path":"libs/animate/animate.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.js","path":"libs/aos/aos.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.css","path":"libs/aplayer/APlayer.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/Meting.min.js","path":"libs/aplayer/Meting.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.js","path":"libs/aplayer/APlayer.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/canvas-nest.js","path":"libs/background/canvas-nest.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-dynamic.js","path":"libs/background/ribbon-dynamic.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-refresh.min.js","path":"libs/background/ribbon-refresh.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon.min.js","path":"libs/background/ribbon.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeBlockFuction.js","path":"libs/codeBlock/codeBlockFuction.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeCopy.js","path":"libs/codeBlock/codeCopy.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeLang.js","path":"libs/codeBlock/codeLang.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeShrink.js","path":"libs/codeBlock/codeShrink.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.css","path":"libs/dplayer/DPlayer.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.js","path":"libs/dplayer/DPlayer.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/cryptojs/crypto-js.min.js","path":"libs/cryptojs/crypto-js.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/fancybox/fancybox.js","path":"libs/fancybox/fancybox.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/echarts/echarts.min.js","path":"libs/echarts/echarts.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/fancybox/jquery.fancybox.css","path":"libs/fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.min.js","path":"libs/gitalk/gitalk.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.css","path":"libs/gitalk/gitalk.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment.js","path":"libs/gitment/gitment.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment-default.css","path":"libs/gitment/gitment-default.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/instantpage/instantpage.js","path":"libs/instantpage/instantpage.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","path":"libs/jqcloud/jqcloud-1.0.4.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jquery/jquery-3.6.0.min.js","path":"libs/jquery/jquery-3.6.0.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/justifiedGallery/justifiedGallery.min.css","path":"libs/justifiedGallery/justifiedGallery.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud.css","path":"libs/jqcloud/jqcloud.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/justifiedGallery/justifiedGallery.min.js","path":"libs/justifiedGallery/justifiedGallery.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/masonry/masonry.pkgd.min.js","path":"libs/masonry/masonry.pkgd.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.js","path":"libs/mermaid/mermaid.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.css","path":"libs/materialize/materialize.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.min.css","path":"libs/mermaid/mermaid.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.js","path":"libs/materialize/materialize.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/minivaline/MiniValine.js","path":"libs/minivaline/MiniValine.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.min.js","path":"libs/mermaid/mermaid.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/TencentCaptcha.js","path":"libs/others/TencentCaptcha.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/busuanzi.pure.mini.js","path":"libs/others/busuanzi.pure.mini.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/clicklove.js","path":"libs/others/clicklove.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-half.js","path":"libs/others/sakura-half.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-reduce.js","path":"libs/others/sakura-reduce.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura.js","path":"libs/others/sakura.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-small.js","path":"libs/others/sakura-small.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/star.js","path":"libs/others/star.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.min.css","path":"libs/prism/prism.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/snow.js","path":"libs/others/snow.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.min.js","path":"libs/prism/prism.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/scrollprogress/scrollProgress.min.js","path":"libs/scrollprogress/scrollProgress.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.css","path":"libs/tocbot/tocbot.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.min.js","path":"libs/tocbot/tocbot.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js","path":"libs/twikoo/twikoo.all.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js.LICENSE.txt","path":"libs/twikoo/twikoo.all.min.js.LICENSE.txt","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/typed/typed.js","path":"libs/typed/typed.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/valine/av-min.js","path":"libs/valine/av-min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/waline/Waline.min.js","path":"libs/waline/Waline.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/valine/Valine.min.js","path":"libs/valine/Valine.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/0.jpg","path":"medias/banner/0.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/1.jpg","path":"medias/banner/1.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/2.jpg","path":"medias/banner/2.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/3.jpg","path":"medias/banner/3.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/4.jpg","path":"medias/banner/4.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/5.jpg","path":"medias/banner/5.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/6.jpg","path":"medias/banner/6.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/0.png","path":"medias/barrager/0.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/0.jpg","path":"medias/featureimages/0.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/2.png","path":"medias/barrager/2.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/close.png","path":"medias/barrager/close.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/1.png","path":"medias/barrager/1.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/1.jpg","path":"medias/featureimages/1.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/10.jpg","path":"medias/featureimages/10.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/11.jpg","path":"medias/featureimages/11.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/12.jpg","path":"medias/featureimages/12.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/13.jpg","path":"medias/featureimages/13.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/14.jpg","path":"medias/featureimages/14.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/15.jpg","path":"medias/featureimages/15.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/16.jpg","path":"medias/featureimages/16.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/17.jpg","path":"medias/featureimages/17.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/18.jpg","path":"medias/featureimages/18.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/19.jpg","path":"medias/featureimages/19.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/2.jpg","path":"medias/featureimages/2.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/20.jpg","path":"medias/featureimages/20.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/21.jpg","path":"medias/featureimages/21.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/22.jpg","path":"medias/featureimages/22.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/23.jpg","path":"medias/featureimages/23.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/3.jpg","path":"medias/featureimages/3.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/4.jpg","path":"medias/featureimages/4.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/5.jpg","path":"medias/featureimages/5.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/6.jpg","path":"medias/featureimages/6.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/7.jpg","path":"medias/featureimages/7.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/8.jpg","path":"medias/featureimages/8.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/9.jpg","path":"medias/featureimages/9.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/images/01.jpg","path":"medias/images/01.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/images/02.jpg","path":"medias/images/02.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/images/03.jpg","path":"medias/images/03.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/reward/alipay.png","path":"medias/reward/alipay.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/reward/wechat.png","path":"medias/reward/wechat.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.css","path":"libs/awesome/css/all.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.min.css","path":"libs/awesome/css/all.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff2","path":"libs/awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.ttf","path":"libs/awesome/webfonts/fa-brands-400.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.ttf","path":"libs/awesome/webfonts/fa-regular-400.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff2","path":"libs/awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.ttf","path":"libs/awesome/webfonts/fa-solid-900.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/css/lightgallery.min.css","path":"libs/lightGallery/css/lightgallery.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.svg","path":"libs/lightGallery/fonts/lg.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff2","path":"libs/awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.ttf","path":"libs/lightGallery/fonts/lg.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-v4compatibility.woff2","path":"libs/awesome/webfonts/fa-v4compatibility.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-v4compatibility.ttf","path":"libs/awesome/webfonts/fa-v4compatibility.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.woff","path":"libs/lightGallery/fonts/lg.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/loading.gif","path":"libs/lightGallery/img/loading.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/js/lightgallery-all.min.js","path":"libs/lightGallery/js/lightgallery-all.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/video-play.png","path":"libs/lightGallery/img/video-play.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/vimeo-play.png","path":"libs/lightGallery/img/vimeo-play.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/css/share.min.css","path":"libs/share/css/share.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/youtube-play.png","path":"libs/lightGallery/img/youtube-play.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.eot","path":"libs/share/fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/js/jquery.share.min.js","path":"libs/share/js/jquery.share.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.svg","path":"libs/share/fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.ttf","path":"libs/share/fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/js/social-share.min.js","path":"libs/share/js/social-share.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.woff","path":"libs/share/fonts/iconfont.woff","modified":0,"renderable":1}],"Cache":[{"_id":"themes/hexo-theme-matery/.gitignore","hash":"5340c994462c7345373e075529f40e60c1952f00","modified":1699000929886},{"_id":"themes/hexo-theme-matery/CHANGELOG.md","hash":"484a703733b839bd98e016ddb015f028c2593fef","modified":1699000929886},{"_id":"themes/hexo-theme-matery/LICENSE","hash":"b314c7ebb7d599944981908b7f3ed33a30e78f3a","modified":1699000929887},{"_id":"themes/hexo-theme-matery/README_CN.md","hash":"97e12f438d3010d7957b9d1e8bff3346aeeab742","modified":1699007641036},{"_id":"themes/hexo-theme-matery/layout/404.ejs","hash":"4d2bb286d9903f770344e11898bd3f13444760bf","modified":1699000929892},{"_id":"themes/hexo-theme-matery/languages/default.yml","hash":"f5c69f3e107474da19630e136abed5d87609e59f","modified":1699000929890},{"_id":"themes/hexo-theme-matery/languages/jp.yml","hash":"c3d2849348bd52fab85b38040818b429057d3101","modified":1699000929890},{"_id":"themes/hexo-theme-matery/_config.yml","hash":"0a029a788b9d727d4fb20be5602831b66a15df90","modified":1699353260583},{"_id":"themes/hexo-theme-matery/README.md","hash":"6d8bcedba15ca33f2ed4ac2804b1df3ff8f21e0a","modified":1699000929887},{"_id":"themes/hexo-theme-matery/languages/zh-CN.yml","hash":"c6de0de68bdc75a8a905787a0526b70ee9821da8","modified":1699000929891},{"_id":"themes/hexo-theme-matery/languages/zh-HK.yml","hash":"51c06005927e8bde5b3e23353d2bf2c32ed855f3","modified":1699000929891},{"_id":"themes/hexo-theme-matery/layout/bb.ejs","hash":"6deb819e47fe11edd2fc87a6296cae725a0275f9","modified":1699000929920},{"_id":"themes/hexo-theme-matery/layout/about.ejs","hash":"626d28dbc7fa2e0fb6601e324dcad08993bcf002","modified":1699000929918},{"_id":"themes/hexo-theme-matery/layout/archive.ejs","hash":"57733d52d17361e735fcc95f875e0b1b9ebdcbd8","modified":1699000929919},{"_id":"themes/hexo-theme-matery/layout/categories.ejs","hash":"c431e772d0f7700592228bbd9502793bdc28a893","modified":1699000929920},{"_id":"themes/hexo-theme-matery/layout/category.ejs","hash":"4ac716d15d84e7c37f07308a5ec008a2ac090c9b","modified":1699000929921},{"_id":"themes/hexo-theme-matery/layout/friends.ejs","hash":"7e92c983794c5c4a2b16eca2452eb187316262ef","modified":1699000929923},{"_id":"themes/hexo-theme-matery/layout/contact.ejs","hash":"71ef2540fa586cd0c3b1f216f59fa9ec85fc6a38","modified":1699000929921},{"_id":"themes/hexo-theme-matery/layout/gallery.ejs","hash":"fcc7364b03329148ba4920cddb0d34d5b7410788","modified":1699000929923},{"_id":"themes/hexo-theme-matery/layout/galleries.ejs","hash":"85b8b9e583ffa7a4ee6d0c2be4779cb2f7d91777","modified":1699000929923},{"_id":"themes/hexo-theme-matery/layout/index.ejs","hash":"eb3875f997767bc6c500a158535cfadcbca96f8f","modified":1699000929924},{"_id":"themes/hexo-theme-matery/layout/musics.ejs","hash":"9ac6053e09ed2c8a844d7e93c3fdce4ded95248a","modified":1699000929925},{"_id":"themes/hexo-theme-matery/layout/movies.ejs","hash":"abce85ffdd99e787e3652fbd466447e032b626bd","modified":1699000929925},{"_id":"themes/hexo-theme-matery/layout/layout.ejs","hash":"c170d2e1413c9b89863effd4e0a26c413c633a71","modified":1699000929924},{"_id":"themes/hexo-theme-matery/layout/tags.ejs","hash":"851c0ee599e91e7b1d657673859e8b6ff79cf50b","modified":1699000929927},{"_id":"themes/hexo-theme-matery/layout/post.ejs","hash":"444ecca1cb35bad81b063f1d7cb9fd80ead195dd","modified":1699000929926},{"_id":"themes/hexo-theme-matery/layout/tag.ejs","hash":"058eb27ff10f5314d8b9e334c54419b9a6572315","modified":1699000929927},{"_id":"themes/hexo-theme-matery/layout/_partial/back-top.ejs","hash":"be527741c39c9dc4a13ad712b49fe8db0147fe1e","modified":1699000929892},{"_id":"themes/hexo-theme-matery/source/favicon.png","hash":"774fee8c6d0be9dbb010b20f36c06848d06e3da0","modified":1699000929936},{"_id":"themes/hexo-theme-matery/layout/_partial/background.ejs","hash":"442c710d69892eb56d3d257cf4c2e195e6913eea","modified":1699000929893},{"_id":"themes/hexo-theme-matery/layout/_partial/baidu-analytics.ejs","hash":"4b01030b7136192bdbd704e29a0fe12f92767551","modified":1699000929893},{"_id":"themes/hexo-theme-matery/layout/_partial/baidu-push.ejs","hash":"2841870e0c625787de348221e5ddb7bbe99ec5a2","modified":1699000929893},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-cover.ejs","hash":"d5a7b9bb96e04c0a3485dd873748f19c50a6a04f","modified":1699000929894},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-cover-content.ejs","hash":"8d6d4ac4bf6bfd3c7f4ffc534711fcdacc6711c0","modified":1699000929894},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-video.ejs","hash":"963422029eb5158eb5f5bc97ce19b66e5399db97","modified":1699000929895},{"_id":"themes/hexo-theme-matery/layout/_partial/changyan.ejs","hash":"cd919d31564e118c2ee8d5cbfb7d51ee6da15d82","modified":1699000929895},{"_id":"themes/hexo-theme-matery/layout/_partial/codeblock.ejs","hash":"a924658cbc1a1aeafe9fa455b08bd495071285a1","modified":1699000929896},{"_id":"themes/hexo-theme-matery/layout/_partial/disqus.ejs","hash":"1b392f2160f962f62f3ddf5e1155c7f2f4888e1d","modified":1699000929897},{"_id":"themes/hexo-theme-matery/layout/_partial/cover-style.ejs","hash":"4288b9d91b2d71404e7a509a81a5d7f7a4b8b5e8","modified":1699000929896},{"_id":"themes/hexo-theme-matery/layout/_partial/footer.ejs","hash":"96a20785870b24c4e307d49a3b27c5077437743a","modified":1699000929897},{"_id":"themes/hexo-theme-matery/layout/_partial/github-link.ejs","hash":"fd4034bca2eb3987dcf113e6477260bee97eb1e7","modified":1699000929898},{"_id":"themes/hexo-theme-matery/layout/_partial/gitalk.ejs","hash":"27764936791ce36b527bea63689435346bbfb425","modified":1699000929897},{"_id":"themes/hexo-theme-matery/layout/_partial/google-analytics.ejs","hash":"890c8f04c1f4905dfceb3ea9fd6efdd040d79c01","modified":1699000929899},{"_id":"themes/hexo-theme-matery/layout/_partial/gitment.ejs","hash":"90888c945384aa1ee4650bd43bd7ea670f25828c","modified":1699000929899},{"_id":"themes/hexo-theme-matery/layout/_partial/head.ejs","hash":"e10a37e82a4fc9c806025ad791e82c3b22fdfa4d","modified":1699000929900},{"_id":"themes/hexo-theme-matery/layout/_partial/header.ejs","hash":"4bcdbd27273dd1b7098d4cfa6479b5d6b138cd12","modified":1699000929900},{"_id":"themes/hexo-theme-matery/layout/_partial/index-cover.ejs","hash":"c6ad79f25fdd038df06aaaead4b9e45f8078e34a","modified":1699000929901},{"_id":"themes/hexo-theme-matery/layout/_partial/main-style.ejs","hash":"8819b334509682355a5e53fa0f307f90166d175c","modified":1699000929902},{"_id":"themes/hexo-theme-matery/layout/_partial/navigation.ejs","hash":"c9ce806110db632d29bdb0eea3b55b1fb4b1aff3","modified":1699000929903},{"_id":"themes/hexo-theme-matery/layout/_partial/livere.ejs","hash":"42728561c09589f79b698eb059ab4def53ed3642","modified":1699000929901},{"_id":"themes/hexo-theme-matery/layout/_partial/mobile-nav.ejs","hash":"f3d6b20ac07f1b096c5cf0b091523867fd4fd0b5","modified":1699000929902},{"_id":"themes/hexo-theme-matery/layout/_partial/paging.ejs","hash":"d8773abab5d0b672b70a9df20a8f9f7f6b0a2dae","modified":1699000929903},{"_id":"themes/hexo-theme-matery/layout/_partial/post-cover.ejs","hash":"7f583c935253e2bf6421791715ee9de4989add6e","modified":1699000929904},{"_id":"themes/hexo-theme-matery/layout/_partial/post-detail-toc.ejs","hash":"05ac5b4df05e80e3123e464e7df2dfc589b0bbd2","modified":1699000929904},{"_id":"themes/hexo-theme-matery/layout/_partial/post-statis.ejs","hash":"de0d5763ddd64463f43135678b64c044884b8406","modified":1699000929906},{"_id":"themes/hexo-theme-matery/layout/_partial/post-style.ejs","hash":"243c3ba783553f25955d524fd47a5bb59a5e732b","modified":1699000929906},{"_id":"themes/hexo-theme-matery/layout/_partial/post-detail.ejs","hash":"3590cebe5d6729300f2ac83ff9e0ceceb66da4b9","modified":1699000929905},{"_id":"themes/hexo-theme-matery/layout/_partial/prev-next.ejs","hash":"1fb43f421de58aa24458f7d4a4cda44b8a3d62cc","modified":1699000929906},{"_id":"themes/hexo-theme-matery/layout/_partial/reward-style.ejs","hash":"8256ed940c0185ccf01890d59fb4262f196e2323","modified":1699000929907},{"_id":"themes/hexo-theme-matery/layout/_partial/reprint-statement.ejs","hash":"f67bc52bc5a2464ebe30f42c65c0ee38eeec2fda","modified":1699000929907},{"_id":"themes/hexo-theme-matery/layout/_partial/search.ejs","hash":"4218ed406c43ed781fe78ad8bf1834fa4b76b049","modified":1699000929908},{"_id":"themes/hexo-theme-matery/layout/_partial/reward.ejs","hash":"ab6de30729d48669476372ccd4aefa7e15d92c38","modified":1699000929908},{"_id":"themes/hexo-theme-matery/layout/_partial/share.ejs","hash":"e50fae64b6cfdbed18861eb49eca5018a920c7a4","modified":1699000929908},{"_id":"themes/hexo-theme-matery/layout/_partial/social-link.ejs","hash":"f640583d45179abc1ef57951e7f61fb9e10f44c9","modified":1699000929909},{"_id":"themes/hexo-theme-matery/layout/_partial/twikoo.ejs","hash":"d1d7c4da3d56f42541eea965a6ebf1f8e2fff0f4","modified":1699000929909},{"_id":"themes/hexo-theme-matery/layout/_partial/valine.ejs","hash":"5ee3ade52bc7494226ed30e7dd4531d1d91ca67c","modified":1699000929910},{"_id":"themes/hexo-theme-matery/layout/_partial/waline.ejs","hash":"beb3044890bfe7cfd26328565da4f8f955563424","modified":1699000929910},{"_id":"themes/hexo-theme-matery/layout/_widget/category-cloud.ejs","hash":"3ef458166041a8a12e493cc5963a5af5d98c1dfc","modified":1699000929911},{"_id":"themes/hexo-theme-matery/layout/_widget/artitalk.ejs","hash":"b14e486f12b9ac42a273b80e4d785fcb94cf04b2","modified":1699000929911},{"_id":"themes/hexo-theme-matery/layout/_widget/category-radar.ejs","hash":"131e2eabf6b216210efd0746300889adfee357be","modified":1699000929912},{"_id":"themes/hexo-theme-matery/layout/_widget/day-night.ejs","hash":"ff21dd5e49e1fc9a9ab8c7d164fd4b32a8265ea2","modified":1699000929912},{"_id":"themes/hexo-theme-matery/layout/_widget/dream.ejs","hash":"d6692f8c81013191fce59f47df1b6171649181ca","modified":1699000929913},{"_id":"themes/hexo-theme-matery/layout/_widget/music.ejs","hash":"d84f2f464209f02f49917423ac5accf1c548f38c","modified":1699000929913},{"_id":"themes/hexo-theme-matery/layout/_widget/musics.ejs","hash":"bfebdf0731fee0cd4fd51efa0da1d0184565ae25","modified":1699000929914},{"_id":"themes/hexo-theme-matery/layout/_widget/my-gallery.ejs","hash":"f5259f18a906f2862fe72b90c28125b5f6b7d0b1","modified":1699000929914},{"_id":"themes/hexo-theme-matery/layout/_widget/my-projects.ejs","hash":"141f19a8aa41b7a21436f23ce114bd5fda932512","modified":1699000929915},{"_id":"themes/hexo-theme-matery/layout/_widget/my-skills.ejs","hash":"9edbeb1ec6212762d597ae7a05b5a219f72c8f98","modified":1699000929915},{"_id":"themes/hexo-theme-matery/layout/_widget/post-calendar.ejs","hash":"fb5ee7674070956d134ddca6890a9bd3f398cc0f","modified":1699000929916},{"_id":"themes/hexo-theme-matery/layout/_widget/post-charts.ejs","hash":"20f0b6155eee348276dd91790f6a52b1005a0518","modified":1699000929916},{"_id":"themes/hexo-theme-matery/layout/_widget/tag-cloud.ejs","hash":"d32898104477acef56c33d00a68b48db15dcf2e6","modified":1699000929917},{"_id":"themes/hexo-theme-matery/layout/_widget/recommend.ejs","hash":"5f64edd00d0a7c3b5e90d5ff99c9ebba61482d75","modified":1699000929916},{"_id":"themes/hexo-theme-matery/layout/_widget/tag-wordcloud.ejs","hash":"03dcd0a7a9fdbcc2bc38a99a8fad96ae17a340fa","modified":1699000929917},{"_id":"themes/hexo-theme-matery/scripts/tags/button.js","hash":"18415c69461d706cf8039580cc79d00c029c637c","modified":1699000929928},{"_id":"themes/hexo-theme-matery/layout/_widget/video.ejs","hash":"c2f785f4986d6ed1da0d1f2cd339f33754625004","modified":1699000929918},{"_id":"themes/hexo-theme-matery/scripts/tags/index.js","hash":"223a31ea3aa4a689d45a033c7d680cb4fff8d8af","modified":1699000929929},{"_id":"themes/hexo-theme-matery/scripts/tags/note.js","hash":"98e7c48678c69f089d0d42f6d005c83265e9f400","modified":1699000929929},{"_id":"themes/hexo-theme-matery/source/css/barrager.css","hash":"f59b2f1351d7977b676a4d51634b7dad648d3e99","modified":1699000929930},{"_id":"themes/hexo-theme-matery/source/css/bb.css","hash":"328a49b26ce663d9824c53aced118db4d55f2ac7","modified":1699000929931},{"_id":"themes/hexo-theme-matery/source/css/gallery.css","hash":"015097ca1271dd44e6d663332587dbe58ae2ade8","modified":1699000929932},{"_id":"themes/hexo-theme-matery/source/css/dark.css","hash":"541bc0b481beee921c62d0e84b61b124c95d2d01","modified":1699000929931},{"_id":"themes/hexo-theme-matery/source/css/gitment.css","hash":"d5ef623065d1fbc897119f7b70ccf7563e329917","modified":1699000929932},{"_id":"themes/hexo-theme-matery/source/css/indexcover.css","hash":"00f4f498ae8514022004f2281cab8ff304cd0f37","modified":1699000929933},{"_id":"themes/hexo-theme-matery/source/css/matery.css","hash":"36d90a4b90df89c8fdc588203e394903b11747c8","modified":1699000929933},{"_id":"themes/hexo-theme-matery/source/css/my-gitalk.css","hash":"52b3b36a0ed3db3bdf8bf1f999e37731078c485b","modified":1699000929934},{"_id":"themes/hexo-theme-matery/source/css/my.css","hash":"37683a9f11c68903a53e2b8593ca8c095a721896","modified":1699000929934},{"_id":"themes/hexo-theme-matery/source/css/post.css","hash":"1ebbf9ddee7db4b3039d8d4e25f2605072ab6e24","modified":1699000929935},{"_id":"themes/hexo-theme-matery/source/css/reward.css","hash":"56f8d21c3bb1dc57c762a63d13b08161d8260738","modified":1699000929935},{"_id":"themes/hexo-theme-matery/source/js/gallery-encrypt.js","hash":"f611a391d62da17b71f75577a72ad246ef6c5a71","modified":1699000929938},{"_id":"themes/hexo-theme-matery/source/js/jquery.barrager.js","hash":"8db5b764f940614a209a332a4a11a53e5ea52fbc","modified":1699000929938},{"_id":"themes/hexo-theme-matery/source/js/matery.js","hash":"713eca7dcc8d4d02a03652367abc1afcc74e6c75","modified":1699000929939},{"_id":"themes/hexo-theme-matery/source/js/search.js","hash":"72fac8fd3671f3525a574423985ee522958989d3","modified":1699000929939},{"_id":"themes/hexo-theme-matery/source/js/tw_cn.js","hash":"8ab118a6f3e115efb50283c0fe408ad91ce7021b","modified":1699000929940},{"_id":"themes/hexo-theme-matery/source/medias/avatar.jpg","hash":"2a6287308628881ce27b9a7de53ba15c2be00d02","modified":1699000930047},{"_id":"themes/hexo-theme-matery/source/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1699000930058},{"_id":"themes/hexo-theme-matery/source/medias/icp.png","hash":"27a96f31f7d0413c6ade6f40e06f021f501151c7","modified":1699000930079},{"_id":"themes/hexo-theme-matery/source/medias/logo.png","hash":"d9095f5ea8719374d9d1ff020279426f5b2a1396","modified":1699000930085},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.css","hash":"ded9739f803d114c9168d3351fded72b3b478b4c","modified":1699000929942},{"_id":"themes/hexo-theme-matery/source/libs/animate/animate.min.css","hash":"5dfcbcee866e9dc564916416281885f3e320871e","modified":1699000929941},{"_id":"themes/hexo-theme-matery/source/libs/background/canvas-nest.js","hash":"d2569ef80127ed2f4af7ef4d9f82b037794eec69","modified":1699000929959},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.js","hash":"5a8e6d07ffa55642418ab3fd4b263aa08284b77a","modified":1699000929942},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.css","hash":"7f4f8913f2d46ade2def5134e2cc8684a4b87939","modified":1699000929943},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/Meting.min.js","hash":"ff60e62a9486505283582e8ad9226b35ba93d5c5","modified":1699000929945},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-dynamic.js","hash":"8f53dbd5f9a40c377664bf8ca0d5d5ed75b91757","modified":1699000929960},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.js","hash":"70c0c4a9bf698747b7c058c21287ad617355e5dd","modified":1699000929944},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1699000929960},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeBlockFuction.js","hash":"a8133367d48199e7505c2d831ca848b4202b9ba6","modified":1699000929960},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1699000929960},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeCopy.js","hash":"6ab7871d36cab438bbd4d781bc1fe7618b46b6e7","modified":1699000929961},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeShrink.js","hash":"3edbe498f7bb9e7daa77f9db30e1b5eeab40e067","modified":1699000929961},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeLang.js","hash":"066d2c89ad429e44f6467b9267da782ccaad57de","modified":1699000929961},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.css","hash":"5d52d3b34fceb9d7e11f1beaf7ed380b4249dec4","modified":1699000929963},{"_id":"themes/hexo-theme-matery/source/libs/cryptojs/crypto-js.min.js","hash":"33810b2b757fc4327bc1d3b83bb5e0d3dc1fec5b","modified":1699000929962},{"_id":"themes/hexo-theme-matery/source/libs/fancybox/jquery.fancybox.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1699000929973},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.css","hash":"4c0d5510ea487b0fe63e96464ab0b381565cc273","modified":1699000929974},{"_id":"themes/hexo-theme-matery/source/libs/instantpage/instantpage.js","hash":"043eba3c85c2e2009a9fabf3c4fc55537852fd86","modified":1699000929979},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment-default.css","hash":"a0625d8b432af8bdc820f8768d36cde439e7257c","modified":1699000929978},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"26849509f196a2d21bbfd15696e5d5153163b8f1","modified":1699000929980},{"_id":"themes/hexo-theme-matery/source/libs/justifiedGallery/justifiedGallery.min.css","hash":"b9323091d50785ad6c617d7cae76a41a89eb44b3","modified":1699000929983},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud.css","hash":"4e6538c8312aeeab845d361c37a8c1a0931241f0","modified":1699000929980},{"_id":"themes/hexo-theme-matery/source/libs/justifiedGallery/justifiedGallery.min.js","hash":"6f5433cc9f19ce2403e903e5d01a4c7b38f0969b","modified":1699000929983},{"_id":"themes/hexo-theme-matery/source/libs/masonry/masonry.pkgd.min.js","hash":"137e1c0f71e472fb7004c1832972287fb2dfc343","modified":1699000929990},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.min.css","hash":"1dbcd9312e57f2a0b569451d0028d88316614481","modified":1699000930013},{"_id":"themes/hexo-theme-matery/source/libs/minivaline/MiniValine.js","hash":"f7f6cdc1b22297e02334e304444e9a8351acb455","modified":1699000930020},{"_id":"themes/hexo-theme-matery/source/libs/others/TencentCaptcha.js","hash":"fb4d34c48567b7b992aac1c75f0d24c3eb2cc3fa","modified":1699000930021},{"_id":"themes/hexo-theme-matery/source/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1699000930021},{"_id":"themes/hexo-theme-matery/source/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1699000930021},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-half.js","hash":"a41b64af88fdd0e2d3502752d059661c1bc743dc","modified":1699000930022},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-reduce.js","hash":"f7527e9fb4e6fe2cc7c8880692d77bcda95900c7","modified":1699000930023},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura.js","hash":"b6ebe8f040c84f067300996a5f377846f01605fa","modified":1699000930024},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-small.js","hash":"3284a9ab71454e574d80663f3a05735cd12a6a05","modified":1699000930024},{"_id":"themes/hexo-theme-matery/source/libs/others/star.js","hash":"1ddc9448fbba8915f9452b4f0a970f33635e46a7","modified":1699000930025},{"_id":"themes/hexo-theme-matery/source/libs/others/snow.js","hash":"07b1e7932403b38aebb1c024ef3c3f5bb0c6aa2e","modified":1699000930025},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.min.css","hash":"1aec6cfcbf8c833f728b8736060fe5690e19d92f","modified":1699000930026},{"_id":"themes/hexo-theme-matery/source/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1699000930030},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.css","hash":"f646f2bb75bcd1eb65b2788ac7bf15d4fd243ce9","modified":1699000930036},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.min.js","hash":"39055053a477e7d54b46cfb46591f84cc3818eeb","modified":1699000930037},{"_id":"themes/hexo-theme-matery/source/libs/typed/typed.js","hash":"eceb98f80392cb57df1af5b160d85924f69fb2e0","modified":1699000930041},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js.LICENSE.txt","hash":"6e1c8f7b23f06ca4c727c805fda053dc1d9193d0","modified":1699000930040},{"_id":"themes/hexo-theme-matery/source/medias/barrager/0.png","hash":"b30416fd3b3aec5af3fa90823a7e2e9c0af4cda8","modified":1699000930057},{"_id":"themes/hexo-theme-matery/source/medias/barrager/close.png","hash":"045346df61ee01abe5018c5d9ba805d2831ce7b1","modified":1699000930058},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/10.jpg","hash":"98e7f6fd9c97d4de9044b6871ca08ebf14db11b9","modified":1699000930062},{"_id":"themes/hexo-theme-matery/source/medias/barrager/2.png","hash":"52b2b13373fe611ad2327b9b40426d6dc05b69cd","modified":1699000930058},{"_id":"themes/hexo-theme-matery/source/medias/barrager/1.png","hash":"b8c211690dba3addedfe7b928e3936cd487df0d6","modified":1699000930057},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/13.jpg","hash":"35a320174f8e316e3eadaec658024276b651c6e9","modified":1699000930064},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/15.jpg","hash":"da0fbee3b7bde1607eace377ddf834c0be99edfe","modified":1699000930066},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/16.jpg","hash":"97a829c4bc94f9d2929b20a1a9b798c57b9f7205","modified":1699000930067},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/2.jpg","hash":"4bba691cf71a517ecaeaf42afd3e8f8b31e346c1","modified":1699000930071},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/21.jpg","hash":"b26edb128bb0bf58b23fd2f014e9555e89a2ca3b","modified":1699000930071},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/22.jpg","hash":"754579747a3e99747d890fca3162f370b96a7941","modified":1699000930072},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/23.jpg","hash":"7d7f37da3fa7128343adac23866449eb2c6a549a","modified":1699000930073},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/3.jpg","hash":"6ec646c2a70f5f11edacf225c1477f2200a37a96","modified":1699000930074},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/5.jpg","hash":"41ca20129a37fedc573eec28dd7d7b9e5b09228a","modified":1699000930075},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/7.jpg","hash":"7975141cd64e875122c0ea33daaca1a06bf00b8e","modified":1699000930076},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/8.jpg","hash":"8e4b7186352085483ca1174c7c0800114c48df8b","modified":1699000930077},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.ttf","hash":"9b26d745a1e69b23d71b7ea36d5de1209c997901","modified":1699000929951},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff2","hash":"f7a09bcbd996fd634045d4e79b6504c945730686","modified":1699000929952},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/css/lightgallery.min.css","hash":"7873d80020ae04955bb57521bd249a6974d1180f","modified":1699000929984},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.svg","hash":"94c83160bddccf08bd7424de40d738716f1eeb3a","modified":1699000929985},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.ttf","hash":"49693fa946534a56d7e5d4274e1ce55b05d782c3","modified":1699000929986},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.woff","hash":"04f09ad797ced119d6608909d06e500f16a03bbb","modified":1699000929986},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-v4compatibility.ttf","hash":"3fc15c8154f8bd2d7bd1dfe55ae5ab1c33e5e40f","modified":1699000929958},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-v4compatibility.woff2","hash":"37ab2a6a0810d5a6c10a355fe1d7af0042bd6a2a","modified":1699000929958},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1699000929987},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/js/lightgallery-all.min.js","hash":"c55278b00976c96e1df949ca5afee79b8ab385b2","modified":1699000929989},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/video-play.png","hash":"2962e03ddbe04d7e201a5acccac531a2bbccddfc","modified":1699000929987},{"_id":"themes/hexo-theme-matery/source/libs/share/css/share.min.css","hash":"7126de5cec8371e580b7b1f22512da0985cc39e5","modified":1699000930031},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/youtube-play.png","hash":"f8d11384d33b7a79ee2ba8d522844f14d5067a80","modified":1699000929988},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1699000930032},{"_id":"themes/hexo-theme-matery/source/libs/share/js/jquery.share.min.js","hash":"de34668d902ec082d17ddb6dd7ad24255fb547c5","modified":1699000930035},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/vimeo-play.png","hash":"9b72fc0f86a01467ed0b68c9cc4d604ec316d517","modified":1699000929988},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.svg","hash":"1d56c9d5db0273f07c43cc1397e440f98ba7827a","modified":1699000930033},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1699000930034},{"_id":"themes/hexo-theme-matery/source/libs/share/js/social-share.min.js","hash":"ba635a17a9d9d132369f9fe4b1fbcaf001ea6ac9","modified":1699000930036},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1699000930034},{"_id":"themes/hexo-theme-matery/source/libs/fancybox/fancybox.js","hash":"eef46b6fb2e460838cd7328a6e13ecda0cb1e194","modified":1699000929972},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment.js","hash":"5a13983930b019450e4fe01a407c64b3dd316be4","modified":1699000929978},{"_id":"themes/hexo-theme-matery/source/libs/jquery/jquery-3.6.0.min.js","hash":"4cd5ddc413b3024d7b56331c0d0d0b2bd933f27f","modified":1699000929982},{"_id":"themes/hexo-theme-matery/source/medias/banner/0.jpg","hash":"69ec96cd9b4bc3aa631adc9da61353f50c39f031","modified":1699000930048},{"_id":"themes/hexo-theme-matery/source/medias/banner/2.jpg","hash":"39fb2535460ce66cc0b34e07ffb9411db1405f09","modified":1699000930051},{"_id":"themes/hexo-theme-matery/source/medias/banner/3.jpg","hash":"4ac047e92d0363b1a61ab756aca6dac13fb77494","modified":1699000930052},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/0.jpg","hash":"1c3300f029fc85d6dda6fa4f1d699551034cdaf7","modified":1699000930060},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/1.jpg","hash":"684ae89de8cb7acefae19f5aee6c612037c46393","modified":1699000930061},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/12.jpg","hash":"8a4b2e7d92ae95c3b0c921db23c35aa9a41a7d58","modified":1699000930064},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/11.jpg","hash":"f55972ce7175684f2b11c3c9fc2b5b14bccbfae8","modified":1699000930063},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/14.jpg","hash":"38e11221406785bcd93aa9cd23e568e164630ef1","modified":1699000930065},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/17.jpg","hash":"42d47903551ee81885c1386022982cae165841c5","modified":1699000930067},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/18.jpg","hash":"64829272ec85bb819d55ff89e5b5fd6f64aa436b","modified":1699000930069},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/19.jpg","hash":"eb250906fdbc0c408f42ae9933725bc1a05d79fb","modified":1699000930070},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/20.jpg","hash":"3b11f9b461168d907073f793190865fe621a8573","modified":1699000930071},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/4.jpg","hash":"e06c47de27619984be9d5d02947f8370a432dfea","modified":1699000930074},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/6.jpg","hash":"c8f2aa4bbb041158b4e73733a341e6a77c8583f7","modified":1699000930076},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/9.jpg","hash":"b956a2291a04b2132366b53666cf34858b8bdb1f","modified":1699000930078},{"_id":"themes/hexo-theme-matery/source/medias/reward/alipay.png","hash":"ddf2d1fbf44562dbb2438a7ae9b20fc792cd70da","modified":1624091596211},{"_id":"themes/hexo-theme-matery/source/medias/reward/wechat.png","hash":"3ea935f278de69cca1d4f73d9c380b9e32211b62","modified":1624091527156},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.min.css","hash":"6ceed6950e44336bb51f1b19d4658e4324afcebd","modified":1699000929947},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff2","hash":"e219af1e3bbc2219359d3d0916e263b279c4abfd","modified":1699000929950},{"_id":"themes/hexo-theme-matery/source/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1699000930059},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.js","hash":"104613de917a8576ff26aaa36d1c0c7bb4730f4e","modified":1699000929965},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.css","hash":"39900eba9a277f1e21080781ecfe2c3d1df50050","modified":1699000929992},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.js","hash":"7b49078d6297002fcb3e9a40381756b7079fdf8c","modified":1699000929993},{"_id":"themes/hexo-theme-matery/source/libs/waline/Waline.min.js","hash":"3a17de5f24e0437c3c681b15f147ceef3980736f","modified":1699000930046},{"_id":"themes/hexo-theme-matery/source/libs/valine/Valine.min.js","hash":"c2f2b1b0346e28ceae19f4b3d174f033311aa060","modified":1699000930042},{"_id":"themes/hexo-theme-matery/source/medias/banner/1.jpg","hash":"ab122a36998a4f62a61e61a4fc5e00248113413b","modified":1699000930049},{"_id":"themes/hexo-theme-matery/source/medias/banner/5.jpg","hash":"852418f4f09e796e12bc3bab7a1488d3f37d6486","modified":1699000930055},{"_id":"themes/hexo-theme-matery/source/medias/banner/6.jpg","hash":"ed7282cc129c4ff9f322d2f2897fb4aac5c48589","modified":1699000930056},{"_id":"themes/hexo-theme-matery/source/medias/images/02.jpg","hash":"a5b656606811f4d7e10307f48c0e3c373e0b886d","modified":1699000930083},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.css","hash":"9a8303b1c6334e2500da617810206ece45a8ac6b","modified":1699000929946},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.ttf","hash":"fa5745d421c0fc90928626be98e9f8cf7580b327","modified":1699000929950},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff2","hash":"1979128e8ba1517d85f5e4ee505abf486c51557c","modified":1699000929957},{"_id":"themes/hexo-theme-matery/source/js/crypto-js.js","hash":"ddacd177f23f65ff97b93b0417048f51928ee17e","modified":1699000929937},{"_id":"themes/hexo-theme-matery/source/libs/valine/av-min.js","hash":"e47dd1412564cd6aacc4e0a596fd83074a747870","modified":1699000930044},{"_id":"themes/hexo-theme-matery/source/medias/banner/4.jpg","hash":"e5ac5033678afa9d69edffe9a61004f836cb5734","modified":1699000930054},{"_id":"themes/hexo-theme-matery/source/medias/images/03.jpg","hash":"2bd3815508a9f5b0ae79aa780bc02ac80b2a354e","modified":1699000930085},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.ttf","hash":"e3339400ef6214cfa077d003daed2bfa659e2956","modified":1699000929956},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js","hash":"d1ec95821873a81eddf4e5698698b39d54d2a8cc","modified":1699000930039},{"_id":"source/_data/friends.json","hash":"519916312399331fdcee1d72ee4cef6b284908fb","modified":1699005048198},{"_id":"source/categories/index.md","hash":"739b2cbdc1be09fe9b33547ffb2c33ea85bfdc22","modified":1699004747271},{"_id":"source/404/index.md","hash":"90f34094e6c48f1a5f2fc3283076c61a5e7aab69","modified":1699241678148},{"_id":"source/about/index.md","hash":"c343854ab332a3cdba3b2a945bf6b2267afb9947","modified":1699004849703},{"_id":"source/about/me.md","hash":"898e1c85d0a79ae38508f4ec873d746e430ec4f2","modified":1699254960806},{"_id":"source/_posts/笔记.md","hash":"4d19137491802bd587930307990d1ba06c03afe1","modified":1699258678239},{"_id":"source/contact/index.md","hash":"e63ea68b0e75be2a6c0a52f60af3390080575912","modified":1699004879032},{"_id":"source/friends/index.md","hash":"892cce0bce4dc1e82e9bc5984983183c6e0b09d4","modified":1699004957108},{"_id":"source/tags/index.md","hash":"0cc19ccccccd899d351244ec3632de59793ca3a5","modified":1699004792740},{"_id":"source/_posts/笔记/笔记-23.png","hash":"5b20be8936f0e7aafe8e95295029401311ebb046","modified":1672136815099},{"_id":"source/_posts/笔记/笔记-30-1.png","hash":"198570ab853019f0274bde4048cd2877a2898952","modified":1689143855809},{"_id":"source/_posts/笔记/笔记-30-2.png","hash":"2986572cca4427dc341db41df873fb49ba9fd154","modified":1689143999669},{"_id":"source/_posts/Python/FastAPI/FastAPI-1：介绍.md","hash":"1a5e5a505195aac65df95c1536b732eeeec3ab92","modified":1699258036967},{"_id":"source/_posts/笔记/笔记-30-6.png","hash":"c2665bf5eb49604500e2fd1aefcae90108ff377b","modified":1689145508739},{"_id":"source/_posts/Python/FastAPI/FastAPI-2：快速入门.md","hash":"fb97fb5e1755f49fb0bcd11841b7515176eb36f5","modified":1699258512233},{"_id":"source/_posts/Python/FastAPI/FastAPI-3：uvicorn.run().md","hash":"dcf625f8a499f21d705b00f44e3f182072499c4f","modified":1699354490456},{"_id":"source/_posts/static/C/单精度浮点型.png","hash":"ad1abd4b9482bbc5a9119c46b51e258fd5f7841e","modified":1672136814848},{"_id":"source/_posts/static/C/常量.png","hash":"a44c441e3df8f7f6760fcf41fc287da7f2e1cb54","modified":1672136814849},{"_id":"source/_posts/static/C/双精度浮点型.png","hash":"362540f6fb68f3f53c821bfa90743585e7a2e0d1","modified":1672136814849},{"_id":"source/_posts/static/Typora/Typora设置中文字体-1.png","hash":"6675b5827a9200fa61e7f1e0c77acb294f691635","modified":1672136815069},{"_id":"source/_posts/static/Typora/Typora设置中文字体-2.png","hash":"9a6dad59c08d4f63c063b713dd5c95592d4fd057","modified":1672136815070},{"_id":"source/_posts/static/Typora/Typora设置中文字体-3.png","hash":"52f59562f790f1846a89d0d60d45bd01bacf85c5","modified":1672136815095},{"_id":"source/_posts/static/漏洞解决/漏洞解决-1.png","hash":"29af1ed3ead635d165a23b9f19a01f6a395c2816","modified":1675145169802},{"_id":"source/_posts/static/漏洞解决/漏洞解决-2.png","hash":"135bbb3455678653df6885615adc99c804639aca","modified":1675237724976},{"_id":"source/_posts/static/漏洞解决/漏洞解决-3.png","hash":"3be1f50014ec60380a6cfed74ed8e983ba45ec1b","modified":1675238957798},{"_id":"source/_posts/Python/FastAPI/FastAPI-2：快速入门/FastAPI-2：快速入门-1.png","hash":"ca7578a8d776f7fc424adb11ac0229d8ad4fa25d","modified":1672136814884},{"_id":"source/_posts/Python/FastAPI/FastAPI-2：快速入门/FastAPI-2：快速入门-2.png","hash":"bc29aa31601345e0530ec730e332827e55920b37","modified":1672136814885},{"_id":"source/_posts/Python/FastAPI/FastAPI-2：快速入门/FastAPI-2：快速入门-5.png","hash":"39d2df7ef2540b120aba4769b3b647a611218691","modified":1672136814889},{"_id":"source/_posts/static/AI/AI-4：线性回归算法详解/1.gif","hash":"aee300e14569f5ae5dda81bcf664d96cfc25e59f","modified":1672136814835},{"_id":"source/_posts/static/AI/AI-1：什么是人工智能/1.gif","hash":"df2225a49e8fc8e438af64a667a922e1a5fd489c","modified":1672136814794},{"_id":"source/_posts/static/AI/AI-4：线性回归算法详解/3.gif","hash":"517f953580f81512632d2b7fe2315c08e496f2e6","modified":1672136814837},{"_id":"source/_posts/static/AI/AI-4：线性回归算法详解/2.gif","hash":"686816c1df787ff8170e59249a3dec8686c5787d","modified":1672136814836},{"_id":"source/_posts/static/AI/AI-3：Python机器学习环境搭建/1.jpg","hash":"b22f4d21237e63f728a9a4d0bf3b3fa4f551a15a","modified":1672136814817},{"_id":"source/_posts/static/AI/AI-3：Python机器学习环境搭建/3.jpg","hash":"dc5f847c84f208f4096390061618bfd6fe54cbc1","modified":1672136814823},{"_id":"source/_posts/static/AI/AI-2：机器学习常用术语/1.gif","hash":"d75140e8702d8fc16301e8097a61aba6400bc8f7","modified":1672136814795},{"_id":"source/_posts/static/AI/AI-2：机器学习常用术语/2.gif","hash":"b870e528340f217365700689136e02db514a82f0","modified":1672136814795},{"_id":"source/_posts/static/AI/AI-2：机器学习常用术语/3.gif","hash":"eef4fe7063441a7b86cc3e548c7feddd7c4c1ab8","modified":1672136814803},{"_id":"source/_posts/static/AI/AI-2：机器学习常用术语/4.gif","hash":"cb8d146ac997d35143fb5d295ffd9e6fe9db70a6","modified":1672136814804},{"_id":"source/_posts/static/AI/AI-2：机器学习常用术语/6.gif","hash":"a7be44350bd30f51762bb2211ec173f8e3931aa8","modified":1672136814806},{"_id":"source/_posts/static/AI/AI-2：机器学习常用术语/5.gif","hash":"a0a61fa208d9edec47313d09e75e2d34e244a0bd","modified":1672136814805},{"_id":"source/_posts/static/AI/AI-5：构建线性回归模型/1.gif","hash":"ebe0f29b803fbe4ad8e13836ea651ffd3ebc2fe9","modified":1672136814837},{"_id":"source/_posts/static/AI/AI-2：机器学习常用术语/7.gif","hash":"aee300e14569f5ae5dda81bcf664d96cfc25e59f","modified":1672136814807},{"_id":"source/_posts/static/AI/AI-2：机器学习常用术语/8.gif","hash":"5cbd816aaab800febc349038e9a7e94298634ba3","modified":1672136814808},{"_id":"source/_posts/static/AI/AI-5：构建线性回归模型/2.gif","hash":"aee300e14569f5ae5dda81bcf664d96cfc25e59f","modified":1672136814838},{"_id":"source/_posts/static/AI/AI-5：构建线性回归模型/3.gif","hash":"fbb5827ec7fdbb9fdb2aaf4877cbad81c9e35c52","modified":1672136814839},{"_id":"source/_posts/static/AI/AI-6：数学解析线性回归/1.gif","hash":"19c0fe1a2342e3a93d5dba2e01f80f4ce1e4ca8d","modified":1672136814840},{"_id":"source/_posts/static/AI/AI-6：数学解析线性回归/2.gif","hash":"990e6d82b5ea5015469ba24ef54c172c177164e0","modified":1672136814841},{"_id":"source/_posts/static/AI/AI-6：数学解析线性回归/3.gif","hash":"f0e4a1d01bb3f66a907b33eda08b1bcb2f5bd1b4","modified":1672136814842},{"_id":"source/_posts/static/AI/AI-7：梯度下降求极值/1.gif","hash":"f851654d239c14b89fa1af9adbe7d7ee4d067dd2","modified":1672136814844},{"_id":"source/_posts/static/AI/AI-6：数学解析线性回归/4.gif","hash":"bc21e73ff1166d74100aecba74995b9ba170a2fd","modified":1672136814843},{"_id":"source/_posts/static/AI/AI-7：梯度下降求极值/2.gif","hash":"43c39f69575c4fea10763c58c5d30d33a8583967","modified":1672136814845},{"_id":"source/_posts/static/AI/AI-6：数学解析线性回归/5.gif","hash":"73b3196f56feb6f3678c13b9507224588ff75976","modified":1672136814843},{"_id":"source/_posts/static/AI/AI-7：梯度下降求极值/3.gif","hash":"552dcbbd487c84d86e7a7631f79fadb30bcd6308","modified":1672136814847},{"_id":"source/_posts/static/Git/Git-3：工作流程/1.png","hash":"a2a6720e9ee1359e1a49e79c42ca96216a0803fb","modified":1689581301784},{"_id":"source/_posts/static/Git/Git-2：安装配置/1.png","hash":"249184a5e65233dd59ffcf5a5dbab3f7dcda143c","modified":1689576614822},{"_id":"source/_posts/static/Git/Git-2：安装配置/2.png","hash":"c4e678916bb31df4a3c44b8d922d68251b09b2f1","modified":1689576862485},{"_id":"source/_posts/static/Docker/Docker-1：教程/0.png","hash":"94235f1b3eb3cf3b1174a4ecbeb5d9abd4fc716b","modified":1686813111454},{"_id":"source/_posts/static/Git/Git-1：教程/0.png","hash":"556ddd3520b26eb258c338ded9af62db99dfd821","modified":1689241942196},{"_id":"source/_posts/static/Git/Git-2：安装配置/3.png","hash":"1e42236bef92aedf6cb1755e46b3444d32a13816","modified":1689576995566},{"_id":"source/_posts/static/Hexo/使用Hexo建立一个轻量、简易、高逼格的博客/0.png","hash":"1acbb60d400ad2f532aa048315d0cbc066ca935e","modified":1698999260879},{"_id":"source/_posts/static/Docker/Docker-3：安装/0.png","hash":"1fc3c5b94f37f6c9b866c3b4b9a9d317cd7ac976","modified":1688028564472},{"_id":"source/_posts/static/PostgreSQL/PostgreSQL-1：教程/1.png","hash":"807ba66f6aa208d7ba6a9222934f830f6f5412c3","modified":1689303488867},{"_id":"source/_posts/static/Docker/Docker-3：安装/5.png","hash":"48fe4cbe86d5ba8b33890d3362557c142925c26d","modified":1688032048272},{"_id":"source/_posts/static/Docker/Docker-3：安装/6.png","hash":"ec86c6cccff4bfb3fb2075190600b0d1b37212f7","modified":1688032752654},{"_id":"source/_posts/static/Go/Go-3：Go语言结构/0.png","hash":"b3dcb0145bb86dcabf292601eb38a33b34c5a71c","modified":1685529071537},{"_id":"source/_posts/static/Docker/Docker-3：安装/7.png","hash":"d1fc83213235627823261a1a363a3271c4f26f79","modified":1688093574058},{"_id":"source/_posts/static/PostgreSQL/PostgreSQL-2：安装/12.png","hash":"50b0b872ce8374eccdf00a2e0dda6a3fb07dc9f8","modified":1689588564128},{"_id":"source/_posts/static/PostgreSQL/PostgreSQL-2：安装/10.png","hash":"c76d9409f0dd619d4aec4bafe8bbe9ca7cfd1d0e","modified":1689588373990},{"_id":"source/_posts/static/PostgreSQL/PostgreSQL-2：安装/11.png","hash":"ecca90ed30337228f8df8407d1d1a42821255f03","modified":1689588511210},{"_id":"source/_posts/static/PostgreSQL/PostgreSQL-2：安装/14.png","hash":"ae27973e3ca64a39afbeaf0dcde7550f089075d5","modified":1689588806712},{"_id":"source/_posts/static/PostgreSQL/PostgreSQL-2：安装/15.png","hash":"830186e8b02a8b8c93bdaeeec4d328b2daaef33a","modified":1689588847070},{"_id":"source/_posts/static/PostgreSQL/PostgreSQL-2：安装/13.png","hash":"6a14705046253ebcc2841311a01ef41d22ab30b4","modified":1689588725621},{"_id":"source/_posts/static/PostgreSQL/PostgreSQL-2：安装/16.png","hash":"f4823a53d17b4eda335c07198954c666cb90b6dd","modified":1689588900912},{"_id":"source/_posts/static/PostgreSQL/PostgreSQL-2：安装/17.png","hash":"b294a3723db6e20af643d00521d283b56e4ae4f9","modified":1689589022057},{"_id":"source/_posts/static/PostgreSQL/PostgreSQL-2：安装/19.png","hash":"b6558cadbd12f807dc7fe55154ba8bde2ea164cd","modified":1689589327458},{"_id":"source/_posts/static/PostgreSQL/PostgreSQL-2：安装/18.png","hash":"3b8b96db341caeca860898bcdaefc3e9e6066251","modified":1689589070464},{"_id":"source/_posts/static/PostgreSQL/PostgreSQL-2：安装/4.png","hash":"0c91d04bf6aa7f84f7fef6178d8be75f73031727","modified":1689315589007},{"_id":"source/_posts/static/PostgreSQL/PostgreSQL-2：安装/5.png","hash":"9e3ec19ff79ed699aa35b0a225995bf5f5b160d2","modified":1689323715945},{"_id":"source/_posts/static/PostgreSQL/PostgreSQL-2：安装/6.png","hash":"6f3c3730030c5d961c841dca8909b1420ccb6d13","modified":1689323877877},{"_id":"source/_posts/static/Python/Python-2：环境搭建/4.png","hash":"673a9f114e93af37426ea8b5c42ffc004a952d10","modified":1695626266858},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-10：详解Body-1.png","hash":"c59aceeb1f34198ddc145798b38e607598ae69eb","modified":1672136814857},{"_id":"source/_posts/static/Python/Python-2：环境搭建/9.png","hash":"ef7e7025d59054f19c11a3c5fff2a5bac72d6d5a","modified":1695628204956},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-10：详解Body-3.png","hash":"e4b794d661dd6beecc7a18adc62be43f22e38bab","modified":1672136814861},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-10：详解Body-6.png","hash":"7b10010ea8b284ec54df8b1a236671cca18b9f25","modified":1672136814866},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-10：详解Body-7.png","hash":"c542b61c85675c8cd785a051930aba3a452a2f21","modified":1672136814867},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-10：详解Body-8.png","hash":"67662bc4ed5379fe0f2443ff3beb508dd683df57","modified":1672136814869},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-10：详解Body-9.png","hash":"d625485179127361facfd9fbe00a0e1a80cb4389","modified":1672136814870},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-11：函数参数类型是list参数-1.png","hash":"da4292ba2e9162aecae3810d43e440ee2b2ec507","modified":1672136814872},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-12：重名Pydantic Model会导致OpenAPI报错-1.png","hash":"37f2fc374833b1fcabb78b9a00b59b85d47cb201","modified":1672136814874},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-12：重名Pydantic Model会导致OpenAPI报错-2.png","hash":"ade25c8e6cb4d3050b0204cdb6b197d2d8e3be17","modified":1672136814875},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-11：函数参数类型是list参数-2.png","hash":"c78736a20057497b95b8d4465bfe377da4222550","modified":1672136814873},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-13：详解Fields-1.png","hash":"5597d0d2371b957be56ae12c01f61ee2fb38af73","modified":1672136814877},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-13：详解Fields-3.png","hash":"621fd104dc501c0d36e2ef481507cef62b184610","modified":1672136814878},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-13：详解Fields-2.png","hash":"4787eb01f7b161a51a001de56329078bbfcb8d32","modified":1672136814877},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-13：详解Fields-5.png","hash":"3306b6fc169191a48a09fd8de28e1ec988222906","modified":1672136814880},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-13：详解Fields-4.png","hash":"7d88c583b73ffec7151db14ca6c761632c8e049f","modified":1672136814879},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-13：详解Fields-6.png","hash":"79f4527e54582b2d79975af5f92d200b16112a32","modified":1672136814882},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-4：路径参数Path Parameters-1.png","hash":"89d397e7c5d8c4c2c0ab2f618e9a20df2574b1e5","modified":1672136814891},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-4：路径参数Path Parameters-10.png","hash":"35127d55c762ed55aaaeaf386c0f5389b4688405","modified":1672136814892},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-4：路径参数Path Parameters-11.png","hash":"7e57bcad01114b4c6f172869e3bdb17a7926c68c","modified":1672136814893},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-4：路径参数Path Parameters-12.png","hash":"96a0914b3af3655a170ee5249f013c54b94bfb2b","modified":1672136814897},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-4：路径参数Path Parameters-2.png","hash":"924690ddbdd8a9b8e97d8731680d5142e5d842ce","modified":1672136814898},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-4：路径参数Path Parameters-4.png","hash":"e93123dfdf4297cc87b2fcacb35bf62be5308da5","modified":1672136814900},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-4：路径参数Path Parameters-3.png","hash":"8bb7e0c86ecb171daa5ab68464c8b40ab986785b","modified":1672136814899},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-4：路径参数Path Parameters-6.png","hash":"0500787547dce13e8cd619739cdbbb6bf1d37cf0","modified":1672136814902},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-4：路径参数Path Parameters-5.png","hash":"84206c18579896fb4c5ee81ac8e3a7deb925ed9b","modified":1672136814901},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-4：路径参数Path Parameters-7.png","hash":"63f5012157c792de3339163f4e12515fc39439a3","modified":1672136814902},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-4：路径参数Path Parameters-8.png","hash":"f15fe3f32252efce9d85c9537be41c0b152b1bf2","modified":1672136814904},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-4：路径参数Path Parameters-9.png","hash":"abbdaf3e3b93dc19654dca9fc37b591e649120ec","modified":1672136814906},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-5：查询参数Query Parameters-2.png","hash":"6bb83aa10ae7cc536894ef68c0c53a3b21642a41","modified":1672136814921},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-5：查询参数Query Parameters-1.png","hash":"a6c10acd6458cc059a3e00abc9d749aa51128184","modified":1672136814906},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-5：查询参数Query Parameters-3.png","hash":"ef8b348918d7a69fa0a4ec7a80f8701a81f14562","modified":1672136814922},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-5：查询参数Query Parameters-4.png","hash":"c9bbf0aa19c8fbed60033252069164e48dbdc00e","modified":1672136814923},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-5：查询参数Query Parameters-5.png","hash":"ffb3d4d140773f3a0eae2e41f01821daba24d73b","modified":1672136814924},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-5：查询参数Query Parameters-6.png","hash":"3e9e5944632f36129279355f0d60934cc221a5f3","modified":1672136814926},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-5：查询参数Query Parameters-7.png","hash":"b3959e46de32504b4fe9192fbec864b412b6d655","modified":1672136814927},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-5：查询参数Query Parameters-8.png","hash":"cb0bfa454b6b22b3050adedff73ec11efd0520b9","modified":1672136814932},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-6：Query库详解-1.png","hash":"d41c285fc2eb46232cb0fe0bfd4182ae144b77bb","modified":1672136814933},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-6：Query库详解-11.png","hash":"88fb7fbc146e545e3a5d34987c0df627b03ae6f8","modified":1672136814934},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-6：Query库详解-10.png","hash":"845fa7737ae335932f8e515e4bd4d9a4cd70d509","modified":1672136814934},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-6：Query库详解-12.png","hash":"900898a6cf67c11d62696839d4f85385873ea5ae","modified":1672136814935},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-6：Query库详解-13.png","hash":"345458d21b11a98f706a9f177316727865d5a50b","modified":1672136814936},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-6：Query库详解-14.png","hash":"b2a74eef6138a122f250c8ef583c442d2dbcd73a","modified":1672136814937},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-6：Query库详解-15.png","hash":"f9a47c21fdd7eadde1978cb32a25acaac7da14fe","modified":1672136814938},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-6：Query库详解-16.png","hash":"e2c18a641b806c42f925f65bba0dac3a0c3576cb","modified":1672136814938},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-6：Query库详解-17.png","hash":"4d97301617697cc3b9faa07935cbb30896bbcb1a","modified":1672136814939},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-6：Query库详解-18.png","hash":"18e43e7b41ad00e3adc3e7d52d43ceff27820c9a","modified":1672136814940},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-6：Query库详解-19.png","hash":"7521b06afa81795a8a0f441e3b7609c0f4522a22","modified":1672136814940},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-6：Query库详解-2.png","hash":"21ab6dfdde1334e5f009da05e430a7b2239456c9","modified":1672136814942},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-6：Query库详解-20.png","hash":"c5ad5d5a464f7d3b44d096658a9bd506f6bdf3e0","modified":1672136814943},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-6：Query库详解-3.png","hash":"dbef20a109db371d9389d46bfa2f00ae0990e885","modified":1672136814944},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-6：Query库详解-4.png","hash":"1fdc936a912d709b6d5cca6266f39eff6ddf4e66","modified":1672136814945},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-6：Query库详解-5.png","hash":"226fbc99f518c5eade5b3849c6c0c2466a89c27c","modified":1672136814946},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-6：Query库详解-6.png","hash":"35eeb423c34c95c5a29d991ebbf5203bce18ea10","modified":1672136814946},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-6：Query库详解-7.png","hash":"01eefd267ea8bbe3e431790980bc4050273d2e64","modified":1672136814947},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-6：Query库详解-8.png","hash":"340c57fcf892e6139c849face896396077ff548a","modified":1672136814948},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-6：Query库详解-9.png","hash":"3fc918e9968adc6fcfa25005247006613df7fd91","modified":1672136814948},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-7：详解Path-1.png","hash":"fe02c9fed67cd77bf2e6c6d4d5b2e691eff13721","modified":1672136814950},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-7：详解Path-10.png","hash":"a81f323769620801f1f7a38600fab51f2ffa03fe","modified":1672136814950},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-7：详解Path-11.png","hash":"c10baff96a685fc531b205e1e99e4d0b06a663d4","modified":1672136814951},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-7：详解Path-12.png","hash":"3c1f651682ee086e029f8ff65845325a33ace102","modified":1672136814952},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-7：详解Path-13.png","hash":"c93521672347bb1e9cabc37ebab897f08cb9e1b3","modified":1672136814953},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-7：详解Path-14.png","hash":"404b014068a4879c35bf4830cfcb05c0a82b473f","modified":1672136814954},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-7：详解Path-15.png","hash":"31c613d3a63f9af6eb2ea1444efe1901182538f2","modified":1672136814957},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-7：详解Path-2.png","hash":"f8723c789dd624b7568635aa43eb09dd8a97e006","modified":1672136814963},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-7：详解Path-16.png","hash":"886c40b58a0823d50a720810e733897c1c6d03f1","modified":1672136814961},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-7：详解Path-3.png","hash":"f699f1051b740e39470860e3b488fb65cc57e761","modified":1672136814964},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-7：详解Path-4.png","hash":"f3ac1832e2dd3f3e6f246d1bb74e24fe131a6786","modified":1672136814964},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-7：详解Path-5.png","hash":"c0156ae47b8bc613fb3a20bceca425d7fac0ba77","modified":1672136814967},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-7：详解Path-7.png","hash":"440355a0acdd25d8687352d6f698443f8fd29c57","modified":1672136814969},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-7：详解Path-6.png","hash":"2dd8344cdd6b74e19c68c0a2bdd253296adb7d6e","modified":1672136814968},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-7：详解Path-8.png","hash":"528ad74672827ec3599826fe21d789c9c02857b2","modified":1672136814970},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-7：详解Path-9.png","hash":"f88d4087b4c7811cf32423d2d654d49909a1f687","modified":1672136814970},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-8：请求体Request Body-10.png","hash":"1a54c67a829d5420bfb4833523e957fc40ebd1bc","modified":1672136814973},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-8：请求体Request Body-11.png","hash":"1e9b06511fba71c7d0aaacb7255a1bc13fd98be6","modified":1672136814988},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-8：请求体Request Body-2.png","hash":"e9c406fcab367e7b1d288a9b6d360cb409ae9374","modified":1672136815013},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-8：请求体Request Body-3.png","hash":"e5269f5eae08d6619f8c1e90905c29363cdfaf8c","modified":1672136815029},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-8：请求体Request Body-4.png","hash":"d30970ec2db6a27b329fcf2b29ab8d3215a2de97","modified":1672136815031},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-8：请求体Request Body-5.png","hash":"0968ac948cf4b206d149192ffbc40759bf160107","modified":1672136815032},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-8：请求体Request Body-7.png","hash":"0f1fb04ce6287e735fd5adef4df2bd07d367a6ac","modified":1672136815042},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-8：请求体Request Body-9.png","hash":"2c90f66b208ed1f425f9c9874e707ddde4efb467","modified":1672136815046},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-9：多个Request Body-1.png","hash":"d2c613b8127b38a850efea035acc09976ed0ce6c","modified":1672136815054},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-9：多个Request Body-2.png","hash":"d71740fd17b554160b87a92f85fcb8da822a1281","modified":1672136815056},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-9：多个Request Body-5.png","hash":"8c32ac292dd773f11defa9dca504ee625c682a06","modified":1672136815060},{"_id":"source/_posts/static/Python/Python-3：VScode/3.png","hash":"f90d8ec22b2da4f13d89c5e33a7987ed17a270eb","modified":1695631001232},{"_id":"source/_posts/static/Linux/CentOS/没有可用依赖包 - 解决/1.png","hash":"bcff8c0c948864d02b2b76d236738940b46942c4","modified":1689313306430},{"_id":"source/_posts/static/Linux/Command/chmod/chmod-1.jpg","hash":"4ac1e6fb1ca3f82a1fb5798c305d7e14f382e3a4","modified":1672136814855},{"_id":"source/_posts/static/Linux/Command/chmod/chmod-2.png","hash":"fd1f349cff555aef56ac330552736bb2470cbaf9","modified":1672136814856},{"_id":"source/_posts/static/Python/Flask/Flask-10：标准类视图/0.png","hash":"17f127eaf19cbacd6154be6eaf3862471a46a162","modified":1677147513133},{"_id":"source/_posts/static/Python/Flask/Flask-11：操作Cookie/1.png","hash":"a1b84c7370e1166e7d3593f4371f2c94024b5631","modified":1677203899102},{"_id":"source/_posts/static/Python/Flask/Flask-11：操作Cookie/3.png","hash":"2c84f89a80870b4cef44a6b7555dbd79a4471975","modified":1677204002796},{"_id":"source/_posts/static/Python/Flask/Flask-12：操作Session/1.png","hash":"75164b2443c12fbbb223481ac89b58f991949a3c","modified":1677206116677},{"_id":"source/_posts/static/Python/Flask/Flask-12：操作Session/0.png","hash":"5fe62c9186b52cbf8c42e8f0fce6b578a712ef62","modified":1677205929725},{"_id":"source/_posts/static/Python/Flask/Flask-12：操作Session/2.png","hash":"b8e2cb04448ed7d5fef56550359511e6907a72ef","modified":1677206164494},{"_id":"source/_posts/static/Python/Flask/Flask-1：介绍/0.png","hash":"47dd5bef92e46d05f0f257fd51fd0930d3d1fef0","modified":1676280523077},{"_id":"source/_posts/static/Python/Flask/Flask-2：第一个Flask Application/0.png","hash":"7cbde179d1b16aca7a43317520ef74e8b573dd5d","modified":1676338645430},{"_id":"source/_posts/static/Python/Flask/Flask-12：操作Session/4.png","hash":"f6e5ef526ebb67e607222818ee0866f617b61016","modified":1677206198553},{"_id":"source/_posts/static/Python/Flask/Flask-12：操作Session/3.png","hash":"f6e5ef526ebb67e607222818ee0866f617b61016","modified":1677206211705},{"_id":"source/_posts/static/Python/Flask/Flask-5：动态路由/0.png","hash":"c90b63b4b3eddf705a73d6149301d057638a87a4","modified":1676368231513},{"_id":"source/_posts/static/Python/Flask/Flask-2：第一个Flask Application/1.png","hash":"26458d4c57945ccad0a830033fc53397776bd3cc","modified":1676338750601},{"_id":"source/_posts/static/Python/Flask/Flask-5：动态路由/1.png","hash":"4b9579bf94a3cab2aa54eaf164c60a3b5e2b4e6e","modified":1676369234346},{"_id":"source/_posts/static/Python/Flask/Flask-5：动态路由/2.png","hash":"b6231151d5a92972c8f1e3ceb2a8017dff50687d","modified":1676369337024},{"_id":"source/_posts/static/Python/Flask/Flask-5：动态路由/4.png","hash":"697583d87f23eecaeabe262b3044a23695632d75","modified":1676369478480},{"_id":"source/_posts/static/Python/Flask/Flask-5：动态路由/3.png","hash":"713b7976d51ff6173efd7f92f78028b40f8686e1","modified":1676369436846},{"_id":"source/_posts/static/Python/Flask/Flask-5：动态路由/5.png","hash":"4d49031bc4d4642c1ab84006851cf31f9e56dc36","modified":1676369575571},{"_id":"source/_posts/static/Python/Flask/Flask-5：动态路由/6.png","hash":"db9d25122f9a6a79553e8663c4f7b7f942429bb7","modified":1676369675847},{"_id":"source/_posts/static/Python/Flask/Flask-5：动态路由/7.png","hash":"2c005e692fe28844fac1bd634ad17ab8385109e2","modified":1676370025610},{"_id":"source/_posts/static/Python/Flask/Flask-3：Flask中的HTTP方法/0.png","hash":"730dfe84089939ab752fd7fb81827a44fe312492","modified":1676363373661},{"_id":"source/_posts/static/Python/Flask/Flask-3：Flask中的HTTP方法/1.png","hash":"e3b36b3d5de96acf66b9dfcb9a96e8087c0a4e7f","modified":1676364214597},{"_id":"source/_posts/static/Python/Flask/Flask-3：Flask中的HTTP方法/2.png","hash":"84d1f290f6779f6373fd252f2afad5940ec431f3","modified":1676364749303},{"_id":"source/_posts/static/Python/Flask/Flask-3：Flask中的HTTP方法/3.png","hash":"f3d2ca6e4a26c0d2fbc6c82212a7277651c9c4d6","modified":1676364788000},{"_id":"source/_posts/static/Python/Flask/Flask-3：Flask中的HTTP方法/4.png","hash":"3da7a797f6fcf19e721d72f709b4b078e6cfdc80","modified":1676365024155},{"_id":"source/_posts/static/Python/Flask/Flask-4：URL组成部分详解/0.png","hash":"f6521c73e5562ddf11b4e1b66f4b844bd303046e","modified":1676366550710},{"_id":"source/_posts/static/Python/Flask/Flask-6：Debug模式/0.png","hash":"12d03eb9d09efdfb89136f8607101b2f2ad0f066","modified":1676450296577},{"_id":"source/_posts/static/Python/Flask/Flask-3：Flask中的HTTP方法/5.png","hash":"bb78de5d6abc562d2872eeb95c0ec044b90b5488","modified":1676365104729},{"_id":"source/_posts/static/Python/Flask/Flask-3：Flask中的HTTP方法/6.png","hash":"f0b5441b03723ffbfeb678d797a420e1c38354fc","modified":1676365326166},{"_id":"source/_posts/static/Python/Flask/Flask-3：Flask中的HTTP方法/7.png","hash":"9a00c3a30221b41e30cace11245470ae161f817c","modified":1676365357415},{"_id":"source/_posts/static/Python/Flask/Flask-4：URL组成部分详解/1.png","hash":"1f18a4e063bc6e522e907255afc4fa7ec805456b","modified":1676366599655},{"_id":"source/_posts/static/Python/Flask/Flask-7：request对象/0.png","hash":"f593b27be01423fe39bf730e600686bba94c35e1","modified":1676452963980},{"_id":"source/_posts/static/Python/Flask/Flask-6：Debug模式/2.png","hash":"58117119ca0b8c8cf0dbd2a8a758ce9533318020","modified":1676451376571},{"_id":"source/_posts/static/Python/Flask/Flask-6：Debug模式/3.png","hash":"c3c8fadfefb875df3b6d5c38f40c1f5bd66f31d2","modified":1676451502638},{"_id":"source/_posts/static/Python/Flask/Flask-7：request对象/10.png","hash":"fd8cb0246dc1583fc649500c329fb9d3558dd548","modified":1676454447256},{"_id":"source/_posts/static/Python/Flask/Flask-7：request对象/1.png","hash":"7673a25bfc5c105e83cb2b81d24b58223fbc7123","modified":1676453232528},{"_id":"source/_posts/static/Python/Flask/Flask-7：request对象/11.png","hash":"ee44c856a6145e5fca3dae1cfa37d1332c19f734","modified":1676454496063},{"_id":"source/_posts/static/Python/Flask/Flask-7：request对象/12.png","hash":"388558193a59b7afb42423af6be5000e5bec8f55","modified":1676454542488},{"_id":"source/_posts/static/Python/Flask/Flask-7：request对象/13.png","hash":"abfd77a4d6016f6858e18d96a287e7db61b580fb","modified":1676454762924},{"_id":"source/_posts/static/Python/Flask/Flask-7：request对象/15.png","hash":"911e96b1dd81129c1ee316dcad91d1f1d5d75b23","modified":1676455108310},{"_id":"source/_posts/static/Python/Flask/Flask-7：request对象/2.png","hash":"688d659396793bcea888e5b1fd7e251425584df2","modified":1676453375950},{"_id":"source/_posts/static/Python/Flask/Flask-7：request对象/4.png","hash":"07cf5ea89506a199531da919c6ddd9b0e58485c2","modified":1676453770537},{"_id":"source/_posts/static/Python/Flask/Flask-7：request对象/3.png","hash":"546e80ed082a4e91f19fa66354bde491481ef0e9","modified":1676453473189},{"_id":"source/_posts/static/Python/Flask/Flask-7：request对象/5.png","hash":"522d22bdd8e858f15246916495250d3201a979ed","modified":1676453824982},{"_id":"source/_posts/static/Python/报错积累/ERROR[WinError 10013] 以一种访问权限不允许的方式做了一个访问套接字的尝试/1.png","hash":"73f7200512d919f19c00db98c31be0ab27179b1a","modified":1686031547365},{"_id":"source/_posts/static/Python/Flask/Flask-7：request对象/6.png","hash":"57712a8db396c6bcccbf431e01886ad23b9d7047","modified":1676453883770},{"_id":"source/_posts/static/Python/Flask/Flask-7：request对象/7.png","hash":"6674c9c2eb3768df2fbdae18af2115b6788becab","modified":1676453975170},{"_id":"source/_posts/static/Python/报错积累/ERROR[WinError 10013] 以一种访问权限不允许的方式做了一个访问套接字的尝试/0.png","hash":"e7e0a5a4cb4856b93d5feecb0bc7f394eaa2a330","modified":1686031415383},{"_id":"source/_posts/static/Python/Flask/Flask-9：蓝图的基本作用/0.png","hash":"36350751d597e4c53f3b41ec76b1c39ff927d444","modified":1676947315303},{"_id":"source/_posts/static/Python/Flask/Flask-7：request对象/9.png","hash":"82e9c6cc227648a2cb26ea83a8c51143d6eb700a","modified":1676454398989},{"_id":"source/_posts/static/Python/Flask/Flask-7：request对象/8.png","hash":"2bc9ceee81f541b8a20084c494d179ca103f7d79","modified":1676454344381},{"_id":"source/_posts/static/Python/Flask/Flask-9：蓝图的基本作用/1.png","hash":"9a2d6c4b43856379675ac535e095b882396b7714","modified":1677054892003},{"_id":"source/_posts/static/Python/Flask/Flask-9：蓝图的基本作用/2.png","hash":"9159576286a5ee2602658365bcbee3580a3d3a14","modified":1677055105937},{"_id":"source/_posts/static/Python/Flask/Flask-8：jinja模板入门/0.png","hash":"0c389e4fa05a922cd559dd815323d5c2539f172d","modified":1676886068900},{"_id":"source/_posts/static/Python/Flask/Flask-9：蓝图的基本作用/3.png","hash":"1f6cab94ee43823fa6d4eb244588af3efa65a400","modified":1677143978155},{"_id":"source/_posts/static/Python/Flask/Flask-9：蓝图的基本作用/4.png","hash":"e2500f1b1d63dd9728f0886982fb37ae64518ab2","modified":1677145680664},{"_id":"source/_posts/static/Python/Flask/Flask-9：蓝图的基本作用/5.png","hash":"e857e949be253cbc05de0ed4c0c90b02de47b665","modified":1677146168349},{"_id":"source/_posts/static/Python/Flask/Flask-9：蓝图的基本作用/6.png","hash":"5219e976881781d6f841640eeb311112312802f5","modified":1677146303159},{"_id":"source/_posts/static/Python/Flask/Flask-8：jinja模板入门/1.png","hash":"43ef1df622a327b087e6a98b04fcd1ead52da2d8","modified":1676886631023},{"_id":"source/_posts/static/Python/基础/基础-1：变量与数据类型/0.png","hash":"a397b9dcf5141b78806c7ee75bbb00e75148f603","modified":1682307392682},{"_id":"source/_posts/static/Python/Flask/Flask-8：jinja模板入门/2.png","hash":"a38cf63c8900ddd4cdb64a1d264b9655adc58459","modified":1676887970437},{"_id":"source/_posts/static/Python/Flask/Flask-8：jinja模板入门/3.png","hash":"ac86aefa7a5526c815199f6dc43c892e7ea7b520","modified":1676888385355},{"_id":"source/_posts/static/Python/报错积累/PyCharm-F10运行时中文内容乱码/2.png","hash":"32d23e63fe3440f9cc8b3d9f069846a7a8628bb7","modified":1689237635458},{"_id":"source/_posts/static/Python/Flask/Flask-8：jinja模板入门/4.png","hash":"c4e174fef94b8e4c6aa3ab064fa40fc07cbebfd1","modified":1676888640438},{"_id":"source/_posts/static/Python/报错积累/新建文件夹/0.png","hash":"1e6d7f771ba326cbf79d82a8e5202f06216ebae7","modified":1677808786336},{"_id":"source/_posts/static/Python/报错积累/PyCharm-F10运行时中文内容乱码/3.png","hash":"cf955a089d30c8d5f9cd2120aeba4d1cca68978d","modified":1689237018782},{"_id":"source/_posts/static/Python/报错积累/新建文件夹/1.png","hash":"2af483b26fdd4b10b4948452396f23c7183a10ec","modified":1677808824316},{"_id":"source/_posts/static/Python/报错积累/PyCharm-F10运行时中文内容乱码/4.png","hash":"fea6f8844fc04acdb28a67be9175309cbaf9a6a8","modified":1689237687354},{"_id":"source/_posts/static/Python/报错积累/新建文件夹/2.png","hash":"2a7c5b8d0d69898f4dea5e2f29f0448f0ff7306a","modified":1677809111539},{"_id":"source/_posts/static/Python/三方库/NumPy/NumPy-10：广播机制/1.gif","hash":"733f17a6edbabb3f902c5287eeaeef2f3554cb69","modified":1672136815063},{"_id":"source/_posts/static/Python/三方库/NumPy/NumPy-3：ndarray对象/1.jpg","hash":"b9ef839da8e08793ceb2e2ffce609e784c427302","modified":1672136815065},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.min.js","hash":"80063546f828243e2345670701656b735fc3ead8","modified":1699000930030},{"_id":"themes/hexo-theme-matery/source/medias/images/01.jpg","hash":"6a81f437fb876666bafaa98b2a09bd8bd7f21832","modified":1699000930082},{"_id":"source/_posts/笔记/笔记-29.png","hash":"3fa74bc7a3894949e47f6266a0af7317baf8bbd1","modified":1676269377731},{"_id":"source/_posts/笔记/笔记-24.png","hash":"3a8712d536f469146ee70255dfdd5ce946772015","modified":1672136815100},{"_id":"source/_posts/static/Go/Go-2：Go语言环境安装-1.png","hash":"187ea1c792d29219ebd50cb6bafb47d89ee35ccd","modified":1672136814852},{"_id":"source/_posts/static/Typora/Typora设置中文字体-4.png","hash":"1b6e977c229a59e973293c3b3a7b636af014e899","modified":1672136815096},{"_id":"source/_posts/static/Typora/Typora设置中文字体-5.png","hash":"b7ec387a01f6aa0de796510df9347793b37d7cb0","modified":1672136815098},{"_id":"source/_posts/Python/FastAPI/FastAPI-2：快速入门/FastAPI-2：快速入门-3.png","hash":"5b59498a89a6f78f93c93bca058803ce9f4117a8","modified":1672136814886},{"_id":"source/_posts/Python/FastAPI/FastAPI-2：快速入门/FastAPI-2：快速入门-4.png","hash":"661948e42bee386430aa9486847de102df5be8e0","modified":1672136814888},{"_id":"source/_posts/static/AI/AI-3：Python机器学习环境搭建/2.jpg","hash":"4184556cda21ba5133e61c80011e0ed2ec3aacb8","modified":1672136814822},{"_id":"source/_posts/static/AI/AI-3：Python机器学习环境搭建/4.jpg","hash":"e64956597db64186d852ec927e3423398a325e82","modified":1672136814826},{"_id":"source/_posts/static/Docker/Docker-2：架构/0.png","hash":"69ed311cbb3db4a725560e6a129b53b73e4042ef","modified":1686813778745},{"_id":"source/_posts/static/Docker/Docker-3：安装/2.png","hash":"6a66ea1b9f9b78cbb1d63d4ccd796dbaf66c4ede","modified":1688030830824},{"_id":"source/_posts/static/Docker/Docker-3：安装/3.png","hash":"464e6cbcaa931afba1df38827b7ad6ffb96bdc09","modified":1688031164073},{"_id":"source/_posts/static/Docker/Docker-3：安装/9.png","hash":"0932731a9610fa03a2635d652cd54fb1f23893a2","modified":1688094526928},{"_id":"source/_posts/static/PostgreSQL/PostgreSQL-2：安装/2.png","hash":"d2e6cbab000218d3967eee42021e60c293a75491","modified":1689304394000},{"_id":"source/_posts/static/PostgreSQL/PostgreSQL-2：安装/3.png","hash":"c08ce0c6c79ad23330a9a6eb3c2bd7985beee702","modified":1689314741577},{"_id":"source/_posts/static/PostgreSQL/PostgreSQL-2：安装/7.png","hash":"79114466f015f746abcdbadb19c9b0ab3c080c5a","modified":1689324049509},{"_id":"source/_posts/static/PostgreSQL/PostgreSQL-2：安装/8.png","hash":"665768abeef255556f194c44be69d68bd2f3da1e","modified":1689324190615},{"_id":"source/_posts/static/PostgreSQL/PostgreSQL-2：安装/9.png","hash":"95879900d597bac80b23d1688aeb572b31fa4eb5","modified":1689305429691},{"_id":"source/_posts/static/Python/Python-2：环境搭建/3.png","hash":"9607441e776a585baf99feff02c8cf0c0c674c9f","modified":1695626047364},{"_id":"source/_posts/static/Python/Python-2：环境搭建/7.png","hash":"d80c6fc13af32efaef3fb86fb103f0c96a6e4506","modified":1695627189563},{"_id":"source/_posts/static/Python/Python-2：环境搭建/8.png","hash":"169ec5c04d0e2c9a16d981b7f15b9e794ee25664","modified":1695628119296},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-10：详解Body-2.png","hash":"3b9ebf624e87264dd60ed152f14d532662c7ae77","modified":1672136814859},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-10：详解Body-4.png","hash":"88400c8e83c99127234e39b58f7da9819c4e4f6f","modified":1672136814862},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-10：详解Body-5.png","hash":"969735af3f67e550b6082963124b046df7823dd3","modified":1672136814863},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-13：详解Fields-7.png","hash":"e547a026ee3cbf6657d11a4324bda48792c1bc7a","modified":1672136814883},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-8：请求体Request Body-1.png","hash":"894cddb4a14e8042b16eda11cd0ab252eabcf689","modified":1672136814973},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-8：请求体Request Body-6.png","hash":"e87a8d405805f356490149d265fba705cc12d5ec","modified":1672136815040},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-8：请求体Request Body-8.png","hash":"c99ebb7c3542fdf4adfdde3d0cb8405633f2934a","modified":1672136815044},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-9：多个Request Body-3.png","hash":"fb0218448542411873f94f48b0387def03de87e4","modified":1672136815058},{"_id":"source/_posts/static/Python/FastAPI/FastAPI-9：多个Request Body-4.png","hash":"60d24c7d1a36be40d271d7700e98d2dc7e88b75a","modified":1672136815059},{"_id":"source/_posts/static/Python/Python-3：VScode/2.png","hash":"63d78e3c71160269620323fcc0486e5c6c83a9ce","modified":1695630924598},{"_id":"source/_posts/static/Python/FastAPI/background_task-1.png","hash":"b5306d62f79632e2958fae7d09e851d442fd2c64","modified":1672136815062},{"_id":"source/_posts/static/Python/Python-3：VScode/5.png","hash":"453513bd6747812bc6956a8c1c3944ec7c5c5e35","modified":1695631315631},{"_id":"source/_posts/static/Python/Python-3：VScode/6.png","hash":"968ddee1a5cae1484fd432e8a418a5728fad4f51","modified":1695631491885},{"_id":"source/_posts/static/Python/Python-3：VScode/7.png","hash":"4f5d1a9d67b213f7e2e697d40081f6b4cca8dc66","modified":1695631990754},{"_id":"source/_posts/static/Python/Python-3：VScode/8.png","hash":"9ff62c768ab51968efd92d5a07562cb0ee31d272","modified":1695632174575},{"_id":"source/_posts/static/Python/Flask/Flask-11：操作Cookie/0.png","hash":"b51f9dc2272bcdbeb503468909003b50f48620a9","modified":1677203848642},{"_id":"source/_posts/static/Python/Flask/Flask-11：操作Cookie/2.png","hash":"dacba212f61fdef33c4630f901246b8991432812","modified":1677203965206},{"_id":"source/_posts/static/Python/Flask/Flask-7：request对象/14.png","hash":"4336947c5335c091655e02030c67193f556de587","modified":1676455013340},{"_id":"source/_posts/static/Python/报错积累/PyCharm-F10运行时中文内容乱码/0.png","hash":"6183551b591d3caac9a3ee347feb4255a40b9343","modified":1689236719515},{"_id":"source/_posts/static/Python/报错积累/PyCharm-F10运行时中文内容乱码/1.png","hash":"25bc99ca82eba12f968d13fbab42eeadc2b1804e","modified":1689236957642},{"_id":"source/_posts/static/Python/报错积累/SyntaxError语法错误/0.png","hash":"a5a6ee88bb20a1a36253f7fd6881e57f8051b8c6","modified":1677222740467},{"_id":"source/_posts/static/Python/三方库/NumPy/NumPy-2：NumPy下载与安装/1.png","hash":"c9309c3f671167671d01852e0420827ce2989d69","modified":1672136815064},{"_id":"source/_posts/static/Git/Git-1：教程/1.png","hash":"ddbe964fe1ae180d8d7694ae56e839f4d2eb9a2a","modified":1689242921710},{"_id":"source/_posts/static/Docker/Docker-3：安装/1.png","hash":"8e6287eeb319cca670348b5ece7fee564a956bb8","modified":1688030520189},{"_id":"source/_posts/static/PostgreSQL/PostgreSQL-2：安装/1.png","hash":"93eeea4c05c5b83ba34ce8e61561578a0c7cac22","modified":1689304292325},{"_id":"source/_posts/static/Python/Python-2：环境搭建/6.png","hash":"51bae5f8466c6da36042ed5d4bbd5d1f7b235fdb","modified":1695626523185},{"_id":"source/_posts/static/Python/Python-3：VScode/4.png","hash":"3e0da39537bcc50c21733ca92f20a45f8e395127","modified":1695631376542},{"_id":"source/_posts/static/Python/Python-3：VScode/9.png","hash":"fb49c9cdcf4c60f542bc645d1c4bdef207783201","modified":1695632261628},{"_id":"source/_posts/static/Linux/CentOS/没有可用依赖包 - 解决/2.png","hash":"cf9e6103a429e755ef25ce192d79d7f62d763b2c","modified":1689313529336},{"_id":"source/_posts/static/Python/Flask/Flask-1：介绍/1.png","hash":"174e3cf737bbbee3763b386087826e0f99f0b441","modified":1676281886237},{"_id":"source/_posts/static/Python/Flask/Flask-6：Debug模式/1.png","hash":"9b1f9c5a3219654304f6b2de28c1ab41dbcef4d9","modified":1676451262128},{"_id":"source/_posts/static/Python/Python-2：环境搭建/1.png","hash":"2a80a63f327b2741549484494330cb3b164b497e","modified":1695625245753},{"_id":"source/_posts/static/Python/Python-2：环境搭建/2.png","hash":"afe3e7bf525b370673cdb3ebe98b85b19a66c527","modified":1695625945255},{"_id":"source/_posts/static/Python/Python-3：VScode/1.png","hash":"c60582ed9ea163a5d0de028914093c6f8dbb5632","modified":1695630820684},{"_id":"source/_posts/static/Linux/CentOS/没有可用依赖包 - 解决/3.png","hash":"dfaf23cbbcb7ebcc6fa1b2303f49f668339bd41a","modified":1689313970068},{"_id":"themes/hexo-theme-matery/source/libs/echarts/echarts.min.js","hash":"8789b5e4daf0029a6c88f238f10e54d01c4fce82","modified":1699000929971},{"_id":"source/_posts/笔记/笔记-30-4.png","hash":"724dd4e9e1835857d04a0eafca03c3d9c3e2aff7","modified":1689145126322},{"_id":"source/_posts/笔记/笔记-30-5.png","hash":"411a54777e75c762d0006a55dbf3a3c3bf890e85","modified":1689145240142},{"_id":"source/_posts/static/Docker/Docker-3：安装/4.png","hash":"c37f91de5a180ae43a8bf56d98b91d8213c02746","modified":1688031824643},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.min.js","hash":"1df59d7e5481ac2917c7043b28883393675dcaf9","modified":1699000929977},{"_id":"source/_posts/笔记/笔记-30-3.png","hash":"7ab7bb4852b58a0d996cc6be8bd11ae9b3dcbeb2","modified":1689144795694},{"_id":"source/_posts/static/Python/Python-2：环境搭建/5.png","hash":"9dbe6eabd56d77aa8c96e675b174dc488ab8bf1f","modified":1695626333183},{"_id":"source/_posts/static/AI/AI-3：Python机器学习环境搭建/5.jpg","hash":"18e3483c92825b09e0c349edca878248ec80bf1c","modified":1672136814835},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.min.js","hash":"5755d222f96a897b9f509d2859be21996a3dbfd0","modified":1699000930019},{"_id":"source/_posts/static/Docker/Docker-3：安装/8.png","hash":"f24d8c88dcf98dc5df135aa4a6cc3ccc83dbbca5","modified":1688093732175},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.js","hash":"3889e37cafaaace5e745ccd3e10c9255e32cae3a","modified":1699000930012},{"_id":"public/atom.xml","hash":"f9366ebfe56ef2ac6a60c6b5ee5eeb88bd9d236b","modified":1699358664998},{"_id":"public/search.xml","hash":"69b76192277b69c1249f4ad5f3b17094f713bd18","modified":1699358664998},{"_id":"public/404/index.html","hash":"d97fd7923c5c7446ed1692370f51f9199256ec91","modified":1699358664998},{"_id":"public/about/index.html","hash":"2660fda5701564ebe2fa4c5fb0dd2aad99a81df9","modified":1699358664998},{"_id":"public/about/me.html","hash":"922e0cb14dad1a89ea3a5e50839d0617b471e39d","modified":1699358664998},{"_id":"public/categories/index.html","hash":"22c986f19100c95dafb16c6908bf9fd40dc5bff8","modified":1699358664998},{"_id":"public/friends/index.html","hash":"7f639c67433c30f89ae4bebd2def04550383c7b2","modified":1699358664998},{"_id":"public/contact/index.html","hash":"1596b7bf990cb7baf2b63133148cbdfad7adffc8","modified":1699358664998},{"_id":"public/tags/index.html","hash":"ad8eecebe6df3afe4769d2ebf62a705728295806","modified":1699358664998},{"_id":"public/2023/11/07/python/fastapi/fastapi-3-uvicorn.run/index.html","hash":"12210c5fac4ed1a19fa36f08746f99638d3147e8","modified":1699358664998},{"_id":"public/2023/11/06/python/fastapi/fastapi-2-kuai-su-ru-men/index.html","hash":"69a114bebc82e1ab888dad5dbc6250f4855c056e","modified":1699358664998},{"_id":"public/2023/11/06/python/fastapi/fastapi-1-jie-shao/index.html","hash":"c7af1ae0304a01a6fc28b41f683602cb0e5b8271","modified":1699358664998},{"_id":"public/2023/11/05/bi-ji/index.html","hash":"50cfca1d52890344af1b3be040907a5d8f32064c","modified":1699358664998},{"_id":"public/archives/index.html","hash":"d12ea303bc70ccafd111c4c624b575108deb7dda","modified":1699358664998},{"_id":"public/archives/2023/index.html","hash":"188d6b0ec49eb9f9b7eb13b57e59fd481f699811","modified":1699358664998},{"_id":"public/archives/2023/11/index.html","hash":"3e0f5d2dda6f646b2b07aeaee015f69413ece595","modified":1699358664998},{"_id":"public/categories/Python/index.html","hash":"f7b2cac2bc93667a321b16f042704c0f906b5402","modified":1699358664998},{"_id":"public/categories/Python/FasAPI/index.html","hash":"d997f4cc3999dead5ce76f9f5220cd60be441bd3","modified":1699358664998},{"_id":"public/index.html","hash":"949a82b31a2853d2f7531a6b6e66997275afea3f","modified":1699358664998},{"_id":"public/tags/Python/index.html","hash":"3950ba7ec2380d259999651c00f508cc392d2b1f","modified":1699358664998},{"_id":"public/tags/MySQL/index.html","hash":"edb1a790cb8aa9c5d7d5a6cff169dd7152007b5d","modified":1699358664998},{"_id":"public/tags/Linux/index.html","hash":"7488569e1e1b5d0dec2a3741ccdd0aadb4d0f294","modified":1699358664998},{"_id":"public/tags/Nginx/index.html","hash":"1b473f478ad0193903d18e669eb5476c93ec37b8","modified":1699358664998},{"_id":"public/tags/sqlite3/index.html","hash":"059d9da885ca8cb616bd6bbe90f20c94220cc92c","modified":1699358664998},{"_id":"public/tags/ES/index.html","hash":"3c81477cc464c06f38ab8db3419a1604de4c9342","modified":1699358664998},{"_id":"public/tags/MongoDB/index.html","hash":"2f04558959a70c326903b71642440ae14030076e","modified":1699358664998},{"_id":"public/tags/FastAPI/index.html","hash":"f7811cd33acb9041c8828ba583b7b9c7d81748c0","modified":1699358664998},{"_id":"public/favicon.png","hash":"774fee8c6d0be9dbb010b20f36c06848d06e3da0","modified":1699358664998},{"_id":"public/medias/avatar.jpg","hash":"2a6287308628881ce27b9a7de53ba15c2be00d02","modified":1699358664998},{"_id":"public/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1699358664998},{"_id":"public/medias/icp.png","hash":"27a96f31f7d0413c6ade6f40e06f021f501151c7","modified":1699358664998},{"_id":"public/medias/logo.png","hash":"d9095f5ea8719374d9d1ff020279426f5b2a1396","modified":1699358664998},{"_id":"public/libs/twikoo/twikoo.all.min.js.LICENSE.txt","hash":"6e1c8f7b23f06ca4c727c805fda053dc1d9193d0","modified":1699358664998},{"_id":"public/medias/barrager/0.png","hash":"b30416fd3b3aec5af3fa90823a7e2e9c0af4cda8","modified":1699358664998},{"_id":"public/medias/barrager/2.png","hash":"52b2b13373fe611ad2327b9b40426d6dc05b69cd","modified":1699358664998},{"_id":"public/medias/barrager/close.png","hash":"045346df61ee01abe5018c5d9ba805d2831ce7b1","modified":1699358664998},{"_id":"public/medias/barrager/1.png","hash":"b8c211690dba3addedfe7b928e3936cd487df0d6","modified":1699358664998},{"_id":"public/medias/featureimages/10.jpg","hash":"98e7f6fd9c97d4de9044b6871ca08ebf14db11b9","modified":1699358664998},{"_id":"public/medias/featureimages/13.jpg","hash":"35a320174f8e316e3eadaec658024276b651c6e9","modified":1699358664998},{"_id":"public/medias/featureimages/15.jpg","hash":"da0fbee3b7bde1607eace377ddf834c0be99edfe","modified":1699358664998},{"_id":"public/medias/featureimages/16.jpg","hash":"97a829c4bc94f9d2929b20a1a9b798c57b9f7205","modified":1699358664998},{"_id":"public/medias/featureimages/2.jpg","hash":"4bba691cf71a517ecaeaf42afd3e8f8b31e346c1","modified":1699358664998},{"_id":"public/medias/featureimages/21.jpg","hash":"b26edb128bb0bf58b23fd2f014e9555e89a2ca3b","modified":1699358664998},{"_id":"public/medias/featureimages/22.jpg","hash":"754579747a3e99747d890fca3162f370b96a7941","modified":1699358664998},{"_id":"public/medias/featureimages/23.jpg","hash":"7d7f37da3fa7128343adac23866449eb2c6a549a","modified":1699358664998},{"_id":"public/medias/featureimages/3.jpg","hash":"6ec646c2a70f5f11edacf225c1477f2200a37a96","modified":1699358664998},{"_id":"public/medias/featureimages/5.jpg","hash":"41ca20129a37fedc573eec28dd7d7b9e5b09228a","modified":1699358664998},{"_id":"public/medias/featureimages/7.jpg","hash":"7975141cd64e875122c0ea33daaca1a06bf00b8e","modified":1699358664998},{"_id":"public/medias/featureimages/8.jpg","hash":"8e4b7186352085483ca1174c7c0800114c48df8b","modified":1699358664998},{"_id":"public/libs/lightGallery/fonts/lg.svg","hash":"94c83160bddccf08bd7424de40d738716f1eeb3a","modified":1699358664998},{"_id":"public/libs/awesome/webfonts/fa-regular-400.ttf","hash":"9b26d745a1e69b23d71b7ea36d5de1209c997901","modified":1699358664998},{"_id":"public/libs/awesome/webfonts/fa-regular-400.woff2","hash":"f7a09bcbd996fd634045d4e79b6504c945730686","modified":1699358664998},{"_id":"public/libs/lightGallery/fonts/lg.ttf","hash":"49693fa946534a56d7e5d4274e1ce55b05d782c3","modified":1699358664998},{"_id":"public/libs/awesome/webfonts/fa-v4compatibility.woff2","hash":"37ab2a6a0810d5a6c10a355fe1d7af0042bd6a2a","modified":1699358664998},{"_id":"public/libs/awesome/webfonts/fa-v4compatibility.ttf","hash":"3fc15c8154f8bd2d7bd1dfe55ae5ab1c33e5e40f","modified":1699358664998},{"_id":"public/libs/lightGallery/fonts/lg.woff","hash":"04f09ad797ced119d6608909d06e500f16a03bbb","modified":1699358664998},{"_id":"public/libs/lightGallery/img/video-play.png","hash":"2962e03ddbe04d7e201a5acccac531a2bbccddfc","modified":1699358664998},{"_id":"public/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1699358664998},{"_id":"public/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1699358664998},{"_id":"public/libs/lightGallery/img/vimeo-play.png","hash":"9b72fc0f86a01467ed0b68c9cc4d604ec316d517","modified":1699358664998},{"_id":"public/libs/lightGallery/img/youtube-play.png","hash":"f8d11384d33b7a79ee2ba8d522844f14d5067a80","modified":1699358664998},{"_id":"public/libs/share/fonts/iconfont.svg","hash":"1d56c9d5db0273f07c43cc1397e440f98ba7827a","modified":1699358664998},{"_id":"public/2023/11/05/bi-ji/笔记-23.png","hash":"5b20be8936f0e7aafe8e95295029401311ebb046","modified":1699358664998},{"_id":"public/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1699358664998},{"_id":"public/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1699358664998},{"_id":"public/2023/11/05/bi-ji/笔记-30-1.png","hash":"198570ab853019f0274bde4048cd2877a2898952","modified":1699358664998},{"_id":"public/2023/11/05/bi-ji/笔记-30-2.png","hash":"2986572cca4427dc341db41df873fb49ba9fd154","modified":1699358664998},{"_id":"public/2023/11/05/bi-ji/笔记-30-6.png","hash":"c2665bf5eb49604500e2fd1aefcae90108ff377b","modified":1699358664998},{"_id":"public/2023/11/06/python/fastapi/fastapi-2-kuai-su-ru-men/FastAPI-2：快速入门-2.png","hash":"bc29aa31601345e0530ec730e332827e55920b37","modified":1699358664998},{"_id":"public/2023/11/06/python/fastapi/fastapi-2-kuai-su-ru-men/FastAPI-2：快速入门-1.png","hash":"ca7578a8d776f7fc424adb11ac0229d8ad4fa25d","modified":1699358664998},{"_id":"public/2023/11/06/python/fastapi/fastapi-2-kuai-su-ru-men/FastAPI-2：快速入门-5.png","hash":"39d2df7ef2540b120aba4769b3b647a611218691","modified":1699358664998},{"_id":"public/medias/banner/0.jpg","hash":"69ec96cd9b4bc3aa631adc9da61353f50c39f031","modified":1699358664998},{"_id":"public/medias/banner/2.jpg","hash":"39fb2535460ce66cc0b34e07ffb9411db1405f09","modified":1699358664998},{"_id":"public/medias/featureimages/0.jpg","hash":"1c3300f029fc85d6dda6fa4f1d699551034cdaf7","modified":1699358664998},{"_id":"public/medias/banner/3.jpg","hash":"4ac047e92d0363b1a61ab756aca6dac13fb77494","modified":1699358664998},{"_id":"public/medias/featureimages/1.jpg","hash":"684ae89de8cb7acefae19f5aee6c612037c46393","modified":1699358664998},{"_id":"public/medias/featureimages/11.jpg","hash":"f55972ce7175684f2b11c3c9fc2b5b14bccbfae8","modified":1699358664998},{"_id":"public/medias/featureimages/12.jpg","hash":"8a4b2e7d92ae95c3b0c921db23c35aa9a41a7d58","modified":1699358664998},{"_id":"public/medias/featureimages/14.jpg","hash":"38e11221406785bcd93aa9cd23e568e164630ef1","modified":1699358664998},{"_id":"public/medias/featureimages/17.jpg","hash":"42d47903551ee81885c1386022982cae165841c5","modified":1699358664998},{"_id":"public/medias/featureimages/18.jpg","hash":"64829272ec85bb819d55ff89e5b5fd6f64aa436b","modified":1699358664998},{"_id":"public/medias/featureimages/19.jpg","hash":"eb250906fdbc0c408f42ae9933725bc1a05d79fb","modified":1699358664998},{"_id":"public/medias/featureimages/20.jpg","hash":"3b11f9b461168d907073f793190865fe621a8573","modified":1699358664998},{"_id":"public/medias/featureimages/4.jpg","hash":"e06c47de27619984be9d5d02947f8370a432dfea","modified":1699358664998},{"_id":"public/medias/featureimages/6.jpg","hash":"c8f2aa4bbb041158b4e73733a341e6a77c8583f7","modified":1699358664998},{"_id":"public/medias/featureimages/9.jpg","hash":"b956a2291a04b2132366b53666cf34858b8bdb1f","modified":1699358664998},{"_id":"public/medias/reward/alipay.png","hash":"ddf2d1fbf44562dbb2438a7ae9b20fc792cd70da","modified":1699358664998},{"_id":"public/medias/reward/wechat.png","hash":"3ea935f278de69cca1d4f73d9c380b9e32211b62","modified":1699358664998},{"_id":"public/libs/awesome/webfonts/fa-brands-400.woff2","hash":"e219af1e3bbc2219359d3d0916e263b279c4abfd","modified":1699358664998},{"_id":"public/2023/11/05/bi-ji/笔记-24.png","hash":"3a8712d536f469146ee70255dfdd5ce946772015","modified":1699358664998},{"_id":"public/2023/11/05/bi-ji/笔记-29.png","hash":"3fa74bc7a3894949e47f6266a0af7317baf8bbd1","modified":1699358664998},{"_id":"public/2023/11/06/python/fastapi/fastapi-2-kuai-su-ru-men/FastAPI-2：快速入门-3.png","hash":"5b59498a89a6f78f93c93bca058803ce9f4117a8","modified":1699358664998},{"_id":"public/2023/11/06/python/fastapi/fastapi-2-kuai-su-ru-men/FastAPI-2：快速入门-4.png","hash":"661948e42bee386430aa9486847de102df5be8e0","modified":1699358664998},{"_id":"public/css/barrager.css","hash":"862879d9313ed8d4c721fa32ef8f94ac2f0a28ae","modified":1699358664998},{"_id":"public/css/bb.css","hash":"aa15633888c7cf9baea8bb48d796c68b57cf14bf","modified":1699358664998},{"_id":"public/css/gallery.css","hash":"79dfdf68d675c17782271647283c568d086e4b98","modified":1699358664998},{"_id":"public/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1699358664998},{"_id":"public/css/indexcover.css","hash":"bd027eb8192b4d1b0dc9b4f965fa264e8437f847","modified":1699358664998},{"_id":"public/css/my-gitalk.css","hash":"af18dd29e58642c18bab9b89541767b494c468dd","modified":1699358664998},{"_id":"public/css/my.css","hash":"497e50351f7838f8546cac76850a42e7e380a110","modified":1699358664998},{"_id":"public/css/post.css","hash":"d38c71eddb8af1752c48eb48595fbaf89450ff40","modified":1699358664998},{"_id":"public/css/reward.css","hash":"98b32aabeb908727844af04c31f08da6cab08335","modified":1699358664998},{"_id":"public/js/gallery-encrypt.js","hash":"18dcfa4a8da8847b64be75f287f45c0e830bbcab","modified":1699358664998},{"_id":"public/js/jquery.barrager.js","hash":"19c8b2498ca1083e537f7f443172970912107f83","modified":1699358664998},{"_id":"public/js/matery.js","hash":"aa957ea8cf6787f0ed6095fedc6cb9d7d1bf3522","modified":1699358664998},{"_id":"public/js/search.js","hash":"5caa2d6e3d34c334ac68dfaafc81a583d6123382","modified":1699358664998},{"_id":"public/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1699358664998},{"_id":"public/libs/background/canvas-nest.js","hash":"65333d0dbb9c1173a1b13031b230161fc42c8b2f","modified":1699358664998},{"_id":"public/libs/background/ribbon-dynamic.js","hash":"052b80c29e6bc585aa28d4504b743bdbac220a88","modified":1699358664998},{"_id":"public/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1699358664998},{"_id":"public/libs/aplayer/Meting.min.js","hash":"f2b3d20b8bd64ccd031c64628f2b1323078ae324","modified":1699358664998},{"_id":"public/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1699358664998},{"_id":"public/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1699358664998},{"_id":"public/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1699358664998},{"_id":"public/libs/codeBlock/codeCopy.js","hash":"6d39a766af62e625f177c4d5cf3adc35eed71e61","modified":1699358664998},{"_id":"public/libs/codeBlock/codeLang.js","hash":"bac88b4d4e3679732d29bd037c34f089cf27cf05","modified":1699358664998},{"_id":"public/libs/codeBlock/codeShrink.js","hash":"201e8cd761b4be557247bdaf1ebc7c11c83194f6","modified":1699358664998},{"_id":"public/libs/fancybox/jquery.fancybox.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1699358664998},{"_id":"public/libs/instantpage/instantpage.js","hash":"83ce8919b1a69b2f1809ffaf99b52a8627e650e9","modified":1699358664998},{"_id":"public/libs/justifiedGallery/justifiedGallery.min.css","hash":"89fb099880771c23dce3005a87db36053c8c491c","modified":1699358664998},{"_id":"public/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1699358664998},{"_id":"public/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1699358664998},{"_id":"public/libs/minivaline/MiniValine.js","hash":"f7f6cdc1b22297e02334e304444e9a8351acb455","modified":1699358664998},{"_id":"public/libs/mermaid/mermaid.min.css","hash":"1dbcd9312e57f2a0b569451d0028d88316614481","modified":1699358664998},{"_id":"public/libs/others/TencentCaptcha.js","hash":"10a034ac0b4ebe97ec5916b092b36fa2d6e9edd0","modified":1699358664998},{"_id":"public/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1699358664998},{"_id":"public/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1699358664998},{"_id":"public/libs/others/star.js","hash":"cf32f8ce2a1a51ba65d3b6063fe2ee1482550190","modified":1699358664998},{"_id":"public/libs/others/snow.js","hash":"02b1eeaca737c47be637b304feb3d36d792ee0c4","modified":1699358664998},{"_id":"public/libs/prism/prism.min.css","hash":"ed3896649670cf142e514685da2b060cca5fd43a","modified":1699358664998},{"_id":"public/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1699358664998},{"_id":"public/libs/tocbot/tocbot.css","hash":"15601837bf8557c2fd111e4450ed4c8495fd11a0","modified":1699358664998},{"_id":"public/libs/tocbot/tocbot.min.js","hash":"39055053a477e7d54b46cfb46591f84cc3818eeb","modified":1699358664998},{"_id":"public/libs/typed/typed.js","hash":"eaf2798298790ec3fad17f6c68b5d3b02dfd069c","modified":1699358664998},{"_id":"public/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1699358664998},{"_id":"public/css/dark.css","hash":"be4ef08494f3c965d513d9413685c0e723f671cd","modified":1699358664998},{"_id":"public/css/matery.css","hash":"413ad9731332810823b57dd0f4c0284e3af2af63","modified":1699358664998},{"_id":"public/js/tw_cn.js","hash":"29157cdfa87aec28e56d3d5717d486bf4de07db6","modified":1699358664998},{"_id":"public/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1699358664998},{"_id":"public/js/crypto-js.js","hash":"3dd73b6f13dc818a3a9c5c7424c1c4a9649b00a2","modified":1699358664998},{"_id":"public/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1699358664998},{"_id":"public/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1699358664998},{"_id":"public/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1699358664998},{"_id":"public/libs/dplayer/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1699358664998},{"_id":"public/libs/fancybox/fancybox.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1699358664998},{"_id":"public/libs/dplayer/DPlayer.min.js","hash":"490148a22ab2b03a880495cc733ecd1840c02ed6","modified":1699358664998},{"_id":"public/libs/gitalk/gitalk.css","hash":"61d71cb30f5f34cbb1f2b5bc469784d6cb908c22","modified":1699358664998},{"_id":"public/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1699358664998},{"_id":"public/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1699358664998},{"_id":"public/libs/jquery/jquery-3.6.0.min.js","hash":"b82d238d4e31fdf618bae8ac11a6c812c03dd0d4","modified":1699358664998},{"_id":"public/libs/masonry/masonry.pkgd.min.js","hash":"d20252cf76c3be8af37a8415d13ad368c762b4d8","modified":1699358664998},{"_id":"public/libs/justifiedGallery/justifiedGallery.min.js","hash":"82ab395176c927ffbb2f7c95132ee0a06cd5d64a","modified":1699358664998},{"_id":"public/libs/materialize/materialize.min.css","hash":"d1328a7872827bc63e7cc4d33745397681accda8","modified":1699358664998},{"_id":"public/libs/others/sakura-half.js","hash":"a41b64af88fdd0e2d3502752d059661c1bc743dc","modified":1699358664998},{"_id":"public/libs/others/sakura.js","hash":"9e196ab241799126e6a2dd23ee1708b1505ccbf0","modified":1699358664998},{"_id":"public/libs/materialize/materialize.min.js","hash":"8eee32acbfac59744b4053a7290f503ef623d3ab","modified":1699358664998},{"_id":"public/libs/others/sakura-reduce.js","hash":"f7527e9fb4e6fe2cc7c8880692d77bcda95900c7","modified":1699358664998},{"_id":"public/libs/others/sakura-small.js","hash":"3284a9ab71454e574d80663f3a05735cd12a6a05","modified":1699358664998},{"_id":"public/libs/waline/Waline.min.js","hash":"94f70e622e2a1ab05adb205033a9ddf371c61534","modified":1699358664998},{"_id":"public/libs/valine/av-min.js","hash":"db56ef6acb789da00d39bd6b97c1b09c2d429195","modified":1699358664998},{"_id":"public/libs/twikoo/twikoo.all.min.js","hash":"c3f5f0a69b7864e7ef5bbf99fc774bec37947d7c","modified":1699358664998},{"_id":"public/libs/lightGallery/css/lightgallery.min.css","hash":"7873d80020ae04955bb57521bd249a6974d1180f","modified":1699358664998},{"_id":"public/libs/awesome/css/all.css","hash":"8d63fa8b0f60a50b07ac0f7e751f6f5e02ecdc44","modified":1699358664998},{"_id":"public/libs/lightGallery/js/lightgallery-all.min.js","hash":"aab2633f69581c2e26e22a23712f1501d7fcec18","modified":1699358664998},{"_id":"public/libs/share/js/jquery.share.min.js","hash":"41367dcb857e02e3c417ebe68a554ce1d4430806","modified":1699358664998},{"_id":"public/libs/share/js/social-share.min.js","hash":"a3090a02786dcd4efc6355c1c1dc978add8d6827","modified":1699358664998},{"_id":"public/libs/awesome/css/all.min.css","hash":"0ae47fa834fb55de7b50c79021aeabecfae50c9c","modified":1699358664998},{"_id":"public/libs/valine/Valine.min.js","hash":"d081a412c63411a75a3a880ddece65335d1c3ee8","modified":1699358664998},{"_id":"public/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1699358664998},{"_id":"public/medias/banner/1.jpg","hash":"ab122a36998a4f62a61e61a4fc5e00248113413b","modified":1699358664998},{"_id":"public/medias/banner/6.jpg","hash":"ed7282cc129c4ff9f322d2f2897fb4aac5c48589","modified":1699358664998},{"_id":"public/medias/banner/5.jpg","hash":"852418f4f09e796e12bc3bab7a1488d3f37d6486","modified":1699358664998},{"_id":"public/medias/images/02.jpg","hash":"a5b656606811f4d7e10307f48c0e3c373e0b886d","modified":1699358664998},{"_id":"public/libs/awesome/webfonts/fa-brands-400.ttf","hash":"fa5745d421c0fc90928626be98e9f8cf7580b327","modified":1699358664998},{"_id":"public/libs/awesome/webfonts/fa-solid-900.woff2","hash":"1979128e8ba1517d85f5e4ee505abf486c51557c","modified":1699358664998},{"_id":"public/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1699358664998},{"_id":"public/libs/gitalk/gitalk.min.js","hash":"564fc7c731d05fa70d71ef853a2c8cc7725739e2","modified":1699358664998},{"_id":"public/libs/prism/prism.min.js","hash":"6fc9b7be93e51b4017a61483c13187af0149f194","modified":1699358664998},{"_id":"public/libs/mermaid/mermaid.min.js","hash":"6bee48c26c32b90f50519f125890fcbb04779da6","modified":1699358664998},{"_id":"public/medias/banner/4.jpg","hash":"e5ac5033678afa9d69edffe9a61004f836cb5734","modified":1699358664998},{"_id":"public/medias/images/03.jpg","hash":"2bd3815508a9f5b0ae79aa780bc02ac80b2a354e","modified":1699358664998},{"_id":"public/2023/11/05/bi-ji/笔记-30-4.png","hash":"724dd4e9e1835857d04a0eafca03c3d9c3e2aff7","modified":1699358664998},{"_id":"public/2023/11/05/bi-ji/笔记-30-5.png","hash":"411a54777e75c762d0006a55dbf3a3c3bf890e85","modified":1699358664998},{"_id":"public/libs/awesome/webfonts/fa-solid-900.ttf","hash":"e3339400ef6214cfa077d003daed2bfa659e2956","modified":1699358664998},{"_id":"public/2023/11/05/bi-ji/笔记-30-3.png","hash":"7ab7bb4852b58a0d996cc6be8bd11ae9b3dcbeb2","modified":1699358664998},{"_id":"public/medias/images/01.jpg","hash":"6a81f437fb876666bafaa98b2a09bd8bd7f21832","modified":1699358664998},{"_id":"public/libs/mermaid/mermaid.js","hash":"a7933bef8aba190825ba7716497209187ac1de5d","modified":1699358664998}],"Category":[{"name":"Python","_id":"clooa9v500006gs6rc3k1gsgf"},{"name":"FasAPI","parent":"clooa9v500006gs6rc3k1gsgf","_id":"clooa9v53000cgs6rg4v97qpp"}],"Data":[{"_id":"friends","data":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}],"Page":[{"title":"404","date":"2023-11-03T09:51:09.000Z","type":"404","layout":"404","description":"Oops～，我崩溃了！找不到你想要的页面 :(","_content":"","source":"404/index.md","raw":"---\ntitle: 404\ndate: 2023-11-03 17:51:09\ntype: \"404\"\nlayout: \"404\"\ndescription: \"Oops～，我崩溃了！找不到你想要的页面 :(\"\n---\n","updated":"2023-11-06T03:34:38.148Z","path":"404/index.html","comments":1,"_id":"clooa9v4p0000gs6ra98l9uk7","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"about","date":"2023-11-03T09:47:11.000Z","type":"about","layout":"about","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2023-11-03 17:47:11\ntype: \"about\"\nlayout: \"about\"\n---\n","updated":"2023-11-03T09:47:29.703Z","path":"about/index.html","comments":1,"_id":"clooa9v4v0002gs6r861o5cyu","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"About me","date":"2023-11-06T07:16:00.000Z","_content":"","source":"about/me.md","raw":"---\ntitle: About me\ndate: 2023-11-06 15:16:00\n---\n","updated":"2023-11-06T07:16:00.806Z","path":"about/me.html","comments":1,"layout":"page","_id":"clooa9v4z0005gs6r04m50ddy","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"categories","date":"2023-11-03T09:44:54.000Z","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2023-11-03 17:44:54\ntype: \"categories\"\nlayout: \"categories\"\n---\n","updated":"2023-11-03T09:45:47.271Z","path":"categories/index.html","comments":1,"_id":"clooa9v510007gs6r9sis6zho","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"friends","date":"2023-11-03T09:49:01.000Z","type":"friends","layout":"friends","_content":"","source":"friends/index.md","raw":"---\ntitle: friends\ndate: 2023-11-03 17:49:01\ntype: \"friends\"\nlayout: \"friends\"\n---\n","updated":"2023-11-03T09:49:17.108Z","path":"friends/index.html","comments":1,"_id":"clooa9v510008gs6r9mmzdpe7","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"contact","date":"2023-11-03T09:47:47.000Z","type":"contact","layout":"contact","_content":"","source":"contact/index.md","raw":"---\ntitle: contact\ndate: 2023-11-03 17:47:47\ntype: \"contact\"\nlayout: \"contact\"\n---\n","updated":"2023-11-03T09:47:59.032Z","path":"contact/index.html","comments":1,"_id":"clooa9v52000ags6r3nzd370p","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"tags","date":"2023-11-03T09:46:14.000Z","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2023-11-03 17:46:14\ntype: \"tags\"\nlayout: \"tags\"\n---\n","updated":"2023-11-03T09:46:32.740Z","path":"tags/index.html","comments":1,"_id":"clooa9v52000bgs6r8tfzhs4a","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":""}],"Post":[{"title":"笔记","date":"2023-11-04T16:00:00.000Z","_content":"# 笔记\n\n## 一、Python的requirements.txt文件\n\n```python\n# 自动生成requirements.txt文件\npip freeze > requirements.txt\n# 安装requirements.txt依赖\npip install -r requirements.txt\n```\n\n## 二、vim编辑器中文乱码问题\n\n```shell\n# 执行（打开vi编辑器新建.vimrc文件）\n$: vi ~/.vimrc\n---------------------------------\n# 文件内容\nset encoding=utf-8  # 显示的编码\nset fileencoding=utf-8  # 写入文件的编码\n```\n\n## 三、Nginx配置\n\n```nginx\n# 配置静态文件\nserver {\n    location ^~/static {  # 静态文件路由\n        alias /usr/project/static;  # 静态文件所在目录\n    }\n}\n# 配置项目相关\nserver {\n    location /api {\n        proxy_pass http://127.0.0.1:8000;\n        proxy_set_header Host $host;\n        proxy_set_header X-Protocol https;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-USERTOKEN $http_x_usertoken;\n        proxy_connect_timeout xxx;\n        proxy_read_timeout xxx;\n        proxy_send_timeout xxx;\n    }\n}\n```\n\n## 四、pymysql\n\n```python\nimport pymysql\ndb = pymysql.connect(user='用户名', password='密码', host='主机ip', database='要连接的库名')  # 连接数据库\nsql = 'sql语句'\n'''使用with，调用完自动close()'''\nwith db:\n    print(db.open)  # 连接成功，返回True\n    cur = db.cursor()  # 创建游标\n    cur.execute(sql)  # 执行sql语句\n    cur.description  # 显示每列的详细信息\nprint(db.open)  # with结束以后自动关闭，返回False\n'''使用try'''\ncur = db.cursor()  # 创建游标\ntry:\n    cur.execute(sql)  # 执行sql语句\nexcept Exception as e:\n    print(e)  # 捕获异常\nfinally:\n    cur.close()  # 关掉游标\n    db.close()  # 断开连接\n```\n\n## 五、sqlite3\n\n```python\nimport sqlite3\ncon = sqlite3.connect('sqlite3文件所在位置')  # 创建连接\ncur = con.cursor()  # 创建游标\nsql = 'sql语句'\ntry:\n    cur.execute(sql)  # 执行sql语句\nexcept Exception as e:\n    print(e)  # 捕获异常\nfinally:\n    cur.close()  # 关掉游标\n    con.close()  # 断开连接\n```\n\n```lua\n-- lua 操作sqlite3\nlocal sqlite3 = require(\"sqlite3\")\nlocal env = sqlite3.sqlite3()\nlocal sql = env:connect(\"db文件路径\")\nlocal cursor, errorString = sql:execute(\"SQL语句\")\nlocal row = {}  -- 定义空table获取cursor中的数据\nwhile true do\n    row = cursor:fetch(row, \"a\")\n    if row ~= nil then\n        break\n   end\nend\n```\n\n```python\n# 其他操作\n# 开启表头：.header on\n# 列 对 齐：.mode column\n```\n\n\n\n## 六、scp远程拷贝\n\n```shell\nscp 连接名@连接地址:文件位置 要放到的位置\n```\n\n## 七、find查找文件\n\n```shell\nfind -name '文件名'\n```\n\n## 八、MySQL基本查询语句\n\n```sql\nSELECT * FROM 表名 WHERE 条件;  # 查询\nUPDATE 表名 SET 要修改的内容 WHERE 条件;  # 修改\nINSERT INTO 表名 (字段名) VALUES (字段对应内容)； # 添加数据\nDELETE FROM 表名 WHERE 条件;  # 删除字段\nDROP TABLE {表名}  # 删除表\n```\n\n## 九、es相关功能\n\n```shell\ncurl 'localhost:9200/_cat/indices?v'  # 查看所有索引\ncurl 'localhost:9200/_cat/indices?v&s={列名}'  # 查看所有索引，根据某一列进行排序\ncurl -XPOST 'http://localhost:9200/{索引名称}/_unfreeze'  # 索引解冻\ncurl -XGET 'http://localhost:9200/_mapping?pretty'  # 查看所有type\ncurl -XGET 'http://localhost:9200/_cat/templates/?v'  # 查看所有模板\ncurl -XGET 'http://localhost:9200/{索引名称}/_search?pretty'  # 查看索引数据\ncurl -XGET 'http://localhost:9200/{索引名称}/_mapping?pretty'  # 查看索引结构\ncurl -XGET 'http://localhost:9200/{索引名称}/_mapping/field/{字段名}?pretty'  # 查看索引下字段的映射\ncurl -XGET 'http://localhost:9200/_index_template/{索引模板名称}'  # 查看索引模板名称\ncurl -XGET 'http://localhost:9200/_component_template/{组件模板名称}'  # 查看组件模板\n# es的cat命令\nEsIp=\"http://localhost:9200/\"\ncurl -XGET ${EsIp}_cat/master?help  # help 查看帮助\ncurl -XGET ${EsIp}_cat/master?v  # verbose 显示列名，查看master节点\ncurl -XGET ${EsIp}_cat/master?v&h=host,ip,node  # Headers 只显示特定列\ncurl -XGET ${EsIp}_cat/indices?v&h=index,docs.count,store.size&bytes=kb  # Bytes 数字格式化展示\ncurl -XGET ${EsIp}_cat/indices?v&h=index,docs.count,store.size&bytes=kb&format=json&pretty  # json格式输出\ncurl -XGET ${EsIp}_cat/indices?v&h=index,docs.count,store.size&bytes=kb&format=yaml&pretty  # yaml格式输出\ncurl -XGET ${EsIp}_cat/indices?v&h=index,docs.count,store.size&bytes=kb&pretty&s=index,docs.count:desc  # Sort排序，根据index升序，docs.count降序\ncurl -XGET ${EsIp}_cat/health?v&h=cluster,status  # 查看集群健康状态\ncurl -XGET ${EsIp}_cat/nodes?v  # 查看集群节点\ncurl -XGET ${EsIp}_cat/nodes?v&h=ip,node.role,name,disk.avail  # 磁盘剩余\ncurl -XGET ${EsIp}_cat/allocation?v  # 查看每个数据节点上的分片数（shards），以及每个数据节点磁盘剩余\ncurl -XGET ${EsIp}_cat/pending_tasks?v  # 查看被挂起的任务\ncurl -XGET ${EsIp}_cat/plugins?v  # 查看每个节点正在运行的插件\ncurl -XGET ${EsIp}_cat/nodeattrs?v  # 查看每个节点的自定义属性\ncurl -XGET ${EsIp}_cat/recovery/.kibana?v&format=json&pretty  # 查看索引分片的恢复视图\ncurl -XGET ${EsIp}_cat/fielddata?v&h=node,field,size  # 查看每个数据节点上fielddate当前占用的堆栈内存\ncurl -XGET ${EsIp}_cat/recovery/.kibana?v&format=json&pretty  # 对某一字段进行查看\ncurl -XGET ${EsIp}_cat/repositories?v  # 查看注册的快照仓库\ncurl -XGET ${EsIp}_cat/snapshots/repo1?v  # 查看快照仓库下的快照\ncurl -XGET ${EsIp}_cat/thread_pool/bulk?v&format=json&pretty  # 查看每个节点线程池的统计信息\ncurl -XGET ${EsIp}_cat/indices/.monitoring*?v&h=index,health  # 查看索引\ncurl -XGET ${EsIp}_cat/aliases?v&h=alias,index  # 查看别名\ncurl -XGET ${EsIp}_cat/templates?v&format=json&pretty  # 查看索引模板\ncurl -XGET ${EsIp}_cat/count?v  # 整个集群文档数\ncurl -XGET ${EsIp}_cat/count/.monitoring*?v  # 某一类索引文档数\ncurl -XGET ${EsIp}_cat/shards?v&format=json&pretty&s=index  # 查看每个索引的分片\ncurl -XGET ${EsIp}_cat/segments/.kibana?v&format=json&pretty  # 查看每个索引的segment\n```\n\n## 十、字符串转换为字典\n\n```python\nstr = '{\"name\": \"Justin Bieber\", \"age\": 44, \"gender\": \"男\"}'\nimport json\nuser_dict = json.loads(str)\nprint(str)\n>>> {\"name\": \"Justin Bieber\", \"age\": 44, \"gender\": \"男\"}\n----------------------------------------------------------------------------\nimport ast\nuser_dict = ast.lateral_eval(str)\nprint(user_dict)\n>>> {\"name\": \"Justin Bieber\", \"age\": 44, \"gender\": \"男\"}\n```\n\n## 十一、IP转换、判断是否合法\n\n```python\n# 端口范围 [0, 65535]\nimport socket, struct\nsocket.inet_ntoa(struct.pack(\"!I\", ip))  # 整型转换为字符型 int -> str\n```\n\n```lua\n--判断ip是否合法\nfunction JudgeIPString(ipStr)\n    if type(ipStr) ~= \"string\" then\n        return false;\n    end\n    \n    --判断长度\n    local len = string.len(ipStr);\n    if len < 7 or len > 15 then --长度不对\n        return false;\n    end\n \n    --判断出现的非数字字符\n    local point = string.find(ipStr, \"%p\", 1); --字符\".\"出现的位置\n    local pointNum = 0; --字符\".\"出现的次数 正常ip有3个\".\"\n    while point ~= nil do\n        if string.sub(ipStr, point, point) ~= \".\" then --得到非数字符号不是字符\".\"\n            return false;\n        end\n        pointNum = pointNum + 1;\n        point = string.find(ipStr, \"%p\", point + 1);\n        if pointNum > 3 then\n            return false;\n        end\n    end\n    if pointNum ~= 3 then --不是正确的ip格式\n        return false;\n    end\n \n    --判断数字对不对\n    local num = {};\n    for w in string.gmatch(ipStr, \"%d+\") do\n        num[#num + 1] = w;\n        local kk = tonumber(w);\n        if kk == nil or kk > 255 then --不是数字或超过ip正常取值范围了\n            return false;\n        end\n    end\n \n    if #num ~= 4 then --不是4段数字\n        return false;\n    end\n \n    return ipStr;\nend\n```\n\n## 十二、Redis查询key\n\n```shell\n$ redis-cli\n$ keys *  # 查询所有的键\n$ dbsize  # 获取键的总数\n$ exists key [key]  # 查看键是否存在\n$ del [key] [key]  # 删除键，可以删除一个或多个\n$ type [key]  # 查看键的类型\n$ get [key]  # 查看键中的值\n$ set [key] [value]  # 存放键值\n$ mset [key] [value] [key] [value]  # 批量存放键值\n$ append [key] [value]  # 追加内容\n$ \n```\n\n## 十三、celery相关\n\n```python\n'''启动相关'''\n# celery启动worker命令\ncelery -A {包含celery文件的文件夹名称}.{celery启动文件} worker -l info\ncelery app {包含celery文件的文件夹名称}.{celery启动文件} worker -l info\n# 上面两条命令作用相同\n# celery启动beat的命令\ncelery beat -A {包含celery文件的文件夹名称}.{celery启动文件} -l info  # Linux\ncelery beat app {包含celery文件的文件夹名称}.{celery启动文件} -l info\ncelery -A {包含celery文件的文件夹名称}.{celery启动文件} beat -l info # Windows\n# 以上两条命令作用相同\n'''停止相关'''\n# 杀死所有celery进程\nps auxww | grep 'celery' | awk '{print $2}' | xargs kill -9\n```\n\n## 十四、Python操作\n\n```python\n'''判断某键是否在字典中'''\n{字典变量}.__contains__('{键}')\n```\n\n## 十五、MongoDB查询语法（大多数不能使用符号的都可以）\n\n```shell\n$gt: 大于\n$lt: 小于\n$gte: 大于等于\n$lte: 小于等于\n$ne: 不等于\n$mod: 取模运算\ndb.things.find(\"this.a % 10 == 1\") == db.things.find({a: {$mod: [10, 1]}})\n$all 和 $in: 匹配条件内所有的值\n{a: [ 1, 2, 3 ]}\n这个：`db.things.find({a: {$all: [ 2, 3 ]}});`可以匹配；\n这个：`db.things.find({a: {$all: [ 2, 3, 4 ]}});`无法匹配。\n```\n\n## 十六、设备一分钟内允许返回的重启思路\n\n>### python实现：\n>\n>```python\n># 格式化获取现在时间(时：分)\n>now_time = time.strftime(\"%H:%M\", time.localtime())\n># 分隔\n>now_time = now_time.split(\":\")\n># 给`分`位数字加一\n>dis_time = str(int(now_time[1]) + 1)\n># 再将时间进行替换拼接\n>now_time = \":\".join([dis_time if now_time.index[i] == 1 else i for i in now_time])\n># 执行定时关机\n>os.system(f\"shutdown -r {now_time}\")\n>```\n>\n>### node.js实现：\n>\n>```js\n>// 导入moment模块\n>const moment = require('moment');\n>var execSync = require(\"child_process\").execSync;\n>// var now_time = moment().format('YYYY-MM-DD HH:mm:ss');\n>// 获取现在时间（时：分）\n>var now_time = moment().format('HH:mm').toString().split(\":\");\n>// 给`分`位数字加一\n>var dis_time = Number(now_time[1]) + 1;\n>// 转换成字符串\n>var dis_time = dis_time.toString();\n>// 定义一个空数组\n>var new_time = new Array();\n>// 将需要的数（时、分）加入数组\n>new_time.push(now_time[0]);\n>new_time.push(dis_time);\n>// 将数组转换为字符串\n>var new_time = new_time.join(\":\");\n>execSync(\"shutdown -r \" + new_time);\n>```\n\n## 十七、node.js时间模块\n\n```js\nvar moment = require('moment')\nvar now_time = moment().format('YYYY-MM-DD HH:mm:ss')\n```\n\n## 十八、tar命令\n\n```shell\n# tar打包命令\n打包：tar -cvf 打包以后的文件名 要打包的文件名\n例子：tar -cvf flask.tar flask/\n\n打包：tar -zcvf 压缩以后的文件名 要压缩的文件名\n例子：tar -zcvf flask.tar.gz flask/\n\n# tar解压命令\n解包：tar -xvf(-zxvf) 压缩包名\n指定位置解包：tar -xvf(-zxvf) 压缩包名 -C 要解压的位置\n```\n\n## 十九、websocket\n\n```python\n# 报错是需要可证的，直接取消验证许可\nimport ssl\nfrom websocket import create_connection\n\nurl = 'wss://127.0.0.1/...'\nws = create_connection(url, sslopt={'cert_reqs': ssl.CERT_NONE})\n\n# 报错是没有'http、https、ws、wss'协议的，url的前缀不对\nurl = '`wss`://localhost/...'\n```\n\n## 二十、ip相关命令\n\n```shell\nifconfig eth0 | grep 'inet addr' | awk '{ print $2}' | awk -F: '{print $2}'  # 获取eth0的ip\n```\n\n## 二十一、Linux一些命令说明\n\n```shell\n~/  #是指 [/home/使用的用户/] \n```\n\n## 二十二、systemctl 服务命令无法启动\n\n```shell\n# 因环境变量无法启动\n# 场景：python使用的sqlite3与系统中的sqlite3版本不一致导致项目无法启动\n# 解决：\n\n# 创建文件：/etc/systemd/system/[服务].service.d/[任意名称].conf\n# **注**：服务名称必须与.service文件的相同\n# /etc/systemd/system/*.service.d/*.conf\n[Server]\nEnvironment=\"环境变量\"\nEnvironment=\"环境变量\"\n...\n\n# 重启服务\nsystemctl daemon-reload\n```\n\n## 二十三、无法加载文件 WindowsPowerShell\\profile.ps1，因为在此系统上禁止 运行脚本\n\n{% asset_img 笔记-23.png %}\n\n```shell\n# 解决方案：\n# 使用管理员身份打开，Power Shell（Windows终端）\nSet-ExecutionPolicy RemoteSigned\n# --如果弹出选项就输入： Y\nGet-ExecutionPolicy\n# --输出：RemoteSigned\n```\n\n## 二十四、命令行里面使用python导入报错\n\n{% asset_img 笔记-24.png %}\n\n```python\n# 解决方法\n>>> from django.conf import settings  \n>>> settings.configure()\n```\n\n## 二十五、Vue 打包命令\n\n```shell\nnpm run build\n```\n\n## 二十六、Navicat 远程连接数据库\n\n```mysql\n# 查询被连接主机MySQL用户状态\nUSE mysql;\nSELECT host,user FROM user WHERE user=\"root\";\n>>> host       user\n>>> localhost  root\n# 修改状态\nUPDATE user SET host=\"%\" WHERE user=\"root\";\n# 这样，任意机器都可以使用Navicat连接该设备的数据库了\n```\n\n## 二十七、MySQL初始化\n\n>MySQL 报错MySQL.sock，不存在\n>\n>ERROR 2002 (HY000): Can't connect to local MySQL server through socket '/var/run/mysqld/mysqld.sock' (2)\n\n```shell\nservice mysqld stop          # 停止MySQL服务\nrm -rf /var/lib/mysql/*      # 删除 /var/lib/mysql/ 下的所有文件\n# 下面的操作看情况进行\nrm /var/lock/subsys/mysqld   # 删除锁定文件\nkillall mysqld               # 杀死所有MySQL进程\n# 上面的操作看情况进行\nmysqld --initialize          # 初始化MySQL\nservice mysql start          # 启动MySQL服务\n```\n\n### 免密启动\n\n```shell \nvim /etc/mysql/mysql.conf.d/mysqld.cnf\n[mysqld]\nskip-grant-table\n# 退出\nservice mysql restart\n```\n\n### 清空 authentication_string 字段\n\n```mysql\nmysql -uroot                 # 进入MySQL\nUSE mysql;                   # 使用mysql数据库\nUPDATE `user`\nSET authentication_string=\"\"\nWHERE user=\"root\";           # 修改root用户密码为空\nexit                         # 退出数据库\n# 关闭免密，并重启服务\n```\n\n### 修改密码\n\n```mysql\nmysql -uroot\nSET password='自己的密码';\nFLUSH PRIVILEGES;\n```\n\n## 二十八、Vue自适应\n\n```vue\n<el-col\n        :lg=\"{ span: 3, offset: 0 }\"\n        :md=\"{ span: 8, offset: 0 }\"\n        :sm=\"{ span: 8, offset: 0 }\"\n        :xl=\"{ span: 6, offset: 0 }\" \n        :xs=\"{ span: 8, offset: 0 }\" \n>\n</el-col>\n<!--\n栅栏一共24个\nlg: 大屏显示器，办公使用\nmd：中屏显示器，笔记本                   span 栅格占据的列数 offset 栅格左侧的间隔数\nsm：小屏显示器，平板\nxs：超小屏显示器，手机\nxl：2k屏幕。\n-->\n```\n\n## 二十九、nvm node管理器\n\n**注**：nvm安装前删除计算机中的node.js\n\n### 第一步：下载nvm\n\n>路径：[Releases · coreybutler/nvm-windows (github.com)](https://github.com/coreybutler/nvm-windows/releases)\n\n{% asset_img 笔记-29.png %}\n\n### 第二步：安装\n\n>安装步骤\n>\n>#### 第一步：同意协议、下一步；（没什么说的，就不加图了）\n>\n>#### 第二步：选择nvm本地安装目录；（最好不要有空格）\n>\n>#### 第三步：设置nodejs快捷方式路径；（需要手动创建名为nodejs的快捷方式）\n>\n>#### 第四部：install -> finish\n\n### 第三步：查看\n\n>命令窗口键入：nvm （查看是否安装成功）\n\n| 参数                   | 说明                                 |\n| ---------------------- | ------------------------------------ |\n| --help                 | 显示命令行帮助信息                   |\n| --version              | 打印当前nvm版本号                    |\n| deactivate             | 取消当前nvm命令行效果                |\n| install [-s] <version> | 从源下载一个版本为<version>的node.js |\n| uninstall <version>    | 卸载一个版本为<version>的node.js     |\n| use <version>          | 使用<version>版本的node              |\n| current                | 查看当前使用的node版本               |\n| ls                     | 查看所有**本地**可用的node版本       |\n| ls <version>           | 查看指定版本                         |\n| ls-remote              | 查看所有可用的远程版本（Linux与Mac） |\n| list available         | 同上（windows）                      |\n\n## 三十、搭梯子\n\n购买远程代理：[X寄场](https://x.syksdw.com/#/dashboard)\n\n登录用户名：lyt_sy@sina.com\n\n密    码：设置好的密码\n\n安装包路径：[v2rayN](https://github.com/97668589/v2rayN/releases/tag/v6.9)\n\n### 使用\n\n1. 双击运行；\n{% asset_img 笔记-30-1.png %}\n   - 如果没有将程序放到桌面，找不到程序可以双击右下角\n   {% asset_img 笔记-30-2.png %}\n\n2. 登录x-寄场：复制v2ray订阅地址；\n{% asset_img 笔记-30-3.png %}\n\n3. 填写备注等信息，注意：勾选**备用**，然后保存；\n{% asset_img 笔记-30-4.png %}\n\n4. 更新当前订阅；\n{% asset_img 笔记-30-5.png %}\n\n5. 测试-启用节点（选择一个右键即可）。\n{% asset_img 笔记-30-6.png %}\n\n## 三十一、PostgreSQL设置自增长\n\n```postgresql\n-- PostgreSQL 与 MySQL 不同，MySQL设置自增长直接用autoincrement设置，PostgreSQL需要先设置序列对象，并在创建字段时使用该序列对象作为缺省值，需要设置该字段不为空\n/* 设置序列对象 */\n[CREATE | ALTER | DROP] SEQUENCE IF NOT EXISTS <序列对象名>_seq\n\tINCREMENT 1          -- 序列每次自增多少\n\tSTART 1              -- 从1开始\n\tMINVALUE 1           -- 序列最小值\n\tMAXVALUE 2147483647  -- 序列最大值\n\tCACHE 1              -- 缓存序列（服务器重启之后缓存会丢失)\n\tNO CYCLE;            -- 是否循环（NO CYCLE | CYCLE: 序列增长到最大值之后是否从新开始）\n/* 创建表时引用 */\nCREATE TABLE <表名> (\n    \"id\" int4 NOT NULL DEFAULT NEXTVAL('<序列对象名>_seq::regclass'),\n    ......\n)\n```\n\n## 三十二、VSCode 远程免密连接\n\nVSCode没有保存密码功能，只能通过ssh秘钥的方式进行自动登录，下面是使用RSA秘钥方式自动登录开发服务器。\n\n>默认每次连接，打开文件都得输入密码，当密码很复杂的时候这是一件很痛苦的是。\n\n### 1.生成秘钥对\n\n默认电脑上安装了git，没有的话就先安装；打开终端或者git-bash输入以下命令（邮箱使用自己的）。\n\n```shell\n$ ssh-keygen -t rsa -C \"<邮箱>\"\n```\n\n然后一路回车直到完成；秘钥文件存放在：`C:\\User\\<用户名>\\.ssh`\n\n### 2.将公钥上传到服务器\n\n1. 将id_rsa.pub重命名为authorized_keys；\n2. 然后上传到服务器的/root/.ssh目录下（没有则新建.ssh）；\n3. 修改VSCode的ssh_config文件。\n\n### 3.配置VSCode远程ssh文件\n\n以下是配置文件的栗子\n\n```ini\nHost <服务IP>\n    HostName <服务名称>\n    User <ssh用户名>\n    Port <ssh连接端口>\n    PreferredAuthentications publickey\n    IdentityFile <本地key文件>\n# 举例\nHost 10.10.0.189\n    HostName 10.10.0.189\n    User root\n    Port 10022\n    PreferredAuthentications LGGawZI4EhMyjgvlcrTVYQMwZfe2c19cHzxABL3IUPA\n    IdentityFile \"C:\\Users\\22759\\.ssh\\id_rsa\"\n```\n\n### 4.常见问题解决方法\n\n1. 文件权限不对\n\n   ```shell\n   $ chmod 700 /root\n   $ chmod 700 /root/.ssh\n   $ chmod 644 /root/.ssh/authorized_keys\n   ```\n\n2. sshd配置问题\n\n   编辑/etc/ssh/sshd_config文件；找到对应配置取消前面注释。\n\n   ```ini\n   # 开启秘钥登录\n   PubkeyAuthentication yes\n   AuthorizedKeysFile .ssh/authorized_keys .ssh/authorized_keys2\n   # 将下面的配置注释掉\n   # RSAAuthentication no\n   # 退出并执行重启sshd\n   service sshd restart\n   ```\n\n\n\n\n\n\n\n","source":"_posts/笔记.md","raw":"---\ntitle: 笔记\ndate: 2023-11-05 00:00:00\ntags: \n    - Python\n    - MySQL\n    - Linux\n    - Nginx\n    - sqlite3\n    - ES\n    - MongoDB\n---\n# 笔记\n\n## 一、Python的requirements.txt文件\n\n```python\n# 自动生成requirements.txt文件\npip freeze > requirements.txt\n# 安装requirements.txt依赖\npip install -r requirements.txt\n```\n\n## 二、vim编辑器中文乱码问题\n\n```shell\n# 执行（打开vi编辑器新建.vimrc文件）\n$: vi ~/.vimrc\n---------------------------------\n# 文件内容\nset encoding=utf-8  # 显示的编码\nset fileencoding=utf-8  # 写入文件的编码\n```\n\n## 三、Nginx配置\n\n```nginx\n# 配置静态文件\nserver {\n    location ^~/static {  # 静态文件路由\n        alias /usr/project/static;  # 静态文件所在目录\n    }\n}\n# 配置项目相关\nserver {\n    location /api {\n        proxy_pass http://127.0.0.1:8000;\n        proxy_set_header Host $host;\n        proxy_set_header X-Protocol https;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-USERTOKEN $http_x_usertoken;\n        proxy_connect_timeout xxx;\n        proxy_read_timeout xxx;\n        proxy_send_timeout xxx;\n    }\n}\n```\n\n## 四、pymysql\n\n```python\nimport pymysql\ndb = pymysql.connect(user='用户名', password='密码', host='主机ip', database='要连接的库名')  # 连接数据库\nsql = 'sql语句'\n'''使用with，调用完自动close()'''\nwith db:\n    print(db.open)  # 连接成功，返回True\n    cur = db.cursor()  # 创建游标\n    cur.execute(sql)  # 执行sql语句\n    cur.description  # 显示每列的详细信息\nprint(db.open)  # with结束以后自动关闭，返回False\n'''使用try'''\ncur = db.cursor()  # 创建游标\ntry:\n    cur.execute(sql)  # 执行sql语句\nexcept Exception as e:\n    print(e)  # 捕获异常\nfinally:\n    cur.close()  # 关掉游标\n    db.close()  # 断开连接\n```\n\n## 五、sqlite3\n\n```python\nimport sqlite3\ncon = sqlite3.connect('sqlite3文件所在位置')  # 创建连接\ncur = con.cursor()  # 创建游标\nsql = 'sql语句'\ntry:\n    cur.execute(sql)  # 执行sql语句\nexcept Exception as e:\n    print(e)  # 捕获异常\nfinally:\n    cur.close()  # 关掉游标\n    con.close()  # 断开连接\n```\n\n```lua\n-- lua 操作sqlite3\nlocal sqlite3 = require(\"sqlite3\")\nlocal env = sqlite3.sqlite3()\nlocal sql = env:connect(\"db文件路径\")\nlocal cursor, errorString = sql:execute(\"SQL语句\")\nlocal row = {}  -- 定义空table获取cursor中的数据\nwhile true do\n    row = cursor:fetch(row, \"a\")\n    if row ~= nil then\n        break\n   end\nend\n```\n\n```python\n# 其他操作\n# 开启表头：.header on\n# 列 对 齐：.mode column\n```\n\n\n\n## 六、scp远程拷贝\n\n```shell\nscp 连接名@连接地址:文件位置 要放到的位置\n```\n\n## 七、find查找文件\n\n```shell\nfind -name '文件名'\n```\n\n## 八、MySQL基本查询语句\n\n```sql\nSELECT * FROM 表名 WHERE 条件;  # 查询\nUPDATE 表名 SET 要修改的内容 WHERE 条件;  # 修改\nINSERT INTO 表名 (字段名) VALUES (字段对应内容)； # 添加数据\nDELETE FROM 表名 WHERE 条件;  # 删除字段\nDROP TABLE {表名}  # 删除表\n```\n\n## 九、es相关功能\n\n```shell\ncurl 'localhost:9200/_cat/indices?v'  # 查看所有索引\ncurl 'localhost:9200/_cat/indices?v&s={列名}'  # 查看所有索引，根据某一列进行排序\ncurl -XPOST 'http://localhost:9200/{索引名称}/_unfreeze'  # 索引解冻\ncurl -XGET 'http://localhost:9200/_mapping?pretty'  # 查看所有type\ncurl -XGET 'http://localhost:9200/_cat/templates/?v'  # 查看所有模板\ncurl -XGET 'http://localhost:9200/{索引名称}/_search?pretty'  # 查看索引数据\ncurl -XGET 'http://localhost:9200/{索引名称}/_mapping?pretty'  # 查看索引结构\ncurl -XGET 'http://localhost:9200/{索引名称}/_mapping/field/{字段名}?pretty'  # 查看索引下字段的映射\ncurl -XGET 'http://localhost:9200/_index_template/{索引模板名称}'  # 查看索引模板名称\ncurl -XGET 'http://localhost:9200/_component_template/{组件模板名称}'  # 查看组件模板\n# es的cat命令\nEsIp=\"http://localhost:9200/\"\ncurl -XGET ${EsIp}_cat/master?help  # help 查看帮助\ncurl -XGET ${EsIp}_cat/master?v  # verbose 显示列名，查看master节点\ncurl -XGET ${EsIp}_cat/master?v&h=host,ip,node  # Headers 只显示特定列\ncurl -XGET ${EsIp}_cat/indices?v&h=index,docs.count,store.size&bytes=kb  # Bytes 数字格式化展示\ncurl -XGET ${EsIp}_cat/indices?v&h=index,docs.count,store.size&bytes=kb&format=json&pretty  # json格式输出\ncurl -XGET ${EsIp}_cat/indices?v&h=index,docs.count,store.size&bytes=kb&format=yaml&pretty  # yaml格式输出\ncurl -XGET ${EsIp}_cat/indices?v&h=index,docs.count,store.size&bytes=kb&pretty&s=index,docs.count:desc  # Sort排序，根据index升序，docs.count降序\ncurl -XGET ${EsIp}_cat/health?v&h=cluster,status  # 查看集群健康状态\ncurl -XGET ${EsIp}_cat/nodes?v  # 查看集群节点\ncurl -XGET ${EsIp}_cat/nodes?v&h=ip,node.role,name,disk.avail  # 磁盘剩余\ncurl -XGET ${EsIp}_cat/allocation?v  # 查看每个数据节点上的分片数（shards），以及每个数据节点磁盘剩余\ncurl -XGET ${EsIp}_cat/pending_tasks?v  # 查看被挂起的任务\ncurl -XGET ${EsIp}_cat/plugins?v  # 查看每个节点正在运行的插件\ncurl -XGET ${EsIp}_cat/nodeattrs?v  # 查看每个节点的自定义属性\ncurl -XGET ${EsIp}_cat/recovery/.kibana?v&format=json&pretty  # 查看索引分片的恢复视图\ncurl -XGET ${EsIp}_cat/fielddata?v&h=node,field,size  # 查看每个数据节点上fielddate当前占用的堆栈内存\ncurl -XGET ${EsIp}_cat/recovery/.kibana?v&format=json&pretty  # 对某一字段进行查看\ncurl -XGET ${EsIp}_cat/repositories?v  # 查看注册的快照仓库\ncurl -XGET ${EsIp}_cat/snapshots/repo1?v  # 查看快照仓库下的快照\ncurl -XGET ${EsIp}_cat/thread_pool/bulk?v&format=json&pretty  # 查看每个节点线程池的统计信息\ncurl -XGET ${EsIp}_cat/indices/.monitoring*?v&h=index,health  # 查看索引\ncurl -XGET ${EsIp}_cat/aliases?v&h=alias,index  # 查看别名\ncurl -XGET ${EsIp}_cat/templates?v&format=json&pretty  # 查看索引模板\ncurl -XGET ${EsIp}_cat/count?v  # 整个集群文档数\ncurl -XGET ${EsIp}_cat/count/.monitoring*?v  # 某一类索引文档数\ncurl -XGET ${EsIp}_cat/shards?v&format=json&pretty&s=index  # 查看每个索引的分片\ncurl -XGET ${EsIp}_cat/segments/.kibana?v&format=json&pretty  # 查看每个索引的segment\n```\n\n## 十、字符串转换为字典\n\n```python\nstr = '{\"name\": \"Justin Bieber\", \"age\": 44, \"gender\": \"男\"}'\nimport json\nuser_dict = json.loads(str)\nprint(str)\n>>> {\"name\": \"Justin Bieber\", \"age\": 44, \"gender\": \"男\"}\n----------------------------------------------------------------------------\nimport ast\nuser_dict = ast.lateral_eval(str)\nprint(user_dict)\n>>> {\"name\": \"Justin Bieber\", \"age\": 44, \"gender\": \"男\"}\n```\n\n## 十一、IP转换、判断是否合法\n\n```python\n# 端口范围 [0, 65535]\nimport socket, struct\nsocket.inet_ntoa(struct.pack(\"!I\", ip))  # 整型转换为字符型 int -> str\n```\n\n```lua\n--判断ip是否合法\nfunction JudgeIPString(ipStr)\n    if type(ipStr) ~= \"string\" then\n        return false;\n    end\n    \n    --判断长度\n    local len = string.len(ipStr);\n    if len < 7 or len > 15 then --长度不对\n        return false;\n    end\n \n    --判断出现的非数字字符\n    local point = string.find(ipStr, \"%p\", 1); --字符\".\"出现的位置\n    local pointNum = 0; --字符\".\"出现的次数 正常ip有3个\".\"\n    while point ~= nil do\n        if string.sub(ipStr, point, point) ~= \".\" then --得到非数字符号不是字符\".\"\n            return false;\n        end\n        pointNum = pointNum + 1;\n        point = string.find(ipStr, \"%p\", point + 1);\n        if pointNum > 3 then\n            return false;\n        end\n    end\n    if pointNum ~= 3 then --不是正确的ip格式\n        return false;\n    end\n \n    --判断数字对不对\n    local num = {};\n    for w in string.gmatch(ipStr, \"%d+\") do\n        num[#num + 1] = w;\n        local kk = tonumber(w);\n        if kk == nil or kk > 255 then --不是数字或超过ip正常取值范围了\n            return false;\n        end\n    end\n \n    if #num ~= 4 then --不是4段数字\n        return false;\n    end\n \n    return ipStr;\nend\n```\n\n## 十二、Redis查询key\n\n```shell\n$ redis-cli\n$ keys *  # 查询所有的键\n$ dbsize  # 获取键的总数\n$ exists key [key]  # 查看键是否存在\n$ del [key] [key]  # 删除键，可以删除一个或多个\n$ type [key]  # 查看键的类型\n$ get [key]  # 查看键中的值\n$ set [key] [value]  # 存放键值\n$ mset [key] [value] [key] [value]  # 批量存放键值\n$ append [key] [value]  # 追加内容\n$ \n```\n\n## 十三、celery相关\n\n```python\n'''启动相关'''\n# celery启动worker命令\ncelery -A {包含celery文件的文件夹名称}.{celery启动文件} worker -l info\ncelery app {包含celery文件的文件夹名称}.{celery启动文件} worker -l info\n# 上面两条命令作用相同\n# celery启动beat的命令\ncelery beat -A {包含celery文件的文件夹名称}.{celery启动文件} -l info  # Linux\ncelery beat app {包含celery文件的文件夹名称}.{celery启动文件} -l info\ncelery -A {包含celery文件的文件夹名称}.{celery启动文件} beat -l info # Windows\n# 以上两条命令作用相同\n'''停止相关'''\n# 杀死所有celery进程\nps auxww | grep 'celery' | awk '{print $2}' | xargs kill -9\n```\n\n## 十四、Python操作\n\n```python\n'''判断某键是否在字典中'''\n{字典变量}.__contains__('{键}')\n```\n\n## 十五、MongoDB查询语法（大多数不能使用符号的都可以）\n\n```shell\n$gt: 大于\n$lt: 小于\n$gte: 大于等于\n$lte: 小于等于\n$ne: 不等于\n$mod: 取模运算\ndb.things.find(\"this.a % 10 == 1\") == db.things.find({a: {$mod: [10, 1]}})\n$all 和 $in: 匹配条件内所有的值\n{a: [ 1, 2, 3 ]}\n这个：`db.things.find({a: {$all: [ 2, 3 ]}});`可以匹配；\n这个：`db.things.find({a: {$all: [ 2, 3, 4 ]}});`无法匹配。\n```\n\n## 十六、设备一分钟内允许返回的重启思路\n\n>### python实现：\n>\n>```python\n># 格式化获取现在时间(时：分)\n>now_time = time.strftime(\"%H:%M\", time.localtime())\n># 分隔\n>now_time = now_time.split(\":\")\n># 给`分`位数字加一\n>dis_time = str(int(now_time[1]) + 1)\n># 再将时间进行替换拼接\n>now_time = \":\".join([dis_time if now_time.index[i] == 1 else i for i in now_time])\n># 执行定时关机\n>os.system(f\"shutdown -r {now_time}\")\n>```\n>\n>### node.js实现：\n>\n>```js\n>// 导入moment模块\n>const moment = require('moment');\n>var execSync = require(\"child_process\").execSync;\n>// var now_time = moment().format('YYYY-MM-DD HH:mm:ss');\n>// 获取现在时间（时：分）\n>var now_time = moment().format('HH:mm').toString().split(\":\");\n>// 给`分`位数字加一\n>var dis_time = Number(now_time[1]) + 1;\n>// 转换成字符串\n>var dis_time = dis_time.toString();\n>// 定义一个空数组\n>var new_time = new Array();\n>// 将需要的数（时、分）加入数组\n>new_time.push(now_time[0]);\n>new_time.push(dis_time);\n>// 将数组转换为字符串\n>var new_time = new_time.join(\":\");\n>execSync(\"shutdown -r \" + new_time);\n>```\n\n## 十七、node.js时间模块\n\n```js\nvar moment = require('moment')\nvar now_time = moment().format('YYYY-MM-DD HH:mm:ss')\n```\n\n## 十八、tar命令\n\n```shell\n# tar打包命令\n打包：tar -cvf 打包以后的文件名 要打包的文件名\n例子：tar -cvf flask.tar flask/\n\n打包：tar -zcvf 压缩以后的文件名 要压缩的文件名\n例子：tar -zcvf flask.tar.gz flask/\n\n# tar解压命令\n解包：tar -xvf(-zxvf) 压缩包名\n指定位置解包：tar -xvf(-zxvf) 压缩包名 -C 要解压的位置\n```\n\n## 十九、websocket\n\n```python\n# 报错是需要可证的，直接取消验证许可\nimport ssl\nfrom websocket import create_connection\n\nurl = 'wss://127.0.0.1/...'\nws = create_connection(url, sslopt={'cert_reqs': ssl.CERT_NONE})\n\n# 报错是没有'http、https、ws、wss'协议的，url的前缀不对\nurl = '`wss`://localhost/...'\n```\n\n## 二十、ip相关命令\n\n```shell\nifconfig eth0 | grep 'inet addr' | awk '{ print $2}' | awk -F: '{print $2}'  # 获取eth0的ip\n```\n\n## 二十一、Linux一些命令说明\n\n```shell\n~/  #是指 [/home/使用的用户/] \n```\n\n## 二十二、systemctl 服务命令无法启动\n\n```shell\n# 因环境变量无法启动\n# 场景：python使用的sqlite3与系统中的sqlite3版本不一致导致项目无法启动\n# 解决：\n\n# 创建文件：/etc/systemd/system/[服务].service.d/[任意名称].conf\n# **注**：服务名称必须与.service文件的相同\n# /etc/systemd/system/*.service.d/*.conf\n[Server]\nEnvironment=\"环境变量\"\nEnvironment=\"环境变量\"\n...\n\n# 重启服务\nsystemctl daemon-reload\n```\n\n## 二十三、无法加载文件 WindowsPowerShell\\profile.ps1，因为在此系统上禁止 运行脚本\n\n{% asset_img 笔记-23.png %}\n\n```shell\n# 解决方案：\n# 使用管理员身份打开，Power Shell（Windows终端）\nSet-ExecutionPolicy RemoteSigned\n# --如果弹出选项就输入： Y\nGet-ExecutionPolicy\n# --输出：RemoteSigned\n```\n\n## 二十四、命令行里面使用python导入报错\n\n{% asset_img 笔记-24.png %}\n\n```python\n# 解决方法\n>>> from django.conf import settings  \n>>> settings.configure()\n```\n\n## 二十五、Vue 打包命令\n\n```shell\nnpm run build\n```\n\n## 二十六、Navicat 远程连接数据库\n\n```mysql\n# 查询被连接主机MySQL用户状态\nUSE mysql;\nSELECT host,user FROM user WHERE user=\"root\";\n>>> host       user\n>>> localhost  root\n# 修改状态\nUPDATE user SET host=\"%\" WHERE user=\"root\";\n# 这样，任意机器都可以使用Navicat连接该设备的数据库了\n```\n\n## 二十七、MySQL初始化\n\n>MySQL 报错MySQL.sock，不存在\n>\n>ERROR 2002 (HY000): Can't connect to local MySQL server through socket '/var/run/mysqld/mysqld.sock' (2)\n\n```shell\nservice mysqld stop          # 停止MySQL服务\nrm -rf /var/lib/mysql/*      # 删除 /var/lib/mysql/ 下的所有文件\n# 下面的操作看情况进行\nrm /var/lock/subsys/mysqld   # 删除锁定文件\nkillall mysqld               # 杀死所有MySQL进程\n# 上面的操作看情况进行\nmysqld --initialize          # 初始化MySQL\nservice mysql start          # 启动MySQL服务\n```\n\n### 免密启动\n\n```shell \nvim /etc/mysql/mysql.conf.d/mysqld.cnf\n[mysqld]\nskip-grant-table\n# 退出\nservice mysql restart\n```\n\n### 清空 authentication_string 字段\n\n```mysql\nmysql -uroot                 # 进入MySQL\nUSE mysql;                   # 使用mysql数据库\nUPDATE `user`\nSET authentication_string=\"\"\nWHERE user=\"root\";           # 修改root用户密码为空\nexit                         # 退出数据库\n# 关闭免密，并重启服务\n```\n\n### 修改密码\n\n```mysql\nmysql -uroot\nSET password='自己的密码';\nFLUSH PRIVILEGES;\n```\n\n## 二十八、Vue自适应\n\n```vue\n<el-col\n        :lg=\"{ span: 3, offset: 0 }\"\n        :md=\"{ span: 8, offset: 0 }\"\n        :sm=\"{ span: 8, offset: 0 }\"\n        :xl=\"{ span: 6, offset: 0 }\" \n        :xs=\"{ span: 8, offset: 0 }\" \n>\n</el-col>\n<!--\n栅栏一共24个\nlg: 大屏显示器，办公使用\nmd：中屏显示器，笔记本                   span 栅格占据的列数 offset 栅格左侧的间隔数\nsm：小屏显示器，平板\nxs：超小屏显示器，手机\nxl：2k屏幕。\n-->\n```\n\n## 二十九、nvm node管理器\n\n**注**：nvm安装前删除计算机中的node.js\n\n### 第一步：下载nvm\n\n>路径：[Releases · coreybutler/nvm-windows (github.com)](https://github.com/coreybutler/nvm-windows/releases)\n\n{% asset_img 笔记-29.png %}\n\n### 第二步：安装\n\n>安装步骤\n>\n>#### 第一步：同意协议、下一步；（没什么说的，就不加图了）\n>\n>#### 第二步：选择nvm本地安装目录；（最好不要有空格）\n>\n>#### 第三步：设置nodejs快捷方式路径；（需要手动创建名为nodejs的快捷方式）\n>\n>#### 第四部：install -> finish\n\n### 第三步：查看\n\n>命令窗口键入：nvm （查看是否安装成功）\n\n| 参数                   | 说明                                 |\n| ---------------------- | ------------------------------------ |\n| --help                 | 显示命令行帮助信息                   |\n| --version              | 打印当前nvm版本号                    |\n| deactivate             | 取消当前nvm命令行效果                |\n| install [-s] <version> | 从源下载一个版本为<version>的node.js |\n| uninstall <version>    | 卸载一个版本为<version>的node.js     |\n| use <version>          | 使用<version>版本的node              |\n| current                | 查看当前使用的node版本               |\n| ls                     | 查看所有**本地**可用的node版本       |\n| ls <version>           | 查看指定版本                         |\n| ls-remote              | 查看所有可用的远程版本（Linux与Mac） |\n| list available         | 同上（windows）                      |\n\n## 三十、搭梯子\n\n购买远程代理：[X寄场](https://x.syksdw.com/#/dashboard)\n\n登录用户名：lyt_sy@sina.com\n\n密    码：设置好的密码\n\n安装包路径：[v2rayN](https://github.com/97668589/v2rayN/releases/tag/v6.9)\n\n### 使用\n\n1. 双击运行；\n{% asset_img 笔记-30-1.png %}\n   - 如果没有将程序放到桌面，找不到程序可以双击右下角\n   {% asset_img 笔记-30-2.png %}\n\n2. 登录x-寄场：复制v2ray订阅地址；\n{% asset_img 笔记-30-3.png %}\n\n3. 填写备注等信息，注意：勾选**备用**，然后保存；\n{% asset_img 笔记-30-4.png %}\n\n4. 更新当前订阅；\n{% asset_img 笔记-30-5.png %}\n\n5. 测试-启用节点（选择一个右键即可）。\n{% asset_img 笔记-30-6.png %}\n\n## 三十一、PostgreSQL设置自增长\n\n```postgresql\n-- PostgreSQL 与 MySQL 不同，MySQL设置自增长直接用autoincrement设置，PostgreSQL需要先设置序列对象，并在创建字段时使用该序列对象作为缺省值，需要设置该字段不为空\n/* 设置序列对象 */\n[CREATE | ALTER | DROP] SEQUENCE IF NOT EXISTS <序列对象名>_seq\n\tINCREMENT 1          -- 序列每次自增多少\n\tSTART 1              -- 从1开始\n\tMINVALUE 1           -- 序列最小值\n\tMAXVALUE 2147483647  -- 序列最大值\n\tCACHE 1              -- 缓存序列（服务器重启之后缓存会丢失)\n\tNO CYCLE;            -- 是否循环（NO CYCLE | CYCLE: 序列增长到最大值之后是否从新开始）\n/* 创建表时引用 */\nCREATE TABLE <表名> (\n    \"id\" int4 NOT NULL DEFAULT NEXTVAL('<序列对象名>_seq::regclass'),\n    ......\n)\n```\n\n## 三十二、VSCode 远程免密连接\n\nVSCode没有保存密码功能，只能通过ssh秘钥的方式进行自动登录，下面是使用RSA秘钥方式自动登录开发服务器。\n\n>默认每次连接，打开文件都得输入密码，当密码很复杂的时候这是一件很痛苦的是。\n\n### 1.生成秘钥对\n\n默认电脑上安装了git，没有的话就先安装；打开终端或者git-bash输入以下命令（邮箱使用自己的）。\n\n```shell\n$ ssh-keygen -t rsa -C \"<邮箱>\"\n```\n\n然后一路回车直到完成；秘钥文件存放在：`C:\\User\\<用户名>\\.ssh`\n\n### 2.将公钥上传到服务器\n\n1. 将id_rsa.pub重命名为authorized_keys；\n2. 然后上传到服务器的/root/.ssh目录下（没有则新建.ssh）；\n3. 修改VSCode的ssh_config文件。\n\n### 3.配置VSCode远程ssh文件\n\n以下是配置文件的栗子\n\n```ini\nHost <服务IP>\n    HostName <服务名称>\n    User <ssh用户名>\n    Port <ssh连接端口>\n    PreferredAuthentications publickey\n    IdentityFile <本地key文件>\n# 举例\nHost 10.10.0.189\n    HostName 10.10.0.189\n    User root\n    Port 10022\n    PreferredAuthentications LGGawZI4EhMyjgvlcrTVYQMwZfe2c19cHzxABL3IUPA\n    IdentityFile \"C:\\Users\\22759\\.ssh\\id_rsa\"\n```\n\n### 4.常见问题解决方法\n\n1. 文件权限不对\n\n   ```shell\n   $ chmod 700 /root\n   $ chmod 700 /root/.ssh\n   $ chmod 644 /root/.ssh/authorized_keys\n   ```\n\n2. sshd配置问题\n\n   编辑/etc/ssh/sshd_config文件；找到对应配置取消前面注释。\n\n   ```ini\n   # 开启秘钥登录\n   PubkeyAuthentication yes\n   AuthorizedKeysFile .ssh/authorized_keys .ssh/authorized_keys2\n   # 将下面的配置注释掉\n   # RSAAuthentication no\n   # 退出并执行重启sshd\n   service sshd restart\n   ```\n\n\n\n\n\n\n\n","slug":"笔记","published":1,"updated":"2023-11-06T08:17:58.239Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clooa9v4s0001gs6r1j757myv","content":"<h1 id=\"笔记\"><a href=\"#笔记\" class=\"headerlink\" title=\"笔记\"></a>笔记</h1><h2 id=\"一、Python的requirements-txt文件\"><a href=\"#一、Python的requirements-txt文件\" class=\"headerlink\" title=\"一、Python的requirements.txt文件\"></a>一、Python的requirements.txt文件</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 自动生成requirements.txt文件</span>\npip freeze <span class=\"token operator\">&gt;</span> requirements<span class=\"token punctuation\">.</span>txt\n<span class=\"token comment\"># 安装requirements.txt依赖</span>\npip install <span class=\"token operator\">-</span>r requirements<span class=\"token punctuation\">.</span>txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"二、vim编辑器中文乱码问题\"><a href=\"#二、vim编辑器中文乱码问题\" class=\"headerlink\" title=\"二、vim编辑器中文乱码问题\"></a>二、vim编辑器中文乱码问题</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 执行（打开vi编辑器新建.vimrc文件）</span>\n$: <span class=\"token function\">vi</span> ~/.vimrc\n---------------------------------\n<span class=\"token comment\"># 文件内容</span>\n<span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span>utf-8  <span class=\"token comment\"># 显示的编码</span>\n<span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">fileencoding</span><span class=\"token operator\">=</span>utf-8  <span class=\"token comment\"># 写入文件的编码</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"三、Nginx配置\"><a href=\"#三、Nginx配置\" class=\"headerlink\" title=\"三、Nginx配置\"></a>三、Nginx配置</h2><pre class=\"line-numbers language-nginx\" data-language=\"nginx\"><code class=\"language-nginx\"><span class=\"token comment\"># 配置静态文件</span>\n<span class=\"token directive\"><span class=\"token keyword\">server</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token directive\"><span class=\"token keyword\">location</span> ^~/static</span> <span class=\"token punctuation\">{</span>  <span class=\"token comment\"># 静态文件路由</span>\n        <span class=\"token directive\"><span class=\"token keyword\">alias</span> /usr/project/static</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\"># 静态文件所在目录</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\"># 配置项目相关</span>\n<span class=\"token directive\"><span class=\"token keyword\">server</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token directive\"><span class=\"token keyword\">location</span> /api</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token directive\"><span class=\"token keyword\">proxy_pass</span> http://127.0.0.1:8000</span><span class=\"token punctuation\">;</span>\n        <span class=\"token directive\"><span class=\"token keyword\">proxy_set_header</span> Host <span class=\"token variable\">$host</span></span><span class=\"token punctuation\">;</span>\n        <span class=\"token directive\"><span class=\"token keyword\">proxy_set_header</span> X-Protocol https</span><span class=\"token punctuation\">;</span>\n        <span class=\"token directive\"><span class=\"token keyword\">proxy_set_header</span> X-Forwarded-For <span class=\"token variable\">$proxy_add_x_forwarded_for</span></span><span class=\"token punctuation\">;</span>\n        <span class=\"token directive\"><span class=\"token keyword\">proxy_set_header</span> X-USERTOKEN <span class=\"token variable\">$http_x_usertoken</span></span><span class=\"token punctuation\">;</span>\n        <span class=\"token directive\"><span class=\"token keyword\">proxy_connect_timeout</span> xxx</span><span class=\"token punctuation\">;</span>\n        <span class=\"token directive\"><span class=\"token keyword\">proxy_read_timeout</span> xxx</span><span class=\"token punctuation\">;</span>\n        <span class=\"token directive\"><span class=\"token keyword\">proxy_send_timeout</span> xxx</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"四、pymysql\"><a href=\"#四、pymysql\" class=\"headerlink\" title=\"四、pymysql\"></a>四、pymysql</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pymysql\ndb <span class=\"token operator\">=</span> pymysql<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>user<span class=\"token operator\">=</span><span class=\"token string\">'用户名'</span><span class=\"token punctuation\">,</span> password<span class=\"token operator\">=</span><span class=\"token string\">'密码'</span><span class=\"token punctuation\">,</span> host<span class=\"token operator\">=</span><span class=\"token string\">'主机ip'</span><span class=\"token punctuation\">,</span> database<span class=\"token operator\">=</span><span class=\"token string\">'要连接的库名'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 连接数据库</span>\nsql <span class=\"token operator\">=</span> <span class=\"token string\">'sql语句'</span>\n<span class=\"token triple-quoted-string string\">'''使用with，调用完自动close()'''</span>\n<span class=\"token keyword\">with</span> db<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 连接成功，返回True</span>\n    cur <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 创建游标</span>\n    cur<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 执行sql语句</span>\n    cur<span class=\"token punctuation\">.</span>description  <span class=\"token comment\"># 显示每列的详细信息</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># with结束以后自动关闭，返回False</span>\n<span class=\"token triple-quoted-string string\">'''使用try'''</span>\ncur <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 创建游标</span>\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    cur<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 执行sql语句</span>\n<span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 捕获异常</span>\n<span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n    cur<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 关掉游标</span>\n    db<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 断开连接</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"五、sqlite3\"><a href=\"#五、sqlite3\" class=\"headerlink\" title=\"五、sqlite3\"></a>五、sqlite3</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> sqlite3\ncon <span class=\"token operator\">=</span> sqlite3<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span><span class=\"token string\">'sqlite3文件所在位置'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 创建连接</span>\ncur <span class=\"token operator\">=</span> con<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 创建游标</span>\nsql <span class=\"token operator\">=</span> <span class=\"token string\">'sql语句'</span>\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    cur<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 执行sql语句</span>\n<span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 捕获异常</span>\n<span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n    cur<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 关掉游标</span>\n    con<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 断开连接</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token comment\">-- lua 操作sqlite3</span>\n<span class=\"token keyword\">local</span> sqlite3 <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sqlite3\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">local</span> env <span class=\"token operator\">=</span> sqlite3<span class=\"token punctuation\">.</span><span class=\"token function\">sqlite3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">local</span> sql <span class=\"token operator\">=</span> env<span class=\"token punctuation\">:</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"db文件路径\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">local</span> cursor<span class=\"token punctuation\">,</span> errorString <span class=\"token operator\">=</span> sql<span class=\"token punctuation\">:</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SQL语句\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">local</span> row <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>  <span class=\"token comment\">-- 定义空table获取cursor中的数据</span>\n<span class=\"token keyword\">while</span> <span class=\"token keyword\">true</span> <span class=\"token keyword\">do</span>\n    row <span class=\"token operator\">=</span> cursor<span class=\"token punctuation\">:</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> row <span class=\"token operator\">~=</span> <span class=\"token keyword\">nil</span> <span class=\"token keyword\">then</span>\n        <span class=\"token keyword\">break</span>\n   <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 其他操作</span>\n<span class=\"token comment\"># 开启表头：.header on</span>\n<span class=\"token comment\"># 列 对 齐：.mode column</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"六、scp远程拷贝\"><a href=\"#六、scp远程拷贝\" class=\"headerlink\" title=\"六、scp远程拷贝\"></a>六、scp远程拷贝</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">scp</span> 连接名@连接地址:文件位置 要放到的位置<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"七、find查找文件\"><a href=\"#七、find查找文件\" class=\"headerlink\" title=\"七、find查找文件\"></a>七、find查找文件</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">find</span> <span class=\"token parameter variable\">-name</span> <span class=\"token string\">'文件名'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"八、MySQL基本查询语句\"><a href=\"#八、MySQL基本查询语句\" class=\"headerlink\" title=\"八、MySQL基本查询语句\"></a>八、MySQL基本查询语句</h2><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> 表名 <span class=\"token keyword\">WHERE</span> 条件<span class=\"token punctuation\">;</span>  <span class=\"token comment\"># 查询</span>\n<span class=\"token keyword\">UPDATE</span> 表名 <span class=\"token keyword\">SET</span> 要修改的内容 <span class=\"token keyword\">WHERE</span> 条件<span class=\"token punctuation\">;</span>  <span class=\"token comment\"># 修改</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> 表名 <span class=\"token punctuation\">(</span>字段名<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span>字段对应内容<span class=\"token punctuation\">)</span>； <span class=\"token comment\"># 添加数据</span>\n<span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">FROM</span> 表名 <span class=\"token keyword\">WHERE</span> 条件<span class=\"token punctuation\">;</span>  <span class=\"token comment\"># 删除字段</span>\n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> {表名}  <span class=\"token comment\"># 删除表</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"九、es相关功能\"><a href=\"#九、es相关功能\" class=\"headerlink\" title=\"九、es相关功能\"></a>九、es相关功能</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> <span class=\"token string\">'localhost:9200/_cat/indices?v'</span>  <span class=\"token comment\"># 查看所有索引</span>\n<span class=\"token function\">curl</span> <span class=\"token string\">'localhost:9200/_cat/indices?v&amp;s={列名}'</span>  <span class=\"token comment\"># 查看所有索引，根据某一列进行排序</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XPOST</span> <span class=\"token string\">'http://localhost:9200/{索引名称}/_unfreeze'</span>  <span class=\"token comment\"># 索引解冻</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token string\">'http://localhost:9200/_mapping?pretty'</span>  <span class=\"token comment\"># 查看所有type</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token string\">'http://localhost:9200/_cat/templates/?v'</span>  <span class=\"token comment\"># 查看所有模板</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token string\">'http://localhost:9200/{索引名称}/_search?pretty'</span>  <span class=\"token comment\"># 查看索引数据</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token string\">'http://localhost:9200/{索引名称}/_mapping?pretty'</span>  <span class=\"token comment\"># 查看索引结构</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token string\">'http://localhost:9200/{索引名称}/_mapping/field/{字段名}?pretty'</span>  <span class=\"token comment\"># 查看索引下字段的映射</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token string\">'http://localhost:9200/_index_template/{索引模板名称}'</span>  <span class=\"token comment\"># 查看索引模板名称</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token string\">'http://localhost:9200/_component_template/{组件模板名称}'</span>  <span class=\"token comment\"># 查看组件模板</span>\n<span class=\"token comment\"># es的cat命令</span>\n<span class=\"token assign-left variable\">EsIp</span><span class=\"token operator\">=</span><span class=\"token string\">\"http://localhost:9200/\"</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">${EsIp}</span>_cat/master?help  <span class=\"token comment\"># help 查看帮助</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">${EsIp}</span>_cat/master?v  <span class=\"token comment\"># verbose 显示列名，查看master节点</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">${EsIp}</span>_cat/master?v<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">h</span><span class=\"token operator\">=</span>host,ip,node  <span class=\"token comment\"># Headers 只显示特定列</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">${EsIp}</span>_cat/indices?v<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">h</span><span class=\"token operator\">=</span>index,docs.count,store.size<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">bytes</span><span class=\"token operator\">=</span>kb  <span class=\"token comment\"># Bytes 数字格式化展示</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">${EsIp}</span>_cat/indices?v<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">h</span><span class=\"token operator\">=</span>index,docs.count,store.size<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">bytes</span><span class=\"token operator\">=</span>kb<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">format</span><span class=\"token operator\">=</span>json<span class=\"token operator\">&amp;</span>pretty  <span class=\"token comment\"># json格式输出</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">${EsIp}</span>_cat/indices?v<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">h</span><span class=\"token operator\">=</span>index,docs.count,store.size<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">bytes</span><span class=\"token operator\">=</span>kb<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">format</span><span class=\"token operator\">=</span>yaml<span class=\"token operator\">&amp;</span>pretty  <span class=\"token comment\"># yaml格式输出</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">${EsIp}</span>_cat/indices?v<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">h</span><span class=\"token operator\">=</span>index,docs.count,store.size<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">bytes</span><span class=\"token operator\">=</span>kb<span class=\"token operator\">&amp;</span>pretty<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">s</span><span class=\"token operator\">=</span>index,docs.count:desc  <span class=\"token comment\"># Sort排序，根据index升序，docs.count降序</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">${EsIp}</span>_cat/health?v<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">h</span><span class=\"token operator\">=</span>cluster,status  <span class=\"token comment\"># 查看集群健康状态</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">${EsIp}</span>_cat/nodes?v  <span class=\"token comment\"># 查看集群节点</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">${EsIp}</span>_cat/nodes?v<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">h</span><span class=\"token operator\">=</span>ip,node.role,name,disk.avail  <span class=\"token comment\"># 磁盘剩余</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">${EsIp}</span>_cat/allocation?v  <span class=\"token comment\"># 查看每个数据节点上的分片数（shards），以及每个数据节点磁盘剩余</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">${EsIp}</span>_cat/pending_tasks?v  <span class=\"token comment\"># 查看被挂起的任务</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">${EsIp}</span>_cat/plugins?v  <span class=\"token comment\"># 查看每个节点正在运行的插件</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">${EsIp}</span>_cat/nodeattrs?v  <span class=\"token comment\"># 查看每个节点的自定义属性</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">${EsIp}</span>_cat/recovery/.kibana?v<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">format</span><span class=\"token operator\">=</span>json<span class=\"token operator\">&amp;</span>pretty  <span class=\"token comment\"># 查看索引分片的恢复视图</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">${EsIp}</span>_cat/fielddata?v<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">h</span><span class=\"token operator\">=</span>node,field,size  <span class=\"token comment\"># 查看每个数据节点上fielddate当前占用的堆栈内存</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">${EsIp}</span>_cat/recovery/.kibana?v<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">format</span><span class=\"token operator\">=</span>json<span class=\"token operator\">&amp;</span>pretty  <span class=\"token comment\"># 对某一字段进行查看</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">${EsIp}</span>_cat/repositories?v  <span class=\"token comment\"># 查看注册的快照仓库</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">${EsIp}</span>_cat/snapshots/repo1?v  <span class=\"token comment\"># 查看快照仓库下的快照</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">${EsIp}</span>_cat/thread_pool/bulk?v<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">format</span><span class=\"token operator\">=</span>json<span class=\"token operator\">&amp;</span>pretty  <span class=\"token comment\"># 查看每个节点线程池的统计信息</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">${EsIp}</span>_cat/indices/.monitoring*?v<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">h</span><span class=\"token operator\">=</span>index,health  <span class=\"token comment\"># 查看索引</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">${EsIp}</span>_cat/aliases?v<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">h</span><span class=\"token operator\">=</span>alias,index  <span class=\"token comment\"># 查看别名</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">${EsIp}</span>_cat/templates?v<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">format</span><span class=\"token operator\">=</span>json<span class=\"token operator\">&amp;</span>pretty  <span class=\"token comment\"># 查看索引模板</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">${EsIp}</span>_cat/count?v  <span class=\"token comment\"># 整个集群文档数</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">${EsIp}</span>_cat/count/.monitoring*?v  <span class=\"token comment\"># 某一类索引文档数</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">${EsIp}</span>_cat/shards?v<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">format</span><span class=\"token operator\">=</span>json<span class=\"token operator\">&amp;</span>pretty<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">s</span><span class=\"token operator\">=</span>index  <span class=\"token comment\"># 查看每个索引的分片</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">${EsIp}</span>_cat/segments/.kibana?v<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">format</span><span class=\"token operator\">=</span>json<span class=\"token operator\">&amp;</span>pretty  <span class=\"token comment\"># 查看每个索引的segment</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"十、字符串转换为字典\"><a href=\"#十、字符串转换为字典\" class=\"headerlink\" title=\"十、字符串转换为字典\"></a>十、字符串转换为字典</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">'{\"name\": \"Justin Bieber\", \"age\": 44, \"gender\": \"男\"}'</span>\n<span class=\"token keyword\">import</span> json\nuser_dict <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&gt;&gt;</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Justin Bieber\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"gender\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"男\"</span><span class=\"token punctuation\">}</span>\n<span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span>\n<span class=\"token keyword\">import</span> ast\nuser_dict <span class=\"token operator\">=</span> ast<span class=\"token punctuation\">.</span>lateral_eval<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>user_dict<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&gt;&gt;</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Justin Bieber\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"gender\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"男\"</span><span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"十一、IP转换、判断是否合法\"><a href=\"#十一、IP转换、判断是否合法\" class=\"headerlink\" title=\"十一、IP转换、判断是否合法\"></a>十一、IP转换、判断是否合法</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 端口范围 [0, 65535]</span>\n<span class=\"token keyword\">import</span> socket<span class=\"token punctuation\">,</span> struct\nsocket<span class=\"token punctuation\">.</span>inet_ntoa<span class=\"token punctuation\">(</span>struct<span class=\"token punctuation\">.</span>pack<span class=\"token punctuation\">(</span><span class=\"token string\">\"!I\"</span><span class=\"token punctuation\">,</span> ip<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 整型转换为字符型 int -&gt; str</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token comment\">--判断ip是否合法</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">JudgeIPString</span><span class=\"token punctuation\">(</span>ipStr<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token function\">type</span><span class=\"token punctuation\">(</span>ipStr<span class=\"token punctuation\">)</span> <span class=\"token operator\">~=</span> <span class=\"token string\">\"string\"</span> <span class=\"token keyword\">then</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">end</span>\n    \n    <span class=\"token comment\">--判断长度</span>\n    <span class=\"token keyword\">local</span> len <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>ipStr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> len <span class=\"token operator\">&lt;</span> <span class=\"token number\">7</span> <span class=\"token keyword\">or</span> len <span class=\"token operator\">&gt;</span> <span class=\"token number\">15</span> <span class=\"token keyword\">then</span> <span class=\"token comment\">--长度不对</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">end</span>\n \n    <span class=\"token comment\">--判断出现的非数字字符</span>\n    <span class=\"token keyword\">local</span> point <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>ipStr<span class=\"token punctuation\">,</span> <span class=\"token string\">\"%p\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">--字符\".\"出现的位置</span>\n    <span class=\"token keyword\">local</span> pointNum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">--字符\".\"出现的次数 正常ip有3个\".\"</span>\n    <span class=\"token keyword\">while</span> point <span class=\"token operator\">~=</span> <span class=\"token keyword\">nil</span> <span class=\"token keyword\">do</span>\n        <span class=\"token keyword\">if</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>ipStr<span class=\"token punctuation\">,</span> point<span class=\"token punctuation\">,</span> point<span class=\"token punctuation\">)</span> <span class=\"token operator\">~=</span> <span class=\"token string\">\".\"</span> <span class=\"token keyword\">then</span> <span class=\"token comment\">--得到非数字符号不是字符\".\"</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">end</span>\n        pointNum <span class=\"token operator\">=</span> pointNum <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        point <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>ipStr<span class=\"token punctuation\">,</span> <span class=\"token string\">\"%p\"</span><span class=\"token punctuation\">,</span> point <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> pointNum <span class=\"token operator\">&gt;</span> <span class=\"token number\">3</span> <span class=\"token keyword\">then</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">end</span>\n    <span class=\"token keyword\">end</span>\n    <span class=\"token keyword\">if</span> pointNum <span class=\"token operator\">~=</span> <span class=\"token number\">3</span> <span class=\"token keyword\">then</span> <span class=\"token comment\">--不是正确的ip格式</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">end</span>\n \n    <span class=\"token comment\">--判断数字对不对</span>\n    <span class=\"token keyword\">local</span> num <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> w <span class=\"token keyword\">in</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">gmatch</span><span class=\"token punctuation\">(</span>ipStr<span class=\"token punctuation\">,</span> <span class=\"token string\">\"%d+\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n        num<span class=\"token punctuation\">[</span><span class=\"token operator\">#</span>num <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> w<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">local</span> kk <span class=\"token operator\">=</span> <span class=\"token function\">tonumber</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> kk <span class=\"token operator\">==</span> <span class=\"token keyword\">nil</span> <span class=\"token keyword\">or</span> kk <span class=\"token operator\">&gt;</span> <span class=\"token number\">255</span> <span class=\"token keyword\">then</span> <span class=\"token comment\">--不是数字或超过ip正常取值范围了</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">end</span>\n    <span class=\"token keyword\">end</span>\n \n    <span class=\"token keyword\">if</span> <span class=\"token operator\">#</span>num <span class=\"token operator\">~=</span> <span class=\"token number\">4</span> <span class=\"token keyword\">then</span> <span class=\"token comment\">--不是4段数字</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">end</span>\n \n    <span class=\"token keyword\">return</span> ipStr<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">end</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"十二、Redis查询key\"><a href=\"#十二、Redis查询key\" class=\"headerlink\" title=\"十二、Redis查询key\"></a>十二、Redis查询key</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ redis-cli\n$ keys *  <span class=\"token comment\"># 查询所有的键</span>\n$ dbsize  <span class=\"token comment\"># 获取键的总数</span>\n$ exists key <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 查看键是否存在</span>\n$ del <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 删除键，可以删除一个或多个</span>\n$ <span class=\"token builtin class-name\">type</span> <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 查看键的类型</span>\n$ get <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 查看键中的值</span>\n$ <span class=\"token builtin class-name\">set</span> <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>value<span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 存放键值</span>\n$ mset <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>value<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>value<span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 批量存放键值</span>\n$ append <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>value<span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 追加内容</span>\n$ <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"十三、celery相关\"><a href=\"#十三、celery相关\" class=\"headerlink\" title=\"十三、celery相关\"></a>十三、celery相关</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token triple-quoted-string string\">'''启动相关'''</span>\n<span class=\"token comment\"># celery启动worker命令</span>\ncelery <span class=\"token operator\">-</span>A <span class=\"token punctuation\">{</span>包含celery文件的文件夹名称<span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">{</span>celery启动文件<span class=\"token punctuation\">}</span> worker <span class=\"token operator\">-</span>l info\ncelery app <span class=\"token punctuation\">{</span>包含celery文件的文件夹名称<span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">{</span>celery启动文件<span class=\"token punctuation\">}</span> worker <span class=\"token operator\">-</span>l info\n<span class=\"token comment\"># 上面两条命令作用相同</span>\n<span class=\"token comment\"># celery启动beat的命令</span>\ncelery beat <span class=\"token operator\">-</span>A <span class=\"token punctuation\">{</span>包含celery文件的文件夹名称<span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">{</span>celery启动文件<span class=\"token punctuation\">}</span> <span class=\"token operator\">-</span>l info  <span class=\"token comment\"># Linux</span>\ncelery beat app <span class=\"token punctuation\">{</span>包含celery文件的文件夹名称<span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">{</span>celery启动文件<span class=\"token punctuation\">}</span> <span class=\"token operator\">-</span>l info\ncelery <span class=\"token operator\">-</span>A <span class=\"token punctuation\">{</span>包含celery文件的文件夹名称<span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">{</span>celery启动文件<span class=\"token punctuation\">}</span> beat <span class=\"token operator\">-</span>l info <span class=\"token comment\"># Windows</span>\n<span class=\"token comment\"># 以上两条命令作用相同</span>\n<span class=\"token triple-quoted-string string\">'''停止相关'''</span>\n<span class=\"token comment\"># 杀死所有celery进程</span>\nps auxww <span class=\"token operator\">|</span> grep <span class=\"token string\">'celery'</span> <span class=\"token operator\">|</span> awk <span class=\"token string\">'{print $2}'</span> <span class=\"token operator\">|</span> xargs kill <span class=\"token operator\">-</span><span class=\"token number\">9</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"十四、Python操作\"><a href=\"#十四、Python操作\" class=\"headerlink\" title=\"十四、Python操作\"></a>十四、Python操作</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token triple-quoted-string string\">'''判断某键是否在字典中'''</span>\n<span class=\"token punctuation\">{</span>字典变量<span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span>__contains__<span class=\"token punctuation\">(</span><span class=\"token string\">'{键}'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"十五、MongoDB查询语法（大多数不能使用符号的都可以）\"><a href=\"#十五、MongoDB查询语法（大多数不能使用符号的都可以）\" class=\"headerlink\" title=\"十五、MongoDB查询语法（大多数不能使用符号的都可以）\"></a>十五、MongoDB查询语法（大多数不能使用符号的都可以）</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$gt</span><span class=\"token builtin class-name\">:</span> 大于\n<span class=\"token variable\">$lt</span><span class=\"token builtin class-name\">:</span> 小于\n<span class=\"token variable\">$gte</span><span class=\"token builtin class-name\">:</span> 大于等于\n<span class=\"token variable\">$lte</span><span class=\"token builtin class-name\">:</span> 小于等于\n<span class=\"token variable\">$ne</span><span class=\"token builtin class-name\">:</span> 不等于\n<span class=\"token variable\">$mod</span><span class=\"token builtin class-name\">:</span> 取模运算\ndb.things.find<span class=\"token punctuation\">(</span><span class=\"token string\">\"this.a % 10 == 1\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> db.things.find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>a: <span class=\"token punctuation\">{</span><span class=\"token variable\">$mod</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span>, <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token variable\">$all</span> 和 <span class=\"token variable\">$in</span><span class=\"token builtin class-name\">:</span> 匹配条件内所有的值\n<span class=\"token punctuation\">{</span>a: <span class=\"token punctuation\">[</span> <span class=\"token number\">1</span>, <span class=\"token number\">2</span>, <span class=\"token number\">3</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>\n这个：<span class=\"token variable\"><span class=\"token variable\">`</span>db.things.find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>a: <span class=\"token punctuation\">{</span>$all: <span class=\"token punctuation\">[</span> <span class=\"token number\">2</span>, <span class=\"token number\">3</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token variable\">`</span></span>可以匹配；\n这个：<span class=\"token variable\"><span class=\"token variable\">`</span>db.things.find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>a: <span class=\"token punctuation\">{</span>$all: <span class=\"token punctuation\">[</span> <span class=\"token number\">2</span>, <span class=\"token number\">3</span>, <span class=\"token number\">4</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token variable\">`</span></span>无法匹配。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"十六、设备一分钟内允许返回的重启思路\"><a href=\"#十六、设备一分钟内允许返回的重启思路\" class=\"headerlink\" title=\"十六、设备一分钟内允许返回的重启思路\"></a>十六、设备一分钟内允许返回的重启思路</h2><blockquote>\n<h3 id=\"python实现：\"><a href=\"#python实现：\" class=\"headerlink\" title=\"python实现：\"></a>python实现：</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">&gt;</span><span class=\"token comment\"># 格式化获取现在时间(时：分)</span>\n<span class=\"token operator\">&gt;</span>now_time <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">\"%H:%M\"</span><span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">.</span>localtime<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&gt;</span><span class=\"token comment\"># 分隔</span>\n<span class=\"token operator\">&gt;</span>now_time <span class=\"token operator\">=</span> now_time<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&gt;</span><span class=\"token comment\"># 给`分`位数字加一</span>\n<span class=\"token operator\">&gt;</span>dis_time <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>now_time<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&gt;</span><span class=\"token comment\"># 再将时间进行替换拼接</span>\n<span class=\"token operator\">&gt;</span>now_time <span class=\"token operator\">=</span> <span class=\"token string\">\":\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>dis_time <span class=\"token keyword\">if</span> now_time<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token keyword\">else</span> i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> now_time<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&gt;</span><span class=\"token comment\"># 执行定时关机</span>\n<span class=\"token operator\">&gt;</span>os<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"shutdown -r </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>now_time<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"node-js实现：\"><a href=\"#node-js实现：\" class=\"headerlink\" title=\"node.js实现：\"></a>node.js实现：</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&gt;</span><span class=\"token comment\">// 导入moment模块</span>\n<span class=\"token operator\">&gt;</span><span class=\"token keyword\">const</span> moment <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'moment'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&gt;</span><span class=\"token keyword\">var</span> execSync <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"child_process\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>execSync<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&gt;</span><span class=\"token comment\">// var now_time = moment().format('YYYY-MM-DD HH:mm:ss');</span>\n<span class=\"token operator\">&gt;</span><span class=\"token comment\">// 获取现在时间（时：分）</span>\n<span class=\"token operator\">&gt;</span><span class=\"token keyword\">var</span> now_time <span class=\"token operator\">=</span> <span class=\"token function\">moment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'HH:mm'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&gt;</span><span class=\"token comment\">// 给`分`位数字加一</span>\n<span class=\"token operator\">&gt;</span><span class=\"token keyword\">var</span> dis_time <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>now_time<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&gt;</span><span class=\"token comment\">// 转换成字符串</span>\n<span class=\"token operator\">&gt;</span><span class=\"token keyword\">var</span> dis_time <span class=\"token operator\">=</span> dis_time<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&gt;</span><span class=\"token comment\">// 定义一个空数组</span>\n<span class=\"token operator\">&gt;</span><span class=\"token keyword\">var</span> new_time <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&gt;</span><span class=\"token comment\">// 将需要的数（时、分）加入数组</span>\n<span class=\"token operator\">&gt;</span>new_time<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>now_time<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&gt;</span>new_time<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>dis_time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&gt;</span><span class=\"token comment\">// 将数组转换为字符串</span>\n<span class=\"token operator\">&gt;</span><span class=\"token keyword\">var</span> new_time <span class=\"token operator\">=</span> new_time<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&gt;</span><span class=\"token function\">execSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"shutdown -r \"</span> <span class=\"token operator\">+</span> new_time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</blockquote>\n<h2 id=\"十七、node-js时间模块\"><a href=\"#十七、node-js时间模块\" class=\"headerlink\" title=\"十七、node.js时间模块\"></a>十七、node.js时间模块</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> moment <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'moment'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">var</span> now_time <span class=\"token operator\">=</span> <span class=\"token function\">moment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'YYYY-MM-DD HH:mm:ss'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"十八、tar命令\"><a href=\"#十八、tar命令\" class=\"headerlink\" title=\"十八、tar命令\"></a>十八、tar命令</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># tar打包命令</span>\n打包：tar <span class=\"token parameter variable\">-cvf</span> 打包以后的文件名 要打包的文件名\n例子：tar <span class=\"token parameter variable\">-cvf</span> flask.tar flask/\n\n打包：tar <span class=\"token parameter variable\">-zcvf</span> 压缩以后的文件名 要压缩的文件名\n例子：tar <span class=\"token parameter variable\">-zcvf</span> flask.tar.gz flask/\n\n<span class=\"token comment\"># tar解压命令</span>\n解包：tar -xvf<span class=\"token punctuation\">(</span>-zxvf<span class=\"token punctuation\">)</span> 压缩包名\n指定位置解包：tar -xvf<span class=\"token punctuation\">(</span>-zxvf<span class=\"token punctuation\">)</span> 压缩包名 <span class=\"token parameter variable\">-C</span> 要解压的位置<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"十九、websocket\"><a href=\"#十九、websocket\" class=\"headerlink\" title=\"十九、websocket\"></a>十九、websocket</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 报错是需要可证的，直接取消验证许可</span>\n<span class=\"token keyword\">import</span> ssl\n<span class=\"token keyword\">from</span> websocket <span class=\"token keyword\">import</span> create_connection\n\nurl <span class=\"token operator\">=</span> <span class=\"token string\">'wss://127.0.0.1/...'</span>\nws <span class=\"token operator\">=</span> create_connection<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> sslopt<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'cert_reqs'</span><span class=\"token punctuation\">:</span> ssl<span class=\"token punctuation\">.</span>CERT_NONE<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 报错是没有'http、https、ws、wss'协议的，url的前缀不对</span>\nurl <span class=\"token operator\">=</span> <span class=\"token string\">'`wss`://localhost/...'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"二十、ip相关命令\"><a href=\"#二十、ip相关命令\" class=\"headerlink\" title=\"二十、ip相关命令\"></a>二十、ip相关命令</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ifconfig</span> eth0 <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token string\">'inet addr'</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'{ print $2}'</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> -F: <span class=\"token string\">'{print $2}'</span>  <span class=\"token comment\"># 获取eth0的ip</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"二十一、Linux一些命令说明\"><a href=\"#二十一、Linux一些命令说明\" class=\"headerlink\" title=\"二十一、Linux一些命令说明\"></a>二十一、Linux一些命令说明</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">~/  <span class=\"token comment\">#是指 [/home/使用的用户/] </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"二十二、systemctl-服务命令无法启动\"><a href=\"#二十二、systemctl-服务命令无法启动\" class=\"headerlink\" title=\"二十二、systemctl 服务命令无法启动\"></a>二十二、systemctl 服务命令无法启动</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 因环境变量无法启动</span>\n<span class=\"token comment\"># 场景：python使用的sqlite3与系统中的sqlite3版本不一致导致项目无法启动</span>\n<span class=\"token comment\"># 解决：</span>\n\n<span class=\"token comment\"># 创建文件：/etc/systemd/system/[服务].service.d/[任意名称].conf</span>\n<span class=\"token comment\"># **注**：服务名称必须与.service文件的相同</span>\n<span class=\"token comment\"># /etc/systemd/system/*.service.d/*.conf</span>\n<span class=\"token punctuation\">[</span>Server<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">Environment</span><span class=\"token operator\">=</span><span class=\"token string\">\"环境变量\"</span>\n<span class=\"token assign-left variable\">Environment</span><span class=\"token operator\">=</span><span class=\"token string\">\"环境变量\"</span>\n<span class=\"token punctuation\">..</span>.\n\n<span class=\"token comment\"># 重启服务</span>\nsystemctl daemon-reload<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"二十三、无法加载文件-WindowsPowerShell-profile-ps1，因为在此系统上禁止-运行脚本\"><a href=\"#二十三、无法加载文件-WindowsPowerShell-profile-ps1，因为在此系统上禁止-运行脚本\" class=\"headerlink\" title=\"二十三、无法加载文件 WindowsPowerShell\\profile.ps1，因为在此系统上禁止 运行脚本\"></a>二十三、无法加载文件 WindowsPowerShell\\profile.ps1，因为在此系统上禁止 运行脚本</h2><img src=\"/2023/11/05/bi-ji/%E7%AC%94%E8%AE%B0-23.png\" class=\"\">\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 解决方案：</span>\n<span class=\"token comment\"># 使用管理员身份打开，Power Shell（Windows终端）</span>\nSet-ExecutionPolicy RemoteSigned\n<span class=\"token comment\"># --如果弹出选项就输入： Y</span>\nGet-ExecutionPolicy\n<span class=\"token comment\"># --输出：RemoteSigned</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"二十四、命令行里面使用python导入报错\"><a href=\"#二十四、命令行里面使用python导入报错\" class=\"headerlink\" title=\"二十四、命令行里面使用python导入报错\"></a>二十四、命令行里面使用python导入报错</h2><img src=\"/2023/11/05/bi-ji/%E7%AC%94%E8%AE%B0-24.png\" class=\"\">\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 解决方法</span>\n<span class=\"token operator\">&gt;&gt;</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>conf <span class=\"token keyword\">import</span> settings  \n<span class=\"token operator\">&gt;&gt;</span><span class=\"token operator\">&gt;</span> settings<span class=\"token punctuation\">.</span>configure<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"二十五、Vue-打包命令\"><a href=\"#二十五、Vue-打包命令\" class=\"headerlink\" title=\"二十五、Vue 打包命令\"></a>二十五、Vue 打包命令</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> run build<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"二十六、Navicat-远程连接数据库\"><a href=\"#二十六、Navicat-远程连接数据库\" class=\"headerlink\" title=\"二十六、Navicat 远程连接数据库\"></a>二十六、Navicat 远程连接数据库</h2><pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\"># 查询被连接主机MySQL用户状态\nUSE mysql;\nSELECT host,user FROM user WHERE user=\"root\";\n&gt;&gt;&gt; host       user\n&gt;&gt;&gt; localhost  root\n# 修改状态\nUPDATE user SET host=\"%\" WHERE user=\"root\";\n# 这样，任意机器都可以使用Navicat连接该设备的数据库了<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"二十七、MySQL初始化\"><a href=\"#二十七、MySQL初始化\" class=\"headerlink\" title=\"二十七、MySQL初始化\"></a>二十七、MySQL初始化</h2><blockquote>\n<p>MySQL 报错MySQL.sock，不存在</p>\n<p>ERROR 2002 (HY000): Can’t connect to local MySQL server through socket ‘/var/run/mysqld/mysqld.sock’ (2)</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">service</span> mysqld stop          <span class=\"token comment\"># 停止MySQL服务</span>\n<span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> /var/lib/mysql/*      <span class=\"token comment\"># 删除 /var/lib/mysql/ 下的所有文件</span>\n<span class=\"token comment\"># 下面的操作看情况进行</span>\n<span class=\"token function\">rm</span> /var/lock/subsys/mysqld   <span class=\"token comment\"># 删除锁定文件</span>\n<span class=\"token function\">killall</span> mysqld               <span class=\"token comment\"># 杀死所有MySQL进程</span>\n<span class=\"token comment\"># 上面的操作看情况进行</span>\nmysqld <span class=\"token parameter variable\">--initialize</span>          <span class=\"token comment\"># 初始化MySQL</span>\n<span class=\"token function\">service</span> mysql start          <span class=\"token comment\"># 启动MySQL服务</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"免密启动\"><a href=\"#免密启动\" class=\"headerlink\" title=\"免密启动\"></a>免密启动</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> /etc/mysql/mysql.conf.d/mysqld.cnf\n<span class=\"token punctuation\">[</span>mysqld<span class=\"token punctuation\">]</span>\nskip-grant-table\n<span class=\"token comment\"># 退出</span>\n<span class=\"token function\">service</span> mysql restart<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"清空-authentication-string-字段\"><a href=\"#清空-authentication-string-字段\" class=\"headerlink\" title=\"清空 authentication_string 字段\"></a>清空 authentication_string 字段</h3><pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">mysql -uroot                 # 进入MySQL\nUSE mysql;                   # 使用mysql数据库\nUPDATE `user`\nSET authentication_string=\"\"\nWHERE user=\"root\";           # 修改root用户密码为空\nexit                         # 退出数据库\n# 关闭免密，并重启服务<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"修改密码\"><a href=\"#修改密码\" class=\"headerlink\" title=\"修改密码\"></a>修改密码</h3><pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">mysql -uroot\nSET password='自己的密码';\nFLUSH PRIVILEGES;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"二十八、Vue自适应\"><a href=\"#二十八、Vue自适应\" class=\"headerlink\" title=\"二十八、Vue自适应\"></a>二十八、Vue自适应</h2><pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;el-col\n        :lg=\"{ span: 3, offset: 0 }\"\n        :md=\"{ span: 8, offset: 0 }\"\n        :sm=\"{ span: 8, offset: 0 }\"\n        :xl=\"{ span: 6, offset: 0 }\" \n        :xs=\"{ span: 8, offset: 0 }\" \n&gt;\n&lt;/el-col&gt;\n&lt;!--\n栅栏一共24个\nlg: 大屏显示器，办公使用\nmd：中屏显示器，笔记本                   span 栅格占据的列数 offset 栅格左侧的间隔数\nsm：小屏显示器，平板\nxs：超小屏显示器，手机\nxl：2k屏幕。\n--&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"二十九、nvm-node管理器\"><a href=\"#二十九、nvm-node管理器\" class=\"headerlink\" title=\"二十九、nvm node管理器\"></a>二十九、nvm node管理器</h2><p><strong>注</strong>：nvm安装前删除计算机中的node.js</p>\n<h3 id=\"第一步：下载nvm\"><a href=\"#第一步：下载nvm\" class=\"headerlink\" title=\"第一步：下载nvm\"></a>第一步：下载nvm</h3><blockquote>\n<p>路径：<a href=\"https://github.com/coreybutler/nvm-windows/releases\">Releases · coreybutler/nvm-windows (github.com)</a></p>\n</blockquote>\n<img src=\"/2023/11/05/bi-ji/%E7%AC%94%E8%AE%B0-29.png\" class=\"\">\n\n<h3 id=\"第二步：安装\"><a href=\"#第二步：安装\" class=\"headerlink\" title=\"第二步：安装\"></a>第二步：安装</h3><blockquote>\n<p>安装步骤</p>\n<h4 id=\"第一步：同意协议、下一步；（没什么说的，就不加图了）\"><a href=\"#第一步：同意协议、下一步；（没什么说的，就不加图了）\" class=\"headerlink\" title=\"第一步：同意协议、下一步；（没什么说的，就不加图了）\"></a>第一步：同意协议、下一步；（没什么说的，就不加图了）</h4><h4 id=\"第二步：选择nvm本地安装目录；（最好不要有空格）\"><a href=\"#第二步：选择nvm本地安装目录；（最好不要有空格）\" class=\"headerlink\" title=\"第二步：选择nvm本地安装目录；（最好不要有空格）\"></a>第二步：选择nvm本地安装目录；（最好不要有空格）</h4><h4 id=\"第三步：设置nodejs快捷方式路径；（需要手动创建名为nodejs的快捷方式）\"><a href=\"#第三步：设置nodejs快捷方式路径；（需要手动创建名为nodejs的快捷方式）\" class=\"headerlink\" title=\"第三步：设置nodejs快捷方式路径；（需要手动创建名为nodejs的快捷方式）\"></a>第三步：设置nodejs快捷方式路径；（需要手动创建名为nodejs的快捷方式）</h4><h4 id=\"第四部：install-finish\"><a href=\"#第四部：install-finish\" class=\"headerlink\" title=\"第四部：install -> finish\"></a>第四部：install -&gt; finish</h4></blockquote>\n<h3 id=\"第三步：查看\"><a href=\"#第三步：查看\" class=\"headerlink\" title=\"第三步：查看\"></a>第三步：查看</h3><blockquote>\n<p>命令窗口键入：nvm （查看是否安装成功）</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>–help</td>\n<td>显示命令行帮助信息</td>\n</tr>\n<tr>\n<td>–version</td>\n<td>打印当前nvm版本号</td>\n</tr>\n<tr>\n<td>deactivate</td>\n<td>取消当前nvm命令行效果</td>\n</tr>\n<tr>\n<td>install [-s] <version></version></td>\n<td>从源下载一个版本为<version>的node.js</version></td>\n</tr>\n<tr>\n<td>uninstall <version></version></td>\n<td>卸载一个版本为<version>的node.js</version></td>\n</tr>\n<tr>\n<td>use <version></version></td>\n<td>使用<version>版本的node</version></td>\n</tr>\n<tr>\n<td>current</td>\n<td>查看当前使用的node版本</td>\n</tr>\n<tr>\n<td>ls</td>\n<td>查看所有<strong>本地</strong>可用的node版本</td>\n</tr>\n<tr>\n<td>ls <version></version></td>\n<td>查看指定版本</td>\n</tr>\n<tr>\n<td>ls-remote</td>\n<td>查看所有可用的远程版本（Linux与Mac）</td>\n</tr>\n<tr>\n<td>list available</td>\n<td>同上（windows）</td>\n</tr>\n</tbody></table>\n<h2 id=\"三十、搭梯子\"><a href=\"#三十、搭梯子\" class=\"headerlink\" title=\"三十、搭梯子\"></a>三十、搭梯子</h2><p>购买远程代理：<a href=\"https://x.syksdw.com/#/dashboard\">X寄场</a></p>\n<p>登录用户名：<a href=\"mailto:lyt_sy@sina.com\">lyt_sy@sina.com</a></p>\n<p>密    码：设置好的密码</p>\n<p>安装包路径：<a href=\"https://github.com/97668589/v2rayN/releases/tag/v6.9\">v2rayN</a></p>\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><ol>\n<li><p>双击运行；</p>\n<img src=\"/2023/11/05/bi-ji/%E7%AC%94%E8%AE%B0-30-1.png\" class=\"\">\n<ul>\n<li>如果没有将程序放到桌面，找不到程序可以双击右下角<img src=\"/2023/11/05/bi-ji/%E7%AC%94%E8%AE%B0-30-2.png\" class=\"\"></li>\n</ul>\n</li>\n<li><p>登录x-寄场：复制v2ray订阅地址；</p>\n<img src=\"/2023/11/05/bi-ji/%E7%AC%94%E8%AE%B0-30-3.png\" class=\"\">\n</li>\n<li><p>填写备注等信息，注意：勾选<strong>备用</strong>，然后保存；</p>\n<img src=\"/2023/11/05/bi-ji/%E7%AC%94%E8%AE%B0-30-4.png\" class=\"\">\n</li>\n<li><p>更新当前订阅；</p>\n<img src=\"/2023/11/05/bi-ji/%E7%AC%94%E8%AE%B0-30-5.png\" class=\"\">\n</li>\n<li><p>测试-启用节点（选择一个右键即可）。</p>\n<img src=\"/2023/11/05/bi-ji/%E7%AC%94%E8%AE%B0-30-6.png\" class=\"\"></li>\n</ol>\n<h2 id=\"三十一、PostgreSQL设置自增长\"><a href=\"#三十一、PostgreSQL设置自增长\" class=\"headerlink\" title=\"三十一、PostgreSQL设置自增长\"></a>三十一、PostgreSQL设置自增长</h2><pre class=\"line-numbers language-postgresql\" data-language=\"postgresql\"><code class=\"language-postgresql\">-- PostgreSQL 与 MySQL 不同，MySQL设置自增长直接用autoincrement设置，PostgreSQL需要先设置序列对象，并在创建字段时使用该序列对象作为缺省值，需要设置该字段不为空\n/* 设置序列对象 */\n[CREATE | ALTER | DROP] SEQUENCE IF NOT EXISTS &lt;序列对象名&gt;_seq\n\tINCREMENT 1          -- 序列每次自增多少\n\tSTART 1              -- 从1开始\n\tMINVALUE 1           -- 序列最小值\n\tMAXVALUE 2147483647  -- 序列最大值\n\tCACHE 1              -- 缓存序列（服务器重启之后缓存会丢失)\n\tNO CYCLE;            -- 是否循环（NO CYCLE | CYCLE: 序列增长到最大值之后是否从新开始）\n/* 创建表时引用 */\nCREATE TABLE &lt;表名&gt; (\n    \"id\" int4 NOT NULL DEFAULT NEXTVAL('&lt;序列对象名&gt;_seq::regclass'),\n    ......\n)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"三十二、VSCode-远程免密连接\"><a href=\"#三十二、VSCode-远程免密连接\" class=\"headerlink\" title=\"三十二、VSCode 远程免密连接\"></a>三十二、VSCode 远程免密连接</h2><p>VSCode没有保存密码功能，只能通过ssh秘钥的方式进行自动登录，下面是使用RSA秘钥方式自动登录开发服务器。</p>\n<blockquote>\n<p>默认每次连接，打开文件都得输入密码，当密码很复杂的时候这是一件很痛苦的是。</p>\n</blockquote>\n<h3 id=\"1-生成秘钥对\"><a href=\"#1-生成秘钥对\" class=\"headerlink\" title=\"1.生成秘钥对\"></a>1.生成秘钥对</h3><p>默认电脑上安装了git，没有的话就先安装；打开终端或者git-bash输入以下命令（邮箱使用自己的）。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ ssh-keygen <span class=\"token parameter variable\">-t</span> rsa <span class=\"token parameter variable\">-C</span> <span class=\"token string\">\"&lt;邮箱&gt;\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>然后一路回车直到完成；秘钥文件存放在：<code>C:\\User\\&lt;用户名&gt;\\.ssh</code></p>\n<h3 id=\"2-将公钥上传到服务器\"><a href=\"#2-将公钥上传到服务器\" class=\"headerlink\" title=\"2.将公钥上传到服务器\"></a>2.将公钥上传到服务器</h3><ol>\n<li>将id_rsa.pub重命名为authorized_keys；</li>\n<li>然后上传到服务器的/root/.ssh目录下（没有则新建.ssh）；</li>\n<li>修改VSCode的ssh_config文件。</li>\n</ol>\n<h3 id=\"3-配置VSCode远程ssh文件\"><a href=\"#3-配置VSCode远程ssh文件\" class=\"headerlink\" title=\"3.配置VSCode远程ssh文件\"></a>3.配置VSCode远程ssh文件</h3><p>以下是配置文件的栗子</p>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\">Host &lt;服务IP&gt;\n    HostName &lt;服务名称&gt;\n    User &lt;ssh用户名&gt;\n    Port &lt;ssh连接端口&gt;\n    PreferredAuthentications publickey\n    IdentityFile &lt;本地key文件&gt;\n<span class=\"token comment\"># 举例</span>\nHost 10.10.0.189\n    HostName 10.10.0.189\n    User root\n    Port 10022\n    PreferredAuthentications LGGawZI4EhMyjgvlcrTVYQMwZfe2c19cHzxABL3IUPA\n    IdentityFile \"C:\\Users\\22759\\.ssh\\id_rsa\"<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"4-常见问题解决方法\"><a href=\"#4-常见问题解决方法\" class=\"headerlink\" title=\"4.常见问题解决方法\"></a>4.常见问题解决方法</h3><ol>\n<li><p>文件权限不对</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">chmod</span> <span class=\"token number\">700</span> /root\n$ <span class=\"token function\">chmod</span> <span class=\"token number\">700</span> /root/.ssh\n$ <span class=\"token function\">chmod</span> <span class=\"token number\">644</span> /root/.ssh/authorized_keys<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>sshd配置问题</p>\n<p>编辑/etc/ssh/sshd_config文件；找到对应配置取消前面注释。</p>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\"><span class=\"token comment\"># 开启秘钥登录</span>\nPubkeyAuthentication yes\nAuthorizedKeysFile .ssh/authorized_keys .ssh/authorized_keys2\n<span class=\"token comment\"># 将下面的配置注释掉</span>\n<span class=\"token comment\"># RSAAuthentication no</span>\n<span class=\"token comment\"># 退出并执行重启sshd</span>\nservice sshd restart<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ol>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<h1 id=\"笔记\"><a href=\"#笔记\" class=\"headerlink\" title=\"笔记\"></a>笔记</h1><h2 id=\"一、Python的requirements-txt文件\"><a href=\"#一、Python的requirements-txt文件\" class=\"headerlink\" title=\"一、Python的requirements.txt文件\"></a>一、Python的requirements.txt文件</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 自动生成requirements.txt文件</span>\npip freeze <span class=\"token operator\">></span> requirements<span class=\"token punctuation\">.</span>txt\n<span class=\"token comment\"># 安装requirements.txt依赖</span>\npip install <span class=\"token operator\">-</span>r requirements<span class=\"token punctuation\">.</span>txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"二、vim编辑器中文乱码问题\"><a href=\"#二、vim编辑器中文乱码问题\" class=\"headerlink\" title=\"二、vim编辑器中文乱码问题\"></a>二、vim编辑器中文乱码问题</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 执行（打开vi编辑器新建.vimrc文件）</span>\n$: <span class=\"token function\">vi</span> ~/.vimrc\n---------------------------------\n<span class=\"token comment\"># 文件内容</span>\n<span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span>utf-8  <span class=\"token comment\"># 显示的编码</span>\n<span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">fileencoding</span><span class=\"token operator\">=</span>utf-8  <span class=\"token comment\"># 写入文件的编码</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"三、Nginx配置\"><a href=\"#三、Nginx配置\" class=\"headerlink\" title=\"三、Nginx配置\"></a>三、Nginx配置</h2><pre class=\"line-numbers language-nginx\" data-language=\"nginx\"><code class=\"language-nginx\"><span class=\"token comment\"># 配置静态文件</span>\n<span class=\"token directive\"><span class=\"token keyword\">server</span></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token directive\"><span class=\"token keyword\">location</span> ^~/static</span> <span class=\"token punctuation\">&#123;</span>  <span class=\"token comment\"># 静态文件路由</span>\n        <span class=\"token directive\"><span class=\"token keyword\">alias</span> /usr/project/static</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\"># 静态文件所在目录</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\"># 配置项目相关</span>\n<span class=\"token directive\"><span class=\"token keyword\">server</span></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token directive\"><span class=\"token keyword\">location</span> /api</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token directive\"><span class=\"token keyword\">proxy_pass</span> http://127.0.0.1:8000</span><span class=\"token punctuation\">;</span>\n        <span class=\"token directive\"><span class=\"token keyword\">proxy_set_header</span> Host <span class=\"token variable\">$host</span></span><span class=\"token punctuation\">;</span>\n        <span class=\"token directive\"><span class=\"token keyword\">proxy_set_header</span> X-Protocol https</span><span class=\"token punctuation\">;</span>\n        <span class=\"token directive\"><span class=\"token keyword\">proxy_set_header</span> X-Forwarded-For <span class=\"token variable\">$proxy_add_x_forwarded_for</span></span><span class=\"token punctuation\">;</span>\n        <span class=\"token directive\"><span class=\"token keyword\">proxy_set_header</span> X-USERTOKEN <span class=\"token variable\">$http_x_usertoken</span></span><span class=\"token punctuation\">;</span>\n        <span class=\"token directive\"><span class=\"token keyword\">proxy_connect_timeout</span> xxx</span><span class=\"token punctuation\">;</span>\n        <span class=\"token directive\"><span class=\"token keyword\">proxy_read_timeout</span> xxx</span><span class=\"token punctuation\">;</span>\n        <span class=\"token directive\"><span class=\"token keyword\">proxy_send_timeout</span> xxx</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"四、pymysql\"><a href=\"#四、pymysql\" class=\"headerlink\" title=\"四、pymysql\"></a>四、pymysql</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pymysql\ndb <span class=\"token operator\">=</span> pymysql<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>user<span class=\"token operator\">=</span><span class=\"token string\">'用户名'</span><span class=\"token punctuation\">,</span> password<span class=\"token operator\">=</span><span class=\"token string\">'密码'</span><span class=\"token punctuation\">,</span> host<span class=\"token operator\">=</span><span class=\"token string\">'主机ip'</span><span class=\"token punctuation\">,</span> database<span class=\"token operator\">=</span><span class=\"token string\">'要连接的库名'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 连接数据库</span>\nsql <span class=\"token operator\">=</span> <span class=\"token string\">'sql语句'</span>\n<span class=\"token triple-quoted-string string\">'''使用with，调用完自动close()'''</span>\n<span class=\"token keyword\">with</span> db<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 连接成功，返回True</span>\n    cur <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 创建游标</span>\n    cur<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 执行sql语句</span>\n    cur<span class=\"token punctuation\">.</span>description  <span class=\"token comment\"># 显示每列的详细信息</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># with结束以后自动关闭，返回False</span>\n<span class=\"token triple-quoted-string string\">'''使用try'''</span>\ncur <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 创建游标</span>\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    cur<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 执行sql语句</span>\n<span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 捕获异常</span>\n<span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n    cur<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 关掉游标</span>\n    db<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 断开连接</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"五、sqlite3\"><a href=\"#五、sqlite3\" class=\"headerlink\" title=\"五、sqlite3\"></a>五、sqlite3</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> sqlite3\ncon <span class=\"token operator\">=</span> sqlite3<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span><span class=\"token string\">'sqlite3文件所在位置'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 创建连接</span>\ncur <span class=\"token operator\">=</span> con<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 创建游标</span>\nsql <span class=\"token operator\">=</span> <span class=\"token string\">'sql语句'</span>\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    cur<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 执行sql语句</span>\n<span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 捕获异常</span>\n<span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n    cur<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 关掉游标</span>\n    con<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 断开连接</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token comment\">-- lua 操作sqlite3</span>\n<span class=\"token keyword\">local</span> sqlite3 <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sqlite3\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">local</span> env <span class=\"token operator\">=</span> sqlite3<span class=\"token punctuation\">.</span><span class=\"token function\">sqlite3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">local</span> sql <span class=\"token operator\">=</span> env<span class=\"token punctuation\">:</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"db文件路径\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">local</span> cursor<span class=\"token punctuation\">,</span> errorString <span class=\"token operator\">=</span> sql<span class=\"token punctuation\">:</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SQL语句\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">local</span> row <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>  <span class=\"token comment\">-- 定义空table获取cursor中的数据</span>\n<span class=\"token keyword\">while</span> <span class=\"token keyword\">true</span> <span class=\"token keyword\">do</span>\n    row <span class=\"token operator\">=</span> cursor<span class=\"token punctuation\">:</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> row <span class=\"token operator\">~=</span> <span class=\"token keyword\">nil</span> <span class=\"token keyword\">then</span>\n        <span class=\"token keyword\">break</span>\n   <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 其他操作</span>\n<span class=\"token comment\"># 开启表头：.header on</span>\n<span class=\"token comment\"># 列 对 齐：.mode column</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"六、scp远程拷贝\"><a href=\"#六、scp远程拷贝\" class=\"headerlink\" title=\"六、scp远程拷贝\"></a>六、scp远程拷贝</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">scp</span> 连接名@连接地址:文件位置 要放到的位置<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"七、find查找文件\"><a href=\"#七、find查找文件\" class=\"headerlink\" title=\"七、find查找文件\"></a>七、find查找文件</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">find</span> <span class=\"token parameter variable\">-name</span> <span class=\"token string\">'文件名'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"八、MySQL基本查询语句\"><a href=\"#八、MySQL基本查询语句\" class=\"headerlink\" title=\"八、MySQL基本查询语句\"></a>八、MySQL基本查询语句</h2><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> 表名 <span class=\"token keyword\">WHERE</span> 条件<span class=\"token punctuation\">;</span>  <span class=\"token comment\"># 查询</span>\n<span class=\"token keyword\">UPDATE</span> 表名 <span class=\"token keyword\">SET</span> 要修改的内容 <span class=\"token keyword\">WHERE</span> 条件<span class=\"token punctuation\">;</span>  <span class=\"token comment\"># 修改</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> 表名 <span class=\"token punctuation\">(</span>字段名<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span>字段对应内容<span class=\"token punctuation\">)</span>； <span class=\"token comment\"># 添加数据</span>\n<span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">FROM</span> 表名 <span class=\"token keyword\">WHERE</span> 条件<span class=\"token punctuation\">;</span>  <span class=\"token comment\"># 删除字段</span>\n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> &#123;表名&#125;  <span class=\"token comment\"># 删除表</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"九、es相关功能\"><a href=\"#九、es相关功能\" class=\"headerlink\" title=\"九、es相关功能\"></a>九、es相关功能</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> <span class=\"token string\">'localhost:9200/_cat/indices?v'</span>  <span class=\"token comment\"># 查看所有索引</span>\n<span class=\"token function\">curl</span> <span class=\"token string\">'localhost:9200/_cat/indices?v&amp;s=&#123;列名&#125;'</span>  <span class=\"token comment\"># 查看所有索引，根据某一列进行排序</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XPOST</span> <span class=\"token string\">'http://localhost:9200/&#123;索引名称&#125;/_unfreeze'</span>  <span class=\"token comment\"># 索引解冻</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token string\">'http://localhost:9200/_mapping?pretty'</span>  <span class=\"token comment\"># 查看所有type</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token string\">'http://localhost:9200/_cat/templates/?v'</span>  <span class=\"token comment\"># 查看所有模板</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token string\">'http://localhost:9200/&#123;索引名称&#125;/_search?pretty'</span>  <span class=\"token comment\"># 查看索引数据</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token string\">'http://localhost:9200/&#123;索引名称&#125;/_mapping?pretty'</span>  <span class=\"token comment\"># 查看索引结构</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token string\">'http://localhost:9200/&#123;索引名称&#125;/_mapping/field/&#123;字段名&#125;?pretty'</span>  <span class=\"token comment\"># 查看索引下字段的映射</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token string\">'http://localhost:9200/_index_template/&#123;索引模板名称&#125;'</span>  <span class=\"token comment\"># 查看索引模板名称</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token string\">'http://localhost:9200/_component_template/&#123;组件模板名称&#125;'</span>  <span class=\"token comment\"># 查看组件模板</span>\n<span class=\"token comment\"># es的cat命令</span>\n<span class=\"token assign-left variable\">EsIp</span><span class=\"token operator\">=</span><span class=\"token string\">\"http://localhost:9200/\"</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">$&#123;EsIp&#125;</span>_cat/master?help  <span class=\"token comment\"># help 查看帮助</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">$&#123;EsIp&#125;</span>_cat/master?v  <span class=\"token comment\"># verbose 显示列名，查看master节点</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">$&#123;EsIp&#125;</span>_cat/master?v<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">h</span><span class=\"token operator\">=</span>host,ip,node  <span class=\"token comment\"># Headers 只显示特定列</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">$&#123;EsIp&#125;</span>_cat/indices?v<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">h</span><span class=\"token operator\">=</span>index,docs.count,store.size<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">bytes</span><span class=\"token operator\">=</span>kb  <span class=\"token comment\"># Bytes 数字格式化展示</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">$&#123;EsIp&#125;</span>_cat/indices?v<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">h</span><span class=\"token operator\">=</span>index,docs.count,store.size<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">bytes</span><span class=\"token operator\">=</span>kb<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">format</span><span class=\"token operator\">=</span>json<span class=\"token operator\">&amp;</span>pretty  <span class=\"token comment\"># json格式输出</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">$&#123;EsIp&#125;</span>_cat/indices?v<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">h</span><span class=\"token operator\">=</span>index,docs.count,store.size<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">bytes</span><span class=\"token operator\">=</span>kb<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">format</span><span class=\"token operator\">=</span>yaml<span class=\"token operator\">&amp;</span>pretty  <span class=\"token comment\"># yaml格式输出</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">$&#123;EsIp&#125;</span>_cat/indices?v<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">h</span><span class=\"token operator\">=</span>index,docs.count,store.size<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">bytes</span><span class=\"token operator\">=</span>kb<span class=\"token operator\">&amp;</span>pretty<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">s</span><span class=\"token operator\">=</span>index,docs.count:desc  <span class=\"token comment\"># Sort排序，根据index升序，docs.count降序</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">$&#123;EsIp&#125;</span>_cat/health?v<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">h</span><span class=\"token operator\">=</span>cluster,status  <span class=\"token comment\"># 查看集群健康状态</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">$&#123;EsIp&#125;</span>_cat/nodes?v  <span class=\"token comment\"># 查看集群节点</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">$&#123;EsIp&#125;</span>_cat/nodes?v<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">h</span><span class=\"token operator\">=</span>ip,node.role,name,disk.avail  <span class=\"token comment\"># 磁盘剩余</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">$&#123;EsIp&#125;</span>_cat/allocation?v  <span class=\"token comment\"># 查看每个数据节点上的分片数（shards），以及每个数据节点磁盘剩余</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">$&#123;EsIp&#125;</span>_cat/pending_tasks?v  <span class=\"token comment\"># 查看被挂起的任务</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">$&#123;EsIp&#125;</span>_cat/plugins?v  <span class=\"token comment\"># 查看每个节点正在运行的插件</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">$&#123;EsIp&#125;</span>_cat/nodeattrs?v  <span class=\"token comment\"># 查看每个节点的自定义属性</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">$&#123;EsIp&#125;</span>_cat/recovery/.kibana?v<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">format</span><span class=\"token operator\">=</span>json<span class=\"token operator\">&amp;</span>pretty  <span class=\"token comment\"># 查看索引分片的恢复视图</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">$&#123;EsIp&#125;</span>_cat/fielddata?v<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">h</span><span class=\"token operator\">=</span>node,field,size  <span class=\"token comment\"># 查看每个数据节点上fielddate当前占用的堆栈内存</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">$&#123;EsIp&#125;</span>_cat/recovery/.kibana?v<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">format</span><span class=\"token operator\">=</span>json<span class=\"token operator\">&amp;</span>pretty  <span class=\"token comment\"># 对某一字段进行查看</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">$&#123;EsIp&#125;</span>_cat/repositories?v  <span class=\"token comment\"># 查看注册的快照仓库</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">$&#123;EsIp&#125;</span>_cat/snapshots/repo1?v  <span class=\"token comment\"># 查看快照仓库下的快照</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">$&#123;EsIp&#125;</span>_cat/thread_pool/bulk?v<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">format</span><span class=\"token operator\">=</span>json<span class=\"token operator\">&amp;</span>pretty  <span class=\"token comment\"># 查看每个节点线程池的统计信息</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">$&#123;EsIp&#125;</span>_cat/indices/.monitoring*?v<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">h</span><span class=\"token operator\">=</span>index,health  <span class=\"token comment\"># 查看索引</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">$&#123;EsIp&#125;</span>_cat/aliases?v<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">h</span><span class=\"token operator\">=</span>alias,index  <span class=\"token comment\"># 查看别名</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">$&#123;EsIp&#125;</span>_cat/templates?v<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">format</span><span class=\"token operator\">=</span>json<span class=\"token operator\">&amp;</span>pretty  <span class=\"token comment\"># 查看索引模板</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">$&#123;EsIp&#125;</span>_cat/count?v  <span class=\"token comment\"># 整个集群文档数</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">$&#123;EsIp&#125;</span>_cat/count/.monitoring*?v  <span class=\"token comment\"># 某一类索引文档数</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">$&#123;EsIp&#125;</span>_cat/shards?v<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">format</span><span class=\"token operator\">=</span>json<span class=\"token operator\">&amp;</span>pretty<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">s</span><span class=\"token operator\">=</span>index  <span class=\"token comment\"># 查看每个索引的分片</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-XGET</span> <span class=\"token variable\">$&#123;EsIp&#125;</span>_cat/segments/.kibana?v<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">format</span><span class=\"token operator\">=</span>json<span class=\"token operator\">&amp;</span>pretty  <span class=\"token comment\"># 查看每个索引的segment</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"十、字符串转换为字典\"><a href=\"#十、字符串转换为字典\" class=\"headerlink\" title=\"十、字符串转换为字典\"></a>十、字符串转换为字典</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">'&#123;\"name\": \"Justin Bieber\", \"age\": 44, \"gender\": \"男\"&#125;'</span>\n<span class=\"token keyword\">import</span> json\nuser_dict <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Justin Bieber\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"gender\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"男\"</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span>\n<span class=\"token keyword\">import</span> ast\nuser_dict <span class=\"token operator\">=</span> ast<span class=\"token punctuation\">.</span>lateral_eval<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>user_dict<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Justin Bieber\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"gender\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"男\"</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"十一、IP转换、判断是否合法\"><a href=\"#十一、IP转换、判断是否合法\" class=\"headerlink\" title=\"十一、IP转换、判断是否合法\"></a>十一、IP转换、判断是否合法</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 端口范围 [0, 65535]</span>\n<span class=\"token keyword\">import</span> socket<span class=\"token punctuation\">,</span> struct\nsocket<span class=\"token punctuation\">.</span>inet_ntoa<span class=\"token punctuation\">(</span>struct<span class=\"token punctuation\">.</span>pack<span class=\"token punctuation\">(</span><span class=\"token string\">\"!I\"</span><span class=\"token punctuation\">,</span> ip<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 整型转换为字符型 int -> str</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token comment\">--判断ip是否合法</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">JudgeIPString</span><span class=\"token punctuation\">(</span>ipStr<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token function\">type</span><span class=\"token punctuation\">(</span>ipStr<span class=\"token punctuation\">)</span> <span class=\"token operator\">~=</span> <span class=\"token string\">\"string\"</span> <span class=\"token keyword\">then</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">end</span>\n    \n    <span class=\"token comment\">--判断长度</span>\n    <span class=\"token keyword\">local</span> len <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>ipStr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> len <span class=\"token operator\">&lt;</span> <span class=\"token number\">7</span> <span class=\"token keyword\">or</span> len <span class=\"token operator\">></span> <span class=\"token number\">15</span> <span class=\"token keyword\">then</span> <span class=\"token comment\">--长度不对</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">end</span>\n \n    <span class=\"token comment\">--判断出现的非数字字符</span>\n    <span class=\"token keyword\">local</span> point <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>ipStr<span class=\"token punctuation\">,</span> <span class=\"token string\">\"%p\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">--字符\".\"出现的位置</span>\n    <span class=\"token keyword\">local</span> pointNum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">--字符\".\"出现的次数 正常ip有3个\".\"</span>\n    <span class=\"token keyword\">while</span> point <span class=\"token operator\">~=</span> <span class=\"token keyword\">nil</span> <span class=\"token keyword\">do</span>\n        <span class=\"token keyword\">if</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>ipStr<span class=\"token punctuation\">,</span> point<span class=\"token punctuation\">,</span> point<span class=\"token punctuation\">)</span> <span class=\"token operator\">~=</span> <span class=\"token string\">\".\"</span> <span class=\"token keyword\">then</span> <span class=\"token comment\">--得到非数字符号不是字符\".\"</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">end</span>\n        pointNum <span class=\"token operator\">=</span> pointNum <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        point <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>ipStr<span class=\"token punctuation\">,</span> <span class=\"token string\">\"%p\"</span><span class=\"token punctuation\">,</span> point <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> pointNum <span class=\"token operator\">></span> <span class=\"token number\">3</span> <span class=\"token keyword\">then</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">end</span>\n    <span class=\"token keyword\">end</span>\n    <span class=\"token keyword\">if</span> pointNum <span class=\"token operator\">~=</span> <span class=\"token number\">3</span> <span class=\"token keyword\">then</span> <span class=\"token comment\">--不是正确的ip格式</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">end</span>\n \n    <span class=\"token comment\">--判断数字对不对</span>\n    <span class=\"token keyword\">local</span> num <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> w <span class=\"token keyword\">in</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">gmatch</span><span class=\"token punctuation\">(</span>ipStr<span class=\"token punctuation\">,</span> <span class=\"token string\">\"%d+\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n        num<span class=\"token punctuation\">[</span><span class=\"token operator\">#</span>num <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> w<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">local</span> kk <span class=\"token operator\">=</span> <span class=\"token function\">tonumber</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> kk <span class=\"token operator\">==</span> <span class=\"token keyword\">nil</span> <span class=\"token keyword\">or</span> kk <span class=\"token operator\">></span> <span class=\"token number\">255</span> <span class=\"token keyword\">then</span> <span class=\"token comment\">--不是数字或超过ip正常取值范围了</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">end</span>\n    <span class=\"token keyword\">end</span>\n \n    <span class=\"token keyword\">if</span> <span class=\"token operator\">#</span>num <span class=\"token operator\">~=</span> <span class=\"token number\">4</span> <span class=\"token keyword\">then</span> <span class=\"token comment\">--不是4段数字</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">end</span>\n \n    <span class=\"token keyword\">return</span> ipStr<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">end</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"十二、Redis查询key\"><a href=\"#十二、Redis查询key\" class=\"headerlink\" title=\"十二、Redis查询key\"></a>十二、Redis查询key</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ redis-cli\n$ keys *  <span class=\"token comment\"># 查询所有的键</span>\n$ dbsize  <span class=\"token comment\"># 获取键的总数</span>\n$ exists key <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 查看键是否存在</span>\n$ del <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 删除键，可以删除一个或多个</span>\n$ <span class=\"token builtin class-name\">type</span> <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 查看键的类型</span>\n$ get <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 查看键中的值</span>\n$ <span class=\"token builtin class-name\">set</span> <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>value<span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 存放键值</span>\n$ mset <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>value<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>value<span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 批量存放键值</span>\n$ append <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>value<span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 追加内容</span>\n$ <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"十三、celery相关\"><a href=\"#十三、celery相关\" class=\"headerlink\" title=\"十三、celery相关\"></a>十三、celery相关</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token triple-quoted-string string\">'''启动相关'''</span>\n<span class=\"token comment\"># celery启动worker命令</span>\ncelery <span class=\"token operator\">-</span>A <span class=\"token punctuation\">&#123;</span>包含celery文件的文件夹名称<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">&#123;</span>celery启动文件<span class=\"token punctuation\">&#125;</span> worker <span class=\"token operator\">-</span>l info\ncelery app <span class=\"token punctuation\">&#123;</span>包含celery文件的文件夹名称<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">&#123;</span>celery启动文件<span class=\"token punctuation\">&#125;</span> worker <span class=\"token operator\">-</span>l info\n<span class=\"token comment\"># 上面两条命令作用相同</span>\n<span class=\"token comment\"># celery启动beat的命令</span>\ncelery beat <span class=\"token operator\">-</span>A <span class=\"token punctuation\">&#123;</span>包含celery文件的文件夹名称<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">&#123;</span>celery启动文件<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">-</span>l info  <span class=\"token comment\"># Linux</span>\ncelery beat app <span class=\"token punctuation\">&#123;</span>包含celery文件的文件夹名称<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">&#123;</span>celery启动文件<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">-</span>l info\ncelery <span class=\"token operator\">-</span>A <span class=\"token punctuation\">&#123;</span>包含celery文件的文件夹名称<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">&#123;</span>celery启动文件<span class=\"token punctuation\">&#125;</span> beat <span class=\"token operator\">-</span>l info <span class=\"token comment\"># Windows</span>\n<span class=\"token comment\"># 以上两条命令作用相同</span>\n<span class=\"token triple-quoted-string string\">'''停止相关'''</span>\n<span class=\"token comment\"># 杀死所有celery进程</span>\nps auxww <span class=\"token operator\">|</span> grep <span class=\"token string\">'celery'</span> <span class=\"token operator\">|</span> awk <span class=\"token string\">'&#123;print $2&#125;'</span> <span class=\"token operator\">|</span> xargs kill <span class=\"token operator\">-</span><span class=\"token number\">9</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"十四、Python操作\"><a href=\"#十四、Python操作\" class=\"headerlink\" title=\"十四、Python操作\"></a>十四、Python操作</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token triple-quoted-string string\">'''判断某键是否在字典中'''</span>\n<span class=\"token punctuation\">&#123;</span>字典变量<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">.</span>__contains__<span class=\"token punctuation\">(</span><span class=\"token string\">'&#123;键&#125;'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"十五、MongoDB查询语法（大多数不能使用符号的都可以）\"><a href=\"#十五、MongoDB查询语法（大多数不能使用符号的都可以）\" class=\"headerlink\" title=\"十五、MongoDB查询语法（大多数不能使用符号的都可以）\"></a>十五、MongoDB查询语法（大多数不能使用符号的都可以）</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$gt</span><span class=\"token builtin class-name\">:</span> 大于\n<span class=\"token variable\">$lt</span><span class=\"token builtin class-name\">:</span> 小于\n<span class=\"token variable\">$gte</span><span class=\"token builtin class-name\">:</span> 大于等于\n<span class=\"token variable\">$lte</span><span class=\"token builtin class-name\">:</span> 小于等于\n<span class=\"token variable\">$ne</span><span class=\"token builtin class-name\">:</span> 不等于\n<span class=\"token variable\">$mod</span><span class=\"token builtin class-name\">:</span> 取模运算\ndb.things.find<span class=\"token punctuation\">(</span><span class=\"token string\">\"this.a % 10 == 1\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> db.things.find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>a: <span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$mod</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span>, <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token variable\">$all</span> 和 <span class=\"token variable\">$in</span><span class=\"token builtin class-name\">:</span> 匹配条件内所有的值\n<span class=\"token punctuation\">&#123;</span>a: <span class=\"token punctuation\">[</span> <span class=\"token number\">1</span>, <span class=\"token number\">2</span>, <span class=\"token number\">3</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span>\n这个：<span class=\"token variable\"><span class=\"token variable\">`</span>db.things.find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>a: <span class=\"token punctuation\">&#123;</span>$all: <span class=\"token punctuation\">[</span> <span class=\"token number\">2</span>, <span class=\"token number\">3</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token variable\">`</span></span>可以匹配；\n这个：<span class=\"token variable\"><span class=\"token variable\">`</span>db.things.find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>a: <span class=\"token punctuation\">&#123;</span>$all: <span class=\"token punctuation\">[</span> <span class=\"token number\">2</span>, <span class=\"token number\">3</span>, <span class=\"token number\">4</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token variable\">`</span></span>无法匹配。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"十六、设备一分钟内允许返回的重启思路\"><a href=\"#十六、设备一分钟内允许返回的重启思路\" class=\"headerlink\" title=\"十六、设备一分钟内允许返回的重启思路\"></a>十六、设备一分钟内允许返回的重启思路</h2><blockquote>\n<h3 id=\"python实现：\"><a href=\"#python实现：\" class=\"headerlink\" title=\"python实现：\"></a>python实现：</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">></span><span class=\"token comment\"># 格式化获取现在时间(时：分)</span>\n<span class=\"token operator\">></span>now_time <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">\"%H:%M\"</span><span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">.</span>localtime<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">></span><span class=\"token comment\"># 分隔</span>\n<span class=\"token operator\">></span>now_time <span class=\"token operator\">=</span> now_time<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">></span><span class=\"token comment\"># 给`分`位数字加一</span>\n<span class=\"token operator\">></span>dis_time <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>now_time<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">></span><span class=\"token comment\"># 再将时间进行替换拼接</span>\n<span class=\"token operator\">></span>now_time <span class=\"token operator\">=</span> <span class=\"token string\">\":\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>dis_time <span class=\"token keyword\">if</span> now_time<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token keyword\">else</span> i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> now_time<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">></span><span class=\"token comment\"># 执行定时关机</span>\n<span class=\"token operator\">></span>os<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"shutdown -r </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>now_time<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"node-js实现：\"><a href=\"#node-js实现：\" class=\"headerlink\" title=\"node.js实现：\"></a>node.js实现：</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span><span class=\"token comment\">// 导入moment模块</span>\n<span class=\"token operator\">></span><span class=\"token keyword\">const</span> moment <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'moment'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">></span><span class=\"token keyword\">var</span> execSync <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"child_process\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>execSync<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">></span><span class=\"token comment\">// var now_time = moment().format('YYYY-MM-DD HH:mm:ss');</span>\n<span class=\"token operator\">></span><span class=\"token comment\">// 获取现在时间（时：分）</span>\n<span class=\"token operator\">></span><span class=\"token keyword\">var</span> now_time <span class=\"token operator\">=</span> <span class=\"token function\">moment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'HH:mm'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">></span><span class=\"token comment\">// 给`分`位数字加一</span>\n<span class=\"token operator\">></span><span class=\"token keyword\">var</span> dis_time <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>now_time<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">></span><span class=\"token comment\">// 转换成字符串</span>\n<span class=\"token operator\">></span><span class=\"token keyword\">var</span> dis_time <span class=\"token operator\">=</span> dis_time<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">></span><span class=\"token comment\">// 定义一个空数组</span>\n<span class=\"token operator\">></span><span class=\"token keyword\">var</span> new_time <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">></span><span class=\"token comment\">// 将需要的数（时、分）加入数组</span>\n<span class=\"token operator\">></span>new_time<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>now_time<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">></span>new_time<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>dis_time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">></span><span class=\"token comment\">// 将数组转换为字符串</span>\n<span class=\"token operator\">></span><span class=\"token keyword\">var</span> new_time <span class=\"token operator\">=</span> new_time<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">></span><span class=\"token function\">execSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"shutdown -r \"</span> <span class=\"token operator\">+</span> new_time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</blockquote>\n<h2 id=\"十七、node-js时间模块\"><a href=\"#十七、node-js时间模块\" class=\"headerlink\" title=\"十七、node.js时间模块\"></a>十七、node.js时间模块</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> moment <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'moment'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">var</span> now_time <span class=\"token operator\">=</span> <span class=\"token function\">moment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'YYYY-MM-DD HH:mm:ss'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"十八、tar命令\"><a href=\"#十八、tar命令\" class=\"headerlink\" title=\"十八、tar命令\"></a>十八、tar命令</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># tar打包命令</span>\n打包：tar <span class=\"token parameter variable\">-cvf</span> 打包以后的文件名 要打包的文件名\n例子：tar <span class=\"token parameter variable\">-cvf</span> flask.tar flask/\n\n打包：tar <span class=\"token parameter variable\">-zcvf</span> 压缩以后的文件名 要压缩的文件名\n例子：tar <span class=\"token parameter variable\">-zcvf</span> flask.tar.gz flask/\n\n<span class=\"token comment\"># tar解压命令</span>\n解包：tar -xvf<span class=\"token punctuation\">(</span>-zxvf<span class=\"token punctuation\">)</span> 压缩包名\n指定位置解包：tar -xvf<span class=\"token punctuation\">(</span>-zxvf<span class=\"token punctuation\">)</span> 压缩包名 <span class=\"token parameter variable\">-C</span> 要解压的位置<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"十九、websocket\"><a href=\"#十九、websocket\" class=\"headerlink\" title=\"十九、websocket\"></a>十九、websocket</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 报错是需要可证的，直接取消验证许可</span>\n<span class=\"token keyword\">import</span> ssl\n<span class=\"token keyword\">from</span> websocket <span class=\"token keyword\">import</span> create_connection\n\nurl <span class=\"token operator\">=</span> <span class=\"token string\">'wss://127.0.0.1/...'</span>\nws <span class=\"token operator\">=</span> create_connection<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> sslopt<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'cert_reqs'</span><span class=\"token punctuation\">:</span> ssl<span class=\"token punctuation\">.</span>CERT_NONE<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 报错是没有'http、https、ws、wss'协议的，url的前缀不对</span>\nurl <span class=\"token operator\">=</span> <span class=\"token string\">'`wss`://localhost/...'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"二十、ip相关命令\"><a href=\"#二十、ip相关命令\" class=\"headerlink\" title=\"二十、ip相关命令\"></a>二十、ip相关命令</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ifconfig</span> eth0 <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token string\">'inet addr'</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'&#123; print $2&#125;'</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> -F: <span class=\"token string\">'&#123;print $2&#125;'</span>  <span class=\"token comment\"># 获取eth0的ip</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"二十一、Linux一些命令说明\"><a href=\"#二十一、Linux一些命令说明\" class=\"headerlink\" title=\"二十一、Linux一些命令说明\"></a>二十一、Linux一些命令说明</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">~/  <span class=\"token comment\">#是指 [/home/使用的用户/] </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"二十二、systemctl-服务命令无法启动\"><a href=\"#二十二、systemctl-服务命令无法启动\" class=\"headerlink\" title=\"二十二、systemctl 服务命令无法启动\"></a>二十二、systemctl 服务命令无法启动</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 因环境变量无法启动</span>\n<span class=\"token comment\"># 场景：python使用的sqlite3与系统中的sqlite3版本不一致导致项目无法启动</span>\n<span class=\"token comment\"># 解决：</span>\n\n<span class=\"token comment\"># 创建文件：/etc/systemd/system/[服务].service.d/[任意名称].conf</span>\n<span class=\"token comment\"># **注**：服务名称必须与.service文件的相同</span>\n<span class=\"token comment\"># /etc/systemd/system/*.service.d/*.conf</span>\n<span class=\"token punctuation\">[</span>Server<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">Environment</span><span class=\"token operator\">=</span><span class=\"token string\">\"环境变量\"</span>\n<span class=\"token assign-left variable\">Environment</span><span class=\"token operator\">=</span><span class=\"token string\">\"环境变量\"</span>\n<span class=\"token punctuation\">..</span>.\n\n<span class=\"token comment\"># 重启服务</span>\nsystemctl daemon-reload<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"二十三、无法加载文件-WindowsPowerShell-profile-ps1，因为在此系统上禁止-运行脚本\"><a href=\"#二十三、无法加载文件-WindowsPowerShell-profile-ps1，因为在此系统上禁止-运行脚本\" class=\"headerlink\" title=\"二十三、无法加载文件 WindowsPowerShell\\profile.ps1，因为在此系统上禁止 运行脚本\"></a>二十三、无法加载文件 WindowsPowerShell\\profile.ps1，因为在此系统上禁止 运行脚本</h2><img src=\"/2023/11/05/bi-ji/%E7%AC%94%E8%AE%B0-23.png\" class>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 解决方案：</span>\n<span class=\"token comment\"># 使用管理员身份打开，Power Shell（Windows终端）</span>\nSet-ExecutionPolicy RemoteSigned\n<span class=\"token comment\"># --如果弹出选项就输入： Y</span>\nGet-ExecutionPolicy\n<span class=\"token comment\"># --输出：RemoteSigned</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"二十四、命令行里面使用python导入报错\"><a href=\"#二十四、命令行里面使用python导入报错\" class=\"headerlink\" title=\"二十四、命令行里面使用python导入报错\"></a>二十四、命令行里面使用python导入报错</h2><img src=\"/2023/11/05/bi-ji/%E7%AC%94%E8%AE%B0-24.png\" class>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 解决方法</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>conf <span class=\"token keyword\">import</span> settings  \n<span class=\"token operator\">>></span><span class=\"token operator\">></span> settings<span class=\"token punctuation\">.</span>configure<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"二十五、Vue-打包命令\"><a href=\"#二十五、Vue-打包命令\" class=\"headerlink\" title=\"二十五、Vue 打包命令\"></a>二十五、Vue 打包命令</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> run build<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"二十六、Navicat-远程连接数据库\"><a href=\"#二十六、Navicat-远程连接数据库\" class=\"headerlink\" title=\"二十六、Navicat 远程连接数据库\"></a>二十六、Navicat 远程连接数据库</h2><pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\"># 查询被连接主机MySQL用户状态\nUSE mysql;\nSELECT host,user FROM user WHERE user&#x3D;&quot;root&quot;;\n&gt;&gt;&gt; host       user\n&gt;&gt;&gt; localhost  root\n# 修改状态\nUPDATE user SET host&#x3D;&quot;%&quot; WHERE user&#x3D;&quot;root&quot;;\n# 这样，任意机器都可以使用Navicat连接该设备的数据库了<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"二十七、MySQL初始化\"><a href=\"#二十七、MySQL初始化\" class=\"headerlink\" title=\"二十七、MySQL初始化\"></a>二十七、MySQL初始化</h2><blockquote>\n<p>MySQL 报错MySQL.sock，不存在</p>\n<p>ERROR 2002 (HY000): Can’t connect to local MySQL server through socket ‘&#x2F;var&#x2F;run&#x2F;mysqld&#x2F;mysqld.sock’ (2)</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">service</span> mysqld stop          <span class=\"token comment\"># 停止MySQL服务</span>\n<span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> /var/lib/mysql/*      <span class=\"token comment\"># 删除 /var/lib/mysql/ 下的所有文件</span>\n<span class=\"token comment\"># 下面的操作看情况进行</span>\n<span class=\"token function\">rm</span> /var/lock/subsys/mysqld   <span class=\"token comment\"># 删除锁定文件</span>\n<span class=\"token function\">killall</span> mysqld               <span class=\"token comment\"># 杀死所有MySQL进程</span>\n<span class=\"token comment\"># 上面的操作看情况进行</span>\nmysqld <span class=\"token parameter variable\">--initialize</span>          <span class=\"token comment\"># 初始化MySQL</span>\n<span class=\"token function\">service</span> mysql start          <span class=\"token comment\"># 启动MySQL服务</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"免密启动\"><a href=\"#免密启动\" class=\"headerlink\" title=\"免密启动\"></a>免密启动</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> /etc/mysql/mysql.conf.d/mysqld.cnf\n<span class=\"token punctuation\">[</span>mysqld<span class=\"token punctuation\">]</span>\nskip-grant-table\n<span class=\"token comment\"># 退出</span>\n<span class=\"token function\">service</span> mysql restart<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"清空-authentication-string-字段\"><a href=\"#清空-authentication-string-字段\" class=\"headerlink\" title=\"清空 authentication_string 字段\"></a>清空 authentication_string 字段</h3><pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">mysql -uroot                 # 进入MySQL\nUSE mysql;                   # 使用mysql数据库\nUPDATE &#96;user&#96;\nSET authentication_string&#x3D;&quot;&quot;\nWHERE user&#x3D;&quot;root&quot;;           # 修改root用户密码为空\nexit                         # 退出数据库\n# 关闭免密，并重启服务<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"修改密码\"><a href=\"#修改密码\" class=\"headerlink\" title=\"修改密码\"></a>修改密码</h3><pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">mysql -uroot\nSET password&#x3D;&#39;自己的密码&#39;;\nFLUSH PRIVILEGES;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"二十八、Vue自适应\"><a href=\"#二十八、Vue自适应\" class=\"headerlink\" title=\"二十八、Vue自适应\"></a>二十八、Vue自适应</h2><pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;el-col\n        :lg&#x3D;&quot;&#123; span: 3, offset: 0 &#125;&quot;\n        :md&#x3D;&quot;&#123; span: 8, offset: 0 &#125;&quot;\n        :sm&#x3D;&quot;&#123; span: 8, offset: 0 &#125;&quot;\n        :xl&#x3D;&quot;&#123; span: 6, offset: 0 &#125;&quot; \n        :xs&#x3D;&quot;&#123; span: 8, offset: 0 &#125;&quot; \n&gt;\n&lt;&#x2F;el-col&gt;\n&lt;!--\n栅栏一共24个\nlg: 大屏显示器，办公使用\nmd：中屏显示器，笔记本                   span 栅格占据的列数 offset 栅格左侧的间隔数\nsm：小屏显示器，平板\nxs：超小屏显示器，手机\nxl：2k屏幕。\n--&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"二十九、nvm-node管理器\"><a href=\"#二十九、nvm-node管理器\" class=\"headerlink\" title=\"二十九、nvm node管理器\"></a>二十九、nvm node管理器</h2><p><strong>注</strong>：nvm安装前删除计算机中的node.js</p>\n<h3 id=\"第一步：下载nvm\"><a href=\"#第一步：下载nvm\" class=\"headerlink\" title=\"第一步：下载nvm\"></a>第一步：下载nvm</h3><blockquote>\n<p>路径：<a href=\"https://github.com/coreybutler/nvm-windows/releases\">Releases · coreybutler&#x2F;nvm-windows (github.com)</a></p>\n</blockquote>\n<img src=\"/2023/11/05/bi-ji/%E7%AC%94%E8%AE%B0-29.png\" class>\n\n<h3 id=\"第二步：安装\"><a href=\"#第二步：安装\" class=\"headerlink\" title=\"第二步：安装\"></a>第二步：安装</h3><blockquote>\n<p>安装步骤</p>\n<h4 id=\"第一步：同意协议、下一步；（没什么说的，就不加图了）\"><a href=\"#第一步：同意协议、下一步；（没什么说的，就不加图了）\" class=\"headerlink\" title=\"第一步：同意协议、下一步；（没什么说的，就不加图了）\"></a>第一步：同意协议、下一步；（没什么说的，就不加图了）</h4><h4 id=\"第二步：选择nvm本地安装目录；（最好不要有空格）\"><a href=\"#第二步：选择nvm本地安装目录；（最好不要有空格）\" class=\"headerlink\" title=\"第二步：选择nvm本地安装目录；（最好不要有空格）\"></a>第二步：选择nvm本地安装目录；（最好不要有空格）</h4><h4 id=\"第三步：设置nodejs快捷方式路径；（需要手动创建名为nodejs的快捷方式）\"><a href=\"#第三步：设置nodejs快捷方式路径；（需要手动创建名为nodejs的快捷方式）\" class=\"headerlink\" title=\"第三步：设置nodejs快捷方式路径；（需要手动创建名为nodejs的快捷方式）\"></a>第三步：设置nodejs快捷方式路径；（需要手动创建名为nodejs的快捷方式）</h4><h4 id=\"第四部：install-finish\"><a href=\"#第四部：install-finish\" class=\"headerlink\" title=\"第四部：install -&gt; finish\"></a>第四部：install -&gt; finish</h4></blockquote>\n<h3 id=\"第三步：查看\"><a href=\"#第三步：查看\" class=\"headerlink\" title=\"第三步：查看\"></a>第三步：查看</h3><blockquote>\n<p>命令窗口键入：nvm （查看是否安装成功）</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>–help</td>\n<td>显示命令行帮助信息</td>\n</tr>\n<tr>\n<td>–version</td>\n<td>打印当前nvm版本号</td>\n</tr>\n<tr>\n<td>deactivate</td>\n<td>取消当前nvm命令行效果</td>\n</tr>\n<tr>\n<td>install [-s] <version></version></td>\n<td>从源下载一个版本为<version>的node.js</version></td>\n</tr>\n<tr>\n<td>uninstall <version></version></td>\n<td>卸载一个版本为<version>的node.js</version></td>\n</tr>\n<tr>\n<td>use <version></version></td>\n<td>使用<version>版本的node</version></td>\n</tr>\n<tr>\n<td>current</td>\n<td>查看当前使用的node版本</td>\n</tr>\n<tr>\n<td>ls</td>\n<td>查看所有<strong>本地</strong>可用的node版本</td>\n</tr>\n<tr>\n<td>ls <version></version></td>\n<td>查看指定版本</td>\n</tr>\n<tr>\n<td>ls-remote</td>\n<td>查看所有可用的远程版本（Linux与Mac）</td>\n</tr>\n<tr>\n<td>list available</td>\n<td>同上（windows）</td>\n</tr>\n</tbody></table>\n<h2 id=\"三十、搭梯子\"><a href=\"#三十、搭梯子\" class=\"headerlink\" title=\"三十、搭梯子\"></a>三十、搭梯子</h2><p>购买远程代理：<a href=\"https://x.syksdw.com/#/dashboard\">X寄场</a></p>\n<p>登录用户名：<a href=\"mailto:&#x6c;&#121;&#116;&#95;&#x73;&#x79;&#x40;&#115;&#x69;&#110;&#97;&#x2e;&#99;&#111;&#109;\">&#x6c;&#121;&#116;&#95;&#x73;&#x79;&#x40;&#115;&#x69;&#110;&#97;&#x2e;&#99;&#111;&#109;</a></p>\n<p>密    码：设置好的密码</p>\n<p>安装包路径：<a href=\"https://github.com/97668589/v2rayN/releases/tag/v6.9\">v2rayN</a></p>\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><ol>\n<li><p>双击运行；</p>\n<img src=\"/2023/11/05/bi-ji/%E7%AC%94%E8%AE%B0-30-1.png\" class>\n<ul>\n<li>如果没有将程序放到桌面，找不到程序可以双击右下角<img src=\"/2023/11/05/bi-ji/%E7%AC%94%E8%AE%B0-30-2.png\" class></li>\n</ul>\n</li>\n<li><p>登录x-寄场：复制v2ray订阅地址；</p>\n<img src=\"/2023/11/05/bi-ji/%E7%AC%94%E8%AE%B0-30-3.png\" class>\n</li>\n<li><p>填写备注等信息，注意：勾选<strong>备用</strong>，然后保存；</p>\n<img src=\"/2023/11/05/bi-ji/%E7%AC%94%E8%AE%B0-30-4.png\" class>\n</li>\n<li><p>更新当前订阅；</p>\n<img src=\"/2023/11/05/bi-ji/%E7%AC%94%E8%AE%B0-30-5.png\" class>\n</li>\n<li><p>测试-启用节点（选择一个右键即可）。</p>\n<img src=\"/2023/11/05/bi-ji/%E7%AC%94%E8%AE%B0-30-6.png\" class></li>\n</ol>\n<h2 id=\"三十一、PostgreSQL设置自增长\"><a href=\"#三十一、PostgreSQL设置自增长\" class=\"headerlink\" title=\"三十一、PostgreSQL设置自增长\"></a>三十一、PostgreSQL设置自增长</h2><pre class=\"line-numbers language-postgresql\" data-language=\"postgresql\"><code class=\"language-postgresql\">-- PostgreSQL 与 MySQL 不同，MySQL设置自增长直接用autoincrement设置，PostgreSQL需要先设置序列对象，并在创建字段时使用该序列对象作为缺省值，需要设置该字段不为空\n&#x2F;* 设置序列对象 *&#x2F;\n[CREATE | ALTER | DROP] SEQUENCE IF NOT EXISTS &lt;序列对象名&gt;_seq\n\tINCREMENT 1          -- 序列每次自增多少\n\tSTART 1              -- 从1开始\n\tMINVALUE 1           -- 序列最小值\n\tMAXVALUE 2147483647  -- 序列最大值\n\tCACHE 1              -- 缓存序列（服务器重启之后缓存会丢失)\n\tNO CYCLE;            -- 是否循环（NO CYCLE | CYCLE: 序列增长到最大值之后是否从新开始）\n&#x2F;* 创建表时引用 *&#x2F;\nCREATE TABLE &lt;表名&gt; (\n    &quot;id&quot; int4 NOT NULL DEFAULT NEXTVAL(&#39;&lt;序列对象名&gt;_seq::regclass&#39;),\n    ......\n)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"三十二、VSCode-远程免密连接\"><a href=\"#三十二、VSCode-远程免密连接\" class=\"headerlink\" title=\"三十二、VSCode 远程免密连接\"></a>三十二、VSCode 远程免密连接</h2><p>VSCode没有保存密码功能，只能通过ssh秘钥的方式进行自动登录，下面是使用RSA秘钥方式自动登录开发服务器。</p>\n<blockquote>\n<p>默认每次连接，打开文件都得输入密码，当密码很复杂的时候这是一件很痛苦的是。</p>\n</blockquote>\n<h3 id=\"1-生成秘钥对\"><a href=\"#1-生成秘钥对\" class=\"headerlink\" title=\"1.生成秘钥对\"></a>1.生成秘钥对</h3><p>默认电脑上安装了git，没有的话就先安装；打开终端或者git-bash输入以下命令（邮箱使用自己的）。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ ssh-keygen <span class=\"token parameter variable\">-t</span> rsa <span class=\"token parameter variable\">-C</span> <span class=\"token string\">\"&lt;邮箱>\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>然后一路回车直到完成；秘钥文件存放在：<code>C:\\User\\&lt;用户名&gt;\\.ssh</code></p>\n<h3 id=\"2-将公钥上传到服务器\"><a href=\"#2-将公钥上传到服务器\" class=\"headerlink\" title=\"2.将公钥上传到服务器\"></a>2.将公钥上传到服务器</h3><ol>\n<li>将id_rsa.pub重命名为authorized_keys；</li>\n<li>然后上传到服务器的&#x2F;root&#x2F;.ssh目录下（没有则新建.ssh）；</li>\n<li>修改VSCode的ssh_config文件。</li>\n</ol>\n<h3 id=\"3-配置VSCode远程ssh文件\"><a href=\"#3-配置VSCode远程ssh文件\" class=\"headerlink\" title=\"3.配置VSCode远程ssh文件\"></a>3.配置VSCode远程ssh文件</h3><p>以下是配置文件的栗子</p>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\">Host &lt;服务IP>\n    HostName &lt;服务名称>\n    User &lt;ssh用户名>\n    Port &lt;ssh连接端口>\n    PreferredAuthentications publickey\n    IdentityFile &lt;本地key文件>\n<span class=\"token comment\"># 举例</span>\nHost 10.10.0.189\n    HostName 10.10.0.189\n    User root\n    Port 10022\n    PreferredAuthentications LGGawZI4EhMyjgvlcrTVYQMwZfe2c19cHzxABL3IUPA\n    IdentityFile \"C:\\Users\\22759\\.ssh\\id_rsa\"<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"4-常见问题解决方法\"><a href=\"#4-常见问题解决方法\" class=\"headerlink\" title=\"4.常见问题解决方法\"></a>4.常见问题解决方法</h3><ol>\n<li><p>文件权限不对</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">chmod</span> <span class=\"token number\">700</span> /root\n$ <span class=\"token function\">chmod</span> <span class=\"token number\">700</span> /root/.ssh\n$ <span class=\"token function\">chmod</span> <span class=\"token number\">644</span> /root/.ssh/authorized_keys<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>sshd配置问题</p>\n<p>编辑&#x2F;etc&#x2F;ssh&#x2F;sshd_config文件；找到对应配置取消前面注释。</p>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\"><span class=\"token comment\"># 开启秘钥登录</span>\nPubkeyAuthentication yes\nAuthorizedKeysFile .ssh/authorized_keys .ssh/authorized_keys2\n<span class=\"token comment\"># 将下面的配置注释掉</span>\n<span class=\"token comment\"># RSAAuthentication no</span>\n<span class=\"token comment\"># 退出并执行重启sshd</span>\nservice sshd restart<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ol>\n"},{"title":"FastAPI-1：介绍","date":"2023-11-06T07:19:30.000Z","author":"刘宇亭","_content":"# FastAPI-1：介绍\n\n## 前言\n\n为啥要学它呢，因为学 `Flask` 的时候发现有人更推荐它代替 `Flask` ，看了下介绍，感觉很强，而且也能拿来做平台，当然学起来！卷起来！\n\n## 为什么要是用FastAPI？\n\n- 日渐没落的是后端HTML渲染这种方式，比如 `Flask + Jinja2` \n- 前后端分离成为主流\n- 异步框架\n\n官方地址：https://fastapi.tiangolo.com/\n\n## FastAPI是什么？\n\n- `FastAPI` 是一个现代、快速（高性能）的web框架\n- 用于基于标准 `Python` 类型提示是用 `Python 3.6+` 构建API\n\n## FastAPI版本要求\n\nPython3.6+\n\n## FastAPI优点\n\n官方说明：\n\n- 类型检查、自动swagger UI、支持asyncio、强大的依赖注入系统；\n- 围绕着框架本身的插件生态，比如pydantic、SQLAlchemy，成熟；\n- 速度快：非常高的性能，与 `NodeJS` 和 `Go` 不相上下，多亏 `Starlette` 和 `Pydantic` ， FastAPI是最快的 `Python` 框架之一；\n- 编码快：将开发特性所需的速度提高大约 200% 到 300%；\n- 错误少：减少大约 40% 的人为（开发）错误；\n- 直观：强大的编辑器支持，支持多场景开发，调试所花的时间更少；\n- 简单：被设计为易于使用和学习，减少阅读文档的时间；\n- 代码少：最小化重复，更少的错误；\n- 健壮：代码可随时部署到生产环境，并自动提供交互文档；\n- 标准：基于（并完全兼容）api的开放标准：OpenAPI（以前称为Swagger）和JSON模式\n\n## Pydantic 在 FastAPI\n\n- FastAPI是完全建立在Pydantic的基础上的；\n- Pydantic是一个用来执行数据校验的Python库，具体教程可看：https://www.cnblogs.com/poloyy/tag/Pydantic/\n\n## Type Hints 在FastAPI\n\n- Type Hints 介绍：https://www.cnblogs.com/poloyy/p/15145380.html\n- typing 模块：https://www.cnblogs.com/poloyy/p/15150315.html\n\n### 使用FastAPI时用Type Hints声明参数可以获得\n\n- 编辑器支持智能提示，错误检查；\n- 类型检查，不对会报warning；\n\n### FastAPI还会用类型提示来做\n\n- **定义参数要求** ：声明对请求路径参数、查询参数、请求头、请求体、依赖等的要求；\n- **转换数据** ：将来自请求的数据转换为需要的类型；\n- **校验数据 **：对于每一个请求当数据校验失败时自动生成错误信息返回给客户端；\n- **使用 OpenAPI 记录API** ：然后用于自动生成交互式文档的用户界面，参数会显示对应的类型注释。","source":"_posts/Python/FastAPI/FastAPI-1：介绍.md","raw":"---\ntitle: FastAPI-1：介绍\ndate: 2023-11-06 15:19:30\nauthor: 刘宇亭\ncategory:\n    - Python\n    - FasAPI\ntag:\n    - Python\n    - FastAPI\n---\n# FastAPI-1：介绍\n\n## 前言\n\n为啥要学它呢，因为学 `Flask` 的时候发现有人更推荐它代替 `Flask` ，看了下介绍，感觉很强，而且也能拿来做平台，当然学起来！卷起来！\n\n## 为什么要是用FastAPI？\n\n- 日渐没落的是后端HTML渲染这种方式，比如 `Flask + Jinja2` \n- 前后端分离成为主流\n- 异步框架\n\n官方地址：https://fastapi.tiangolo.com/\n\n## FastAPI是什么？\n\n- `FastAPI` 是一个现代、快速（高性能）的web框架\n- 用于基于标准 `Python` 类型提示是用 `Python 3.6+` 构建API\n\n## FastAPI版本要求\n\nPython3.6+\n\n## FastAPI优点\n\n官方说明：\n\n- 类型检查、自动swagger UI、支持asyncio、强大的依赖注入系统；\n- 围绕着框架本身的插件生态，比如pydantic、SQLAlchemy，成熟；\n- 速度快：非常高的性能，与 `NodeJS` 和 `Go` 不相上下，多亏 `Starlette` 和 `Pydantic` ， FastAPI是最快的 `Python` 框架之一；\n- 编码快：将开发特性所需的速度提高大约 200% 到 300%；\n- 错误少：减少大约 40% 的人为（开发）错误；\n- 直观：强大的编辑器支持，支持多场景开发，调试所花的时间更少；\n- 简单：被设计为易于使用和学习，减少阅读文档的时间；\n- 代码少：最小化重复，更少的错误；\n- 健壮：代码可随时部署到生产环境，并自动提供交互文档；\n- 标准：基于（并完全兼容）api的开放标准：OpenAPI（以前称为Swagger）和JSON模式\n\n## Pydantic 在 FastAPI\n\n- FastAPI是完全建立在Pydantic的基础上的；\n- Pydantic是一个用来执行数据校验的Python库，具体教程可看：https://www.cnblogs.com/poloyy/tag/Pydantic/\n\n## Type Hints 在FastAPI\n\n- Type Hints 介绍：https://www.cnblogs.com/poloyy/p/15145380.html\n- typing 模块：https://www.cnblogs.com/poloyy/p/15150315.html\n\n### 使用FastAPI时用Type Hints声明参数可以获得\n\n- 编辑器支持智能提示，错误检查；\n- 类型检查，不对会报warning；\n\n### FastAPI还会用类型提示来做\n\n- **定义参数要求** ：声明对请求路径参数、查询参数、请求头、请求体、依赖等的要求；\n- **转换数据** ：将来自请求的数据转换为需要的类型；\n- **校验数据 **：对于每一个请求当数据校验失败时自动生成错误信息返回给客户端；\n- **使用 OpenAPI 记录API** ：然后用于自动生成交互式文档的用户界面，参数会显示对应的类型注释。","slug":"Python/FastAPI/FastAPI-1：介绍","published":1,"updated":"2023-11-06T08:07:16.967Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clooa9v4w0003gs6rd5dpd05v","content":"<h1 id=\"FastAPI-1：介绍\"><a href=\"#FastAPI-1：介绍\" class=\"headerlink\" title=\"FastAPI-1：介绍\"></a>FastAPI-1：介绍</h1><h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>为啥要学它呢，因为学 <code>Flask</code> 的时候发现有人更推荐它代替 <code>Flask</code> ，看了下介绍，感觉很强，而且也能拿来做平台，当然学起来！卷起来！</p>\n<h2 id=\"为什么要是用FastAPI？\"><a href=\"#为什么要是用FastAPI？\" class=\"headerlink\" title=\"为什么要是用FastAPI？\"></a>为什么要是用FastAPI？</h2><ul>\n<li>日渐没落的是后端HTML渲染这种方式，比如 <code>Flask + Jinja2</code> </li>\n<li>前后端分离成为主流</li>\n<li>异步框架</li>\n</ul>\n<p>官方地址：<a href=\"https://fastapi.tiangolo.com/\">https://fastapi.tiangolo.com/</a></p>\n<h2 id=\"FastAPI是什么？\"><a href=\"#FastAPI是什么？\" class=\"headerlink\" title=\"FastAPI是什么？\"></a>FastAPI是什么？</h2><ul>\n<li><code>FastAPI</code> 是一个现代、快速（高性能）的web框架</li>\n<li>用于基于标准 <code>Python</code> 类型提示是用 <code>Python 3.6+</code> 构建API</li>\n</ul>\n<h2 id=\"FastAPI版本要求\"><a href=\"#FastAPI版本要求\" class=\"headerlink\" title=\"FastAPI版本要求\"></a>FastAPI版本要求</h2><p>Python3.6+</p>\n<h2 id=\"FastAPI优点\"><a href=\"#FastAPI优点\" class=\"headerlink\" title=\"FastAPI优点\"></a>FastAPI优点</h2><p>官方说明：</p>\n<ul>\n<li>类型检查、自动swagger UI、支持asyncio、强大的依赖注入系统；</li>\n<li>围绕着框架本身的插件生态，比如pydantic、SQLAlchemy，成熟；</li>\n<li>速度快：非常高的性能，与 <code>NodeJS</code> 和 <code>Go</code> 不相上下，多亏 <code>Starlette</code> 和 <code>Pydantic</code> ， FastAPI是最快的 <code>Python</code> 框架之一；</li>\n<li>编码快：将开发特性所需的速度提高大约 200% 到 300%；</li>\n<li>错误少：减少大约 40% 的人为（开发）错误；</li>\n<li>直观：强大的编辑器支持，支持多场景开发，调试所花的时间更少；</li>\n<li>简单：被设计为易于使用和学习，减少阅读文档的时间；</li>\n<li>代码少：最小化重复，更少的错误；</li>\n<li>健壮：代码可随时部署到生产环境，并自动提供交互文档；</li>\n<li>标准：基于（并完全兼容）api的开放标准：OpenAPI（以前称为Swagger）和JSON模式</li>\n</ul>\n<h2 id=\"Pydantic-在-FastAPI\"><a href=\"#Pydantic-在-FastAPI\" class=\"headerlink\" title=\"Pydantic 在 FastAPI\"></a>Pydantic 在 FastAPI</h2><ul>\n<li>FastAPI是完全建立在Pydantic的基础上的；</li>\n<li>Pydantic是一个用来执行数据校验的Python库，具体教程可看：<a href=\"https://www.cnblogs.com/poloyy/tag/Pydantic/\">https://www.cnblogs.com/poloyy/tag/Pydantic/</a></li>\n</ul>\n<h2 id=\"Type-Hints-在FastAPI\"><a href=\"#Type-Hints-在FastAPI\" class=\"headerlink\" title=\"Type Hints 在FastAPI\"></a>Type Hints 在FastAPI</h2><ul>\n<li>Type Hints 介绍：<a href=\"https://www.cnblogs.com/poloyy/p/15145380.html\">https://www.cnblogs.com/poloyy/p/15145380.html</a></li>\n<li>typing 模块：<a href=\"https://www.cnblogs.com/poloyy/p/15150315.html\">https://www.cnblogs.com/poloyy/p/15150315.html</a></li>\n</ul>\n<h3 id=\"使用FastAPI时用Type-Hints声明参数可以获得\"><a href=\"#使用FastAPI时用Type-Hints声明参数可以获得\" class=\"headerlink\" title=\"使用FastAPI时用Type Hints声明参数可以获得\"></a>使用FastAPI时用Type Hints声明参数可以获得</h3><ul>\n<li>编辑器支持智能提示，错误检查；</li>\n<li>类型检查，不对会报warning；</li>\n</ul>\n<h3 id=\"FastAPI还会用类型提示来做\"><a href=\"#FastAPI还会用类型提示来做\" class=\"headerlink\" title=\"FastAPI还会用类型提示来做\"></a>FastAPI还会用类型提示来做</h3><ul>\n<li><strong>定义参数要求</strong> ：声明对请求路径参数、查询参数、请求头、请求体、依赖等的要求；</li>\n<li><strong>转换数据</strong> ：将来自请求的数据转换为需要的类型；</li>\n<li>**校验数据 **：对于每一个请求当数据校验失败时自动生成错误信息返回给客户端；</li>\n<li><strong>使用 OpenAPI 记录API</strong> ：然后用于自动生成交互式文档的用户界面，参数会显示对应的类型注释。</li>\n</ul>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<h1 id=\"FastAPI-1：介绍\"><a href=\"#FastAPI-1：介绍\" class=\"headerlink\" title=\"FastAPI-1：介绍\"></a>FastAPI-1：介绍</h1><h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>为啥要学它呢，因为学 <code>Flask</code> 的时候发现有人更推荐它代替 <code>Flask</code> ，看了下介绍，感觉很强，而且也能拿来做平台，当然学起来！卷起来！</p>\n<h2 id=\"为什么要是用FastAPI？\"><a href=\"#为什么要是用FastAPI？\" class=\"headerlink\" title=\"为什么要是用FastAPI？\"></a>为什么要是用FastAPI？</h2><ul>\n<li>日渐没落的是后端HTML渲染这种方式，比如 <code>Flask + Jinja2</code> </li>\n<li>前后端分离成为主流</li>\n<li>异步框架</li>\n</ul>\n<p>官方地址：<a href=\"https://fastapi.tiangolo.com/\">https://fastapi.tiangolo.com/</a></p>\n<h2 id=\"FastAPI是什么？\"><a href=\"#FastAPI是什么？\" class=\"headerlink\" title=\"FastAPI是什么？\"></a>FastAPI是什么？</h2><ul>\n<li><code>FastAPI</code> 是一个现代、快速（高性能）的web框架</li>\n<li>用于基于标准 <code>Python</code> 类型提示是用 <code>Python 3.6+</code> 构建API</li>\n</ul>\n<h2 id=\"FastAPI版本要求\"><a href=\"#FastAPI版本要求\" class=\"headerlink\" title=\"FastAPI版本要求\"></a>FastAPI版本要求</h2><p>Python3.6+</p>\n<h2 id=\"FastAPI优点\"><a href=\"#FastAPI优点\" class=\"headerlink\" title=\"FastAPI优点\"></a>FastAPI优点</h2><p>官方说明：</p>\n<ul>\n<li>类型检查、自动swagger UI、支持asyncio、强大的依赖注入系统；</li>\n<li>围绕着框架本身的插件生态，比如pydantic、SQLAlchemy，成熟；</li>\n<li>速度快：非常高的性能，与 <code>NodeJS</code> 和 <code>Go</code> 不相上下，多亏 <code>Starlette</code> 和 <code>Pydantic</code> ， FastAPI是最快的 <code>Python</code> 框架之一；</li>\n<li>编码快：将开发特性所需的速度提高大约 200% 到 300%；</li>\n<li>错误少：减少大约 40% 的人为（开发）错误；</li>\n<li>直观：强大的编辑器支持，支持多场景开发，调试所花的时间更少；</li>\n<li>简单：被设计为易于使用和学习，减少阅读文档的时间；</li>\n<li>代码少：最小化重复，更少的错误；</li>\n<li>健壮：代码可随时部署到生产环境，并自动提供交互文档；</li>\n<li>标准：基于（并完全兼容）api的开放标准：OpenAPI（以前称为Swagger）和JSON模式</li>\n</ul>\n<h2 id=\"Pydantic-在-FastAPI\"><a href=\"#Pydantic-在-FastAPI\" class=\"headerlink\" title=\"Pydantic 在 FastAPI\"></a>Pydantic 在 FastAPI</h2><ul>\n<li>FastAPI是完全建立在Pydantic的基础上的；</li>\n<li>Pydantic是一个用来执行数据校验的Python库，具体教程可看：<a href=\"https://www.cnblogs.com/poloyy/tag/Pydantic/\">https://www.cnblogs.com/poloyy/tag/Pydantic/</a></li>\n</ul>\n<h2 id=\"Type-Hints-在FastAPI\"><a href=\"#Type-Hints-在FastAPI\" class=\"headerlink\" title=\"Type Hints 在FastAPI\"></a>Type Hints 在FastAPI</h2><ul>\n<li>Type Hints 介绍：<a href=\"https://www.cnblogs.com/poloyy/p/15145380.html\">https://www.cnblogs.com/poloyy/p/15145380.html</a></li>\n<li>typing 模块：<a href=\"https://www.cnblogs.com/poloyy/p/15150315.html\">https://www.cnblogs.com/poloyy/p/15150315.html</a></li>\n</ul>\n<h3 id=\"使用FastAPI时用Type-Hints声明参数可以获得\"><a href=\"#使用FastAPI时用Type-Hints声明参数可以获得\" class=\"headerlink\" title=\"使用FastAPI时用Type Hints声明参数可以获得\"></a>使用FastAPI时用Type Hints声明参数可以获得</h3><ul>\n<li>编辑器支持智能提示，错误检查；</li>\n<li>类型检查，不对会报warning；</li>\n</ul>\n<h3 id=\"FastAPI还会用类型提示来做\"><a href=\"#FastAPI还会用类型提示来做\" class=\"headerlink\" title=\"FastAPI还会用类型提示来做\"></a>FastAPI还会用类型提示来做</h3><ul>\n<li><strong>定义参数要求</strong> ：声明对请求路径参数、查询参数、请求头、请求体、依赖等的要求；</li>\n<li><strong>转换数据</strong> ：将来自请求的数据转换为需要的类型；</li>\n<li>**校验数据 **：对于每一个请求当数据校验失败时自动生成错误信息返回给客户端；</li>\n<li><strong>使用 OpenAPI 记录API</strong> ：然后用于自动生成交互式文档的用户界面，参数会显示对应的类型注释。</li>\n</ul>\n"},{"title":"FastAPI-2：快速入门","date":"2023-11-06T08:12:24.000Z","author":"刘宇亭","_content":"# FastAPI-2：快速入门\n\n## 安装\n\n```shell\npip install fastapi\n# 将来需要将应用程序部署到生产环境可以安装 uvicorn 作为服务器\npip install uvicorn\n```\n\n## 最简单的代码栗子\n\n```python\nfrom fastapi import FastAPI\napp = FastAPI()\n@app.get('/')\nasync def first():\n    return {'message': \"Hello World\"}\n```\n\n## 运行 `uvicorn` 命令，启动服务器\n\n进入 `.py` 文件所属目录的命令行\n\n```python\nuvicorn main:app --reload\n```\n\n- **main** ：main.py文件（一个Python[模块]）；\n- **app** ：在 main.py 文件中通过 app = FastAPI() 创建的对象；\n- **--reload** ：让服务器在更新代码后自动重新启动，仅在开发时使用该选项。\n\n### 服务启动示例\n\n{% asset_img FastAPI-2：快速入门-1.png %}\n\n### 浏览器访问\n\n{% asset_img FastAPI-2：快速入门-2.png %}\n\n### 查看交互式文档\n\n{% asset_img FastAPI-2：快速入门-3.png %}\n\n### 查看可选的API文档\n\n{% asset_img FastAPI-2：快速入门-4.png %}\n\n## OpenAPI\n\nFastAPI使用API的OpenAPI标准为所有API生成schema\n\n### schema\n\n- 是对事务的一种定义或描述；\n- 它并非具体的实现代码，只是抽象描述；\n\n### API Schema\n\n- OpenAPI 是一种规定如何定义API Schema的规范；\n- 定义的OpenAPI Schema将包括API路径，以及它们肯能使用的参数等等；\n- 比如：这个API的作用是什么，需要必传哪些参数，请求方法是什么。\n\n### Data Schema\n\n- 指的是某些数据比如JSON的结构；\n- 它可以表示JSON的属性及其具有的数据类型；\n- 比如：某个属性的数据类型是什么，有没有默认值，是不是必填，作用是什么。\n\n### JSON Schema\n\n- OpenAPI会为API定义API Schema，一般会包括API发送和接收的数据的定义，比如：发送的数据的类型，是否必填；\n- 这些定义会以JSON数据格式展示出来，所以都会称为JSON Schema。\n\n### 查看 openapi.json\n\n原始的OpenAPI Schema，其实它只是一个自动生成的包含了所有API描述的JSON数据结构。\n\n{% asset_img FastAPI-2：快速入门-5.png %}\n\n## 拆分代码详情\n\n```python\n### 第一步\nfrom fastapi import FastAPI\n# 1、FastAPI 是一个为API提供了所有功能的Python类，必写就对了；\n# 2、FastAPI 是直接从 Starlette 继承的类，可以通过FastAPI使用所有的Starlette的功能。\n\n### 第二步\napp = FastAPI()\n# 1、app就是FastAPI类的一个实例对象啦；\n# 2、重点：app 将是创建所有API的主要交互对象；\n# 3、要点：uvicorn 执行命令时也会用到app。\n# 将app变量名换一下：\nmy_app = FastAPI()\n# 那么运行时也需要换\nuvicorn main:my_app --reload\n\n### 第三步\n# 创建一个路径操作\n# 路径\n# 1、指的是URL中从第一个 / 起的后半部分，即常说的path\n# 2、比如：https://example.com/items/foo 的路径就是 /items/foo\n# 3、路径也称为：端点路由\n# 操作：就是HTTP请求方式\n    # 1、POST\n    # 2、GET\n    # 3、PUT\n    # 4、DELETE\n    # 5、OPTIONS\n    # 6、HEAD\n    # 7、PATCH\n    # 8、TRACE\n# 在 HTTP 协议中，可以使用以上的其中一种（或多种）与每个路径进行通信\n# 遵守RESTFul风格的话\n# 通常使用：\n    # 1、POST：新建数据\n    # 2、GET：获取数据\n    # 3、PUT：更新数据\n    # 4、DELETE：删除数据\n# 定义一个路径操作装饰器\n@app.get('/')\n# 有两点含义\n    # 1、请求路径为'/'\n    # 2、使用 get 请求\n# 其它请求方法的装饰器\n    # 1、@app.post()\n    # 2、@app.put()\n    # 3、@app.delete()\n    # 4、@app.potions()\n    # 5、@app.head()\n    # 6、@app.patch()\n    # 7、@app.trace()\n    \n### 第四步\nasync def first():\n# 1、这就是一个普通的Python函数；\n# 2、每当FastAPI接收一个使用 GET 方法访问路径为 / 的请求时这个函数会被调用；\n# 3、在这个栗子中，它是一个 async 函数（异步处理函数）。\n# 可以不加 async\ndef first():\n\n### 第五步\nreturn {'message': 'Hello World'}\n# 1、可以返回一个 dict、list，也可是 str、int单个值；\n# 2、还可以返回 Pydantic 模型；\n# 3、还可以是其他会自动转换为JSON的对象和模型（包括ORM对象等）\n```\n\n\n\n## FastAPI入门总结\n\n编写一个最简单的FastAPI应用程序五部曲\n\n1. 导入FastAPI\n2. 创建一个app实例\n3. 编写一个路径操作装饰器，如 `@app.get('/')`\n4. 编写一个路径操作函数，如 `def first():`\n5. 运行开发服务器，如 `uvicron main:app --reload`\n\n","source":"_posts/Python/FastAPI/FastAPI-2：快速入门.md","raw":"---\ntitle: FastAPI-2：快速入门\ndate: 2023-11-06 16:12:24\nauthor: 刘宇亭\ncategory:\n    - Python\n    - FasAPI\ntag:\n    - Python\n    - FastAPI\n---\n# FastAPI-2：快速入门\n\n## 安装\n\n```shell\npip install fastapi\n# 将来需要将应用程序部署到生产环境可以安装 uvicorn 作为服务器\npip install uvicorn\n```\n\n## 最简单的代码栗子\n\n```python\nfrom fastapi import FastAPI\napp = FastAPI()\n@app.get('/')\nasync def first():\n    return {'message': \"Hello World\"}\n```\n\n## 运行 `uvicorn` 命令，启动服务器\n\n进入 `.py` 文件所属目录的命令行\n\n```python\nuvicorn main:app --reload\n```\n\n- **main** ：main.py文件（一个Python[模块]）；\n- **app** ：在 main.py 文件中通过 app = FastAPI() 创建的对象；\n- **--reload** ：让服务器在更新代码后自动重新启动，仅在开发时使用该选项。\n\n### 服务启动示例\n\n{% asset_img FastAPI-2：快速入门-1.png %}\n\n### 浏览器访问\n\n{% asset_img FastAPI-2：快速入门-2.png %}\n\n### 查看交互式文档\n\n{% asset_img FastAPI-2：快速入门-3.png %}\n\n### 查看可选的API文档\n\n{% asset_img FastAPI-2：快速入门-4.png %}\n\n## OpenAPI\n\nFastAPI使用API的OpenAPI标准为所有API生成schema\n\n### schema\n\n- 是对事务的一种定义或描述；\n- 它并非具体的实现代码，只是抽象描述；\n\n### API Schema\n\n- OpenAPI 是一种规定如何定义API Schema的规范；\n- 定义的OpenAPI Schema将包括API路径，以及它们肯能使用的参数等等；\n- 比如：这个API的作用是什么，需要必传哪些参数，请求方法是什么。\n\n### Data Schema\n\n- 指的是某些数据比如JSON的结构；\n- 它可以表示JSON的属性及其具有的数据类型；\n- 比如：某个属性的数据类型是什么，有没有默认值，是不是必填，作用是什么。\n\n### JSON Schema\n\n- OpenAPI会为API定义API Schema，一般会包括API发送和接收的数据的定义，比如：发送的数据的类型，是否必填；\n- 这些定义会以JSON数据格式展示出来，所以都会称为JSON Schema。\n\n### 查看 openapi.json\n\n原始的OpenAPI Schema，其实它只是一个自动生成的包含了所有API描述的JSON数据结构。\n\n{% asset_img FastAPI-2：快速入门-5.png %}\n\n## 拆分代码详情\n\n```python\n### 第一步\nfrom fastapi import FastAPI\n# 1、FastAPI 是一个为API提供了所有功能的Python类，必写就对了；\n# 2、FastAPI 是直接从 Starlette 继承的类，可以通过FastAPI使用所有的Starlette的功能。\n\n### 第二步\napp = FastAPI()\n# 1、app就是FastAPI类的一个实例对象啦；\n# 2、重点：app 将是创建所有API的主要交互对象；\n# 3、要点：uvicorn 执行命令时也会用到app。\n# 将app变量名换一下：\nmy_app = FastAPI()\n# 那么运行时也需要换\nuvicorn main:my_app --reload\n\n### 第三步\n# 创建一个路径操作\n# 路径\n# 1、指的是URL中从第一个 / 起的后半部分，即常说的path\n# 2、比如：https://example.com/items/foo 的路径就是 /items/foo\n# 3、路径也称为：端点路由\n# 操作：就是HTTP请求方式\n    # 1、POST\n    # 2、GET\n    # 3、PUT\n    # 4、DELETE\n    # 5、OPTIONS\n    # 6、HEAD\n    # 7、PATCH\n    # 8、TRACE\n# 在 HTTP 协议中，可以使用以上的其中一种（或多种）与每个路径进行通信\n# 遵守RESTFul风格的话\n# 通常使用：\n    # 1、POST：新建数据\n    # 2、GET：获取数据\n    # 3、PUT：更新数据\n    # 4、DELETE：删除数据\n# 定义一个路径操作装饰器\n@app.get('/')\n# 有两点含义\n    # 1、请求路径为'/'\n    # 2、使用 get 请求\n# 其它请求方法的装饰器\n    # 1、@app.post()\n    # 2、@app.put()\n    # 3、@app.delete()\n    # 4、@app.potions()\n    # 5、@app.head()\n    # 6、@app.patch()\n    # 7、@app.trace()\n    \n### 第四步\nasync def first():\n# 1、这就是一个普通的Python函数；\n# 2、每当FastAPI接收一个使用 GET 方法访问路径为 / 的请求时这个函数会被调用；\n# 3、在这个栗子中，它是一个 async 函数（异步处理函数）。\n# 可以不加 async\ndef first():\n\n### 第五步\nreturn {'message': 'Hello World'}\n# 1、可以返回一个 dict、list，也可是 str、int单个值；\n# 2、还可以返回 Pydantic 模型；\n# 3、还可以是其他会自动转换为JSON的对象和模型（包括ORM对象等）\n```\n\n\n\n## FastAPI入门总结\n\n编写一个最简单的FastAPI应用程序五部曲\n\n1. 导入FastAPI\n2. 创建一个app实例\n3. 编写一个路径操作装饰器，如 `@app.get('/')`\n4. 编写一个路径操作函数，如 `def first():`\n5. 运行开发服务器，如 `uvicron main:app --reload`\n\n","slug":"Python/FastAPI/FastAPI-2：快速入门","published":1,"updated":"2023-11-06T08:15:12.233Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clooa9v59000vgs6rb1el28iy","content":"<h1 id=\"FastAPI-2：快速入门\"><a href=\"#FastAPI-2：快速入门\" class=\"headerlink\" title=\"FastAPI-2：快速入门\"></a>FastAPI-2：快速入门</h1><h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pip <span class=\"token function\">install</span> fastapi\n<span class=\"token comment\"># 将来需要将应用程序部署到生产环境可以安装 uvicorn 作为服务器</span>\npip <span class=\"token function\">install</span> uvicorn<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"最简单的代码栗子\"><a href=\"#最简单的代码栗子\" class=\"headerlink\" title=\"最简单的代码栗子\"></a>最简单的代码栗子</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> fastapi <span class=\"token keyword\">import</span> FastAPI\napp <span class=\"token operator\">=</span> FastAPI<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"运行-uvicorn-命令，启动服务器\"><a href=\"#运行-uvicorn-命令，启动服务器\" class=\"headerlink\" title=\"运行 uvicorn 命令，启动服务器\"></a>运行 <code>uvicorn</code> 命令，启动服务器</h2><p>进入 <code>.py</code> 文件所属目录的命令行</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">uvicorn main<span class=\"token punctuation\">:</span>app <span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token builtin\">reload</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li><strong>main</strong> ：main.py文件（一个Python[模块]）；</li>\n<li><strong>app</strong> ：在 main.py 文件中通过 app = FastAPI() 创建的对象；</li>\n<li><strong>–reload</strong> ：让服务器在更新代码后自动重新启动，仅在开发时使用该选项。</li>\n</ul>\n<h3 id=\"服务启动示例\"><a href=\"#服务启动示例\" class=\"headerlink\" title=\"服务启动示例\"></a>服务启动示例</h3><img src=\"/2023/11/06/python/fastapi/fastapi-2-kuai-su-ru-men/FastAPI-2%EF%BC%9A%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-1.png\" class=\"\">\n\n<h3 id=\"浏览器访问\"><a href=\"#浏览器访问\" class=\"headerlink\" title=\"浏览器访问\"></a>浏览器访问</h3><img src=\"/2023/11/06/python/fastapi/fastapi-2-kuai-su-ru-men/FastAPI-2%EF%BC%9A%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-2.png\" class=\"\">\n\n<h3 id=\"查看交互式文档\"><a href=\"#查看交互式文档\" class=\"headerlink\" title=\"查看交互式文档\"></a>查看交互式文档</h3><img src=\"/2023/11/06/python/fastapi/fastapi-2-kuai-su-ru-men/FastAPI-2%EF%BC%9A%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-3.png\" class=\"\">\n\n<h3 id=\"查看可选的API文档\"><a href=\"#查看可选的API文档\" class=\"headerlink\" title=\"查看可选的API文档\"></a>查看可选的API文档</h3><img src=\"/2023/11/06/python/fastapi/fastapi-2-kuai-su-ru-men/FastAPI-2%EF%BC%9A%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-4.png\" class=\"\">\n\n<h2 id=\"OpenAPI\"><a href=\"#OpenAPI\" class=\"headerlink\" title=\"OpenAPI\"></a>OpenAPI</h2><p>FastAPI使用API的OpenAPI标准为所有API生成schema</p>\n<h3 id=\"schema\"><a href=\"#schema\" class=\"headerlink\" title=\"schema\"></a>schema</h3><ul>\n<li>是对事务的一种定义或描述；</li>\n<li>它并非具体的实现代码，只是抽象描述；</li>\n</ul>\n<h3 id=\"API-Schema\"><a href=\"#API-Schema\" class=\"headerlink\" title=\"API Schema\"></a>API Schema</h3><ul>\n<li>OpenAPI 是一种规定如何定义API Schema的规范；</li>\n<li>定义的OpenAPI Schema将包括API路径，以及它们肯能使用的参数等等；</li>\n<li>比如：这个API的作用是什么，需要必传哪些参数，请求方法是什么。</li>\n</ul>\n<h3 id=\"Data-Schema\"><a href=\"#Data-Schema\" class=\"headerlink\" title=\"Data Schema\"></a>Data Schema</h3><ul>\n<li>指的是某些数据比如JSON的结构；</li>\n<li>它可以表示JSON的属性及其具有的数据类型；</li>\n<li>比如：某个属性的数据类型是什么，有没有默认值，是不是必填，作用是什么。</li>\n</ul>\n<h3 id=\"JSON-Schema\"><a href=\"#JSON-Schema\" class=\"headerlink\" title=\"JSON Schema\"></a>JSON Schema</h3><ul>\n<li>OpenAPI会为API定义API Schema，一般会包括API发送和接收的数据的定义，比如：发送的数据的类型，是否必填；</li>\n<li>这些定义会以JSON数据格式展示出来，所以都会称为JSON Schema。</li>\n</ul>\n<h3 id=\"查看-openapi-json\"><a href=\"#查看-openapi-json\" class=\"headerlink\" title=\"查看 openapi.json\"></a>查看 openapi.json</h3><p>原始的OpenAPI Schema，其实它只是一个自动生成的包含了所有API描述的JSON数据结构。</p>\n<img src=\"/2023/11/06/python/fastapi/fastapi-2-kuai-su-ru-men/FastAPI-2%EF%BC%9A%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-5.png\" class=\"\">\n\n<h2 id=\"拆分代码详情\"><a href=\"#拆分代码详情\" class=\"headerlink\" title=\"拆分代码详情\"></a>拆分代码详情</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">### 第一步</span>\n<span class=\"token keyword\">from</span> fastapi <span class=\"token keyword\">import</span> FastAPI\n<span class=\"token comment\"># 1、FastAPI 是一个为API提供了所有功能的Python类，必写就对了；</span>\n<span class=\"token comment\"># 2、FastAPI 是直接从 Starlette 继承的类，可以通过FastAPI使用所有的Starlette的功能。</span>\n\n<span class=\"token comment\">### 第二步</span>\napp <span class=\"token operator\">=</span> FastAPI<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 1、app就是FastAPI类的一个实例对象啦；</span>\n<span class=\"token comment\"># 2、重点：app 将是创建所有API的主要交互对象；</span>\n<span class=\"token comment\"># 3、要点：uvicorn 执行命令时也会用到app。</span>\n<span class=\"token comment\"># 将app变量名换一下：</span>\nmy_app <span class=\"token operator\">=</span> FastAPI<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 那么运行时也需要换</span>\nuvicorn main<span class=\"token punctuation\">:</span>my_app <span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token builtin\">reload</span>\n\n<span class=\"token comment\">### 第三步</span>\n<span class=\"token comment\"># 创建一个路径操作</span>\n<span class=\"token comment\"># 路径</span>\n<span class=\"token comment\"># 1、指的是URL中从第一个 / 起的后半部分，即常说的path</span>\n<span class=\"token comment\"># 2、比如：https://example.com/items/foo 的路径就是 /items/foo</span>\n<span class=\"token comment\"># 3、路径也称为：端点路由</span>\n<span class=\"token comment\"># 操作：就是HTTP请求方式</span>\n    <span class=\"token comment\"># 1、POST</span>\n    <span class=\"token comment\"># 2、GET</span>\n    <span class=\"token comment\"># 3、PUT</span>\n    <span class=\"token comment\"># 4、DELETE</span>\n    <span class=\"token comment\"># 5、OPTIONS</span>\n    <span class=\"token comment\"># 6、HEAD</span>\n    <span class=\"token comment\"># 7、PATCH</span>\n    <span class=\"token comment\"># 8、TRACE</span>\n<span class=\"token comment\"># 在 HTTP 协议中，可以使用以上的其中一种（或多种）与每个路径进行通信</span>\n<span class=\"token comment\"># 遵守RESTFul风格的话</span>\n<span class=\"token comment\"># 通常使用：</span>\n    <span class=\"token comment\"># 1、POST：新建数据</span>\n    <span class=\"token comment\"># 2、GET：获取数据</span>\n    <span class=\"token comment\"># 3、PUT：更新数据</span>\n    <span class=\"token comment\"># 4、DELETE：删除数据</span>\n<span class=\"token comment\"># 定义一个路径操作装饰器</span>\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 有两点含义</span>\n    <span class=\"token comment\"># 1、请求路径为'/'</span>\n    <span class=\"token comment\"># 2、使用 get 请求</span>\n<span class=\"token comment\"># 其它请求方法的装饰器</span>\n    <span class=\"token comment\"># 1、@app.post()</span>\n    <span class=\"token comment\"># 2、@app.put()</span>\n    <span class=\"token comment\"># 3、@app.delete()</span>\n    <span class=\"token comment\"># 4、@app.potions()</span>\n    <span class=\"token comment\"># 5、@app.head()</span>\n    <span class=\"token comment\"># 6、@app.patch()</span>\n    <span class=\"token comment\"># 7、@app.trace()</span>\n    \n<span class=\"token comment\">### 第四步</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token comment\"># 1、这就是一个普通的Python函数；</span>\n<span class=\"token comment\"># 2、每当FastAPI接收一个使用 GET 方法访问路径为 / 的请求时这个函数会被调用；</span>\n<span class=\"token comment\"># 3、在这个栗子中，它是一个 async 函数（异步处理函数）。</span>\n<span class=\"token comment\"># 可以不加 async</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n<span class=\"token comment\">### 第五步</span>\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Hello World'</span><span class=\"token punctuation\">}</span>\n<span class=\"token comment\"># 1、可以返回一个 dict、list，也可是 str、int单个值；</span>\n<span class=\"token comment\"># 2、还可以返回 Pydantic 模型；</span>\n<span class=\"token comment\"># 3、还可以是其他会自动转换为JSON的对象和模型（包括ORM对象等）</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"FastAPI入门总结\"><a href=\"#FastAPI入门总结\" class=\"headerlink\" title=\"FastAPI入门总结\"></a>FastAPI入门总结</h2><p>编写一个最简单的FastAPI应用程序五部曲</p>\n<ol>\n<li>导入FastAPI</li>\n<li>创建一个app实例</li>\n<li>编写一个路径操作装饰器，如 <code>@app.get('/')</code></li>\n<li>编写一个路径操作函数，如 <code>def first():</code></li>\n<li>运行开发服务器，如 <code>uvicron main:app --reload</code></li>\n</ol>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<h1 id=\"FastAPI-2：快速入门\"><a href=\"#FastAPI-2：快速入门\" class=\"headerlink\" title=\"FastAPI-2：快速入门\"></a>FastAPI-2：快速入门</h1><h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pip <span class=\"token function\">install</span> fastapi\n<span class=\"token comment\"># 将来需要将应用程序部署到生产环境可以安装 uvicorn 作为服务器</span>\npip <span class=\"token function\">install</span> uvicorn<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"最简单的代码栗子\"><a href=\"#最简单的代码栗子\" class=\"headerlink\" title=\"最简单的代码栗子\"></a>最简单的代码栗子</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> fastapi <span class=\"token keyword\">import</span> FastAPI\napp <span class=\"token operator\">=</span> FastAPI<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"运行-uvicorn-命令，启动服务器\"><a href=\"#运行-uvicorn-命令，启动服务器\" class=\"headerlink\" title=\"运行 uvicorn 命令，启动服务器\"></a>运行 <code>uvicorn</code> 命令，启动服务器</h2><p>进入 <code>.py</code> 文件所属目录的命令行</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">uvicorn main<span class=\"token punctuation\">:</span>app <span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token builtin\">reload</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li><strong>main</strong> ：main.py文件（一个Python[模块]）；</li>\n<li><strong>app</strong> ：在 main.py 文件中通过 app &#x3D; FastAPI() 创建的对象；</li>\n<li><strong>–reload</strong> ：让服务器在更新代码后自动重新启动，仅在开发时使用该选项。</li>\n</ul>\n<h3 id=\"服务启动示例\"><a href=\"#服务启动示例\" class=\"headerlink\" title=\"服务启动示例\"></a>服务启动示例</h3><img src=\"/2023/11/06/python/fastapi/fastapi-2-kuai-su-ru-men/FastAPI-2%EF%BC%9A%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-1.png\" class>\n\n<h3 id=\"浏览器访问\"><a href=\"#浏览器访问\" class=\"headerlink\" title=\"浏览器访问\"></a>浏览器访问</h3><img src=\"/2023/11/06/python/fastapi/fastapi-2-kuai-su-ru-men/FastAPI-2%EF%BC%9A%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-2.png\" class>\n\n<h3 id=\"查看交互式文档\"><a href=\"#查看交互式文档\" class=\"headerlink\" title=\"查看交互式文档\"></a>查看交互式文档</h3><img src=\"/2023/11/06/python/fastapi/fastapi-2-kuai-su-ru-men/FastAPI-2%EF%BC%9A%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-3.png\" class>\n\n<h3 id=\"查看可选的API文档\"><a href=\"#查看可选的API文档\" class=\"headerlink\" title=\"查看可选的API文档\"></a>查看可选的API文档</h3><img src=\"/2023/11/06/python/fastapi/fastapi-2-kuai-su-ru-men/FastAPI-2%EF%BC%9A%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-4.png\" class>\n\n<h2 id=\"OpenAPI\"><a href=\"#OpenAPI\" class=\"headerlink\" title=\"OpenAPI\"></a>OpenAPI</h2><p>FastAPI使用API的OpenAPI标准为所有API生成schema</p>\n<h3 id=\"schema\"><a href=\"#schema\" class=\"headerlink\" title=\"schema\"></a>schema</h3><ul>\n<li>是对事务的一种定义或描述；</li>\n<li>它并非具体的实现代码，只是抽象描述；</li>\n</ul>\n<h3 id=\"API-Schema\"><a href=\"#API-Schema\" class=\"headerlink\" title=\"API Schema\"></a>API Schema</h3><ul>\n<li>OpenAPI 是一种规定如何定义API Schema的规范；</li>\n<li>定义的OpenAPI Schema将包括API路径，以及它们肯能使用的参数等等；</li>\n<li>比如：这个API的作用是什么，需要必传哪些参数，请求方法是什么。</li>\n</ul>\n<h3 id=\"Data-Schema\"><a href=\"#Data-Schema\" class=\"headerlink\" title=\"Data Schema\"></a>Data Schema</h3><ul>\n<li>指的是某些数据比如JSON的结构；</li>\n<li>它可以表示JSON的属性及其具有的数据类型；</li>\n<li>比如：某个属性的数据类型是什么，有没有默认值，是不是必填，作用是什么。</li>\n</ul>\n<h3 id=\"JSON-Schema\"><a href=\"#JSON-Schema\" class=\"headerlink\" title=\"JSON Schema\"></a>JSON Schema</h3><ul>\n<li>OpenAPI会为API定义API Schema，一般会包括API发送和接收的数据的定义，比如：发送的数据的类型，是否必填；</li>\n<li>这些定义会以JSON数据格式展示出来，所以都会称为JSON Schema。</li>\n</ul>\n<h3 id=\"查看-openapi-json\"><a href=\"#查看-openapi-json\" class=\"headerlink\" title=\"查看 openapi.json\"></a>查看 openapi.json</h3><p>原始的OpenAPI Schema，其实它只是一个自动生成的包含了所有API描述的JSON数据结构。</p>\n<img src=\"/2023/11/06/python/fastapi/fastapi-2-kuai-su-ru-men/FastAPI-2%EF%BC%9A%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-5.png\" class>\n\n<h2 id=\"拆分代码详情\"><a href=\"#拆分代码详情\" class=\"headerlink\" title=\"拆分代码详情\"></a>拆分代码详情</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">### 第一步</span>\n<span class=\"token keyword\">from</span> fastapi <span class=\"token keyword\">import</span> FastAPI\n<span class=\"token comment\"># 1、FastAPI 是一个为API提供了所有功能的Python类，必写就对了；</span>\n<span class=\"token comment\"># 2、FastAPI 是直接从 Starlette 继承的类，可以通过FastAPI使用所有的Starlette的功能。</span>\n\n<span class=\"token comment\">### 第二步</span>\napp <span class=\"token operator\">=</span> FastAPI<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 1、app就是FastAPI类的一个实例对象啦；</span>\n<span class=\"token comment\"># 2、重点：app 将是创建所有API的主要交互对象；</span>\n<span class=\"token comment\"># 3、要点：uvicorn 执行命令时也会用到app。</span>\n<span class=\"token comment\"># 将app变量名换一下：</span>\nmy_app <span class=\"token operator\">=</span> FastAPI<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 那么运行时也需要换</span>\nuvicorn main<span class=\"token punctuation\">:</span>my_app <span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token builtin\">reload</span>\n\n<span class=\"token comment\">### 第三步</span>\n<span class=\"token comment\"># 创建一个路径操作</span>\n<span class=\"token comment\"># 路径</span>\n<span class=\"token comment\"># 1、指的是URL中从第一个 / 起的后半部分，即常说的path</span>\n<span class=\"token comment\"># 2、比如：https://example.com/items/foo 的路径就是 /items/foo</span>\n<span class=\"token comment\"># 3、路径也称为：端点路由</span>\n<span class=\"token comment\"># 操作：就是HTTP请求方式</span>\n    <span class=\"token comment\"># 1、POST</span>\n    <span class=\"token comment\"># 2、GET</span>\n    <span class=\"token comment\"># 3、PUT</span>\n    <span class=\"token comment\"># 4、DELETE</span>\n    <span class=\"token comment\"># 5、OPTIONS</span>\n    <span class=\"token comment\"># 6、HEAD</span>\n    <span class=\"token comment\"># 7、PATCH</span>\n    <span class=\"token comment\"># 8、TRACE</span>\n<span class=\"token comment\"># 在 HTTP 协议中，可以使用以上的其中一种（或多种）与每个路径进行通信</span>\n<span class=\"token comment\"># 遵守RESTFul风格的话</span>\n<span class=\"token comment\"># 通常使用：</span>\n    <span class=\"token comment\"># 1、POST：新建数据</span>\n    <span class=\"token comment\"># 2、GET：获取数据</span>\n    <span class=\"token comment\"># 3、PUT：更新数据</span>\n    <span class=\"token comment\"># 4、DELETE：删除数据</span>\n<span class=\"token comment\"># 定义一个路径操作装饰器</span>\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 有两点含义</span>\n    <span class=\"token comment\"># 1、请求路径为'/'</span>\n    <span class=\"token comment\"># 2、使用 get 请求</span>\n<span class=\"token comment\"># 其它请求方法的装饰器</span>\n    <span class=\"token comment\"># 1、@app.post()</span>\n    <span class=\"token comment\"># 2、@app.put()</span>\n    <span class=\"token comment\"># 3、@app.delete()</span>\n    <span class=\"token comment\"># 4、@app.potions()</span>\n    <span class=\"token comment\"># 5、@app.head()</span>\n    <span class=\"token comment\"># 6、@app.patch()</span>\n    <span class=\"token comment\"># 7、@app.trace()</span>\n    \n<span class=\"token comment\">### 第四步</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token comment\"># 1、这就是一个普通的Python函数；</span>\n<span class=\"token comment\"># 2、每当FastAPI接收一个使用 GET 方法访问路径为 / 的请求时这个函数会被调用；</span>\n<span class=\"token comment\"># 3、在这个栗子中，它是一个 async 函数（异步处理函数）。</span>\n<span class=\"token comment\"># 可以不加 async</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n<span class=\"token comment\">### 第五步</span>\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Hello World'</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\"># 1、可以返回一个 dict、list，也可是 str、int单个值；</span>\n<span class=\"token comment\"># 2、还可以返回 Pydantic 模型；</span>\n<span class=\"token comment\"># 3、还可以是其他会自动转换为JSON的对象和模型（包括ORM对象等）</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"FastAPI入门总结\"><a href=\"#FastAPI入门总结\" class=\"headerlink\" title=\"FastAPI入门总结\"></a>FastAPI入门总结</h2><p>编写一个最简单的FastAPI应用程序五部曲</p>\n<ol>\n<li>导入FastAPI</li>\n<li>创建一个app实例</li>\n<li>编写一个路径操作装饰器，如 <code>@app.get(&#39;/&#39;)</code></li>\n<li>编写一个路径操作函数，如 <code>def first():</code></li>\n<li>运行开发服务器，如 <code>uvicron main:app --reload</code></li>\n</ol>\n"},{"title":"FastAPI-3：uvicorn.run()","date":"2023-11-07T10:53:27.000Z","_content":"# FastAPI-3：uvicorn.run()\n\n## Uvicorn\n\n- 基于 `uvloop` 和 `httptools` 构建的非常快速的 `ASGI` 服务器；\n- 它不是一个 `Web` 框架，而是一个服务器；\n- 例如，他不是一个提供路径路由的框架，这是 `FastAPI` 框架提供的东西；\n- 它是 `Starlette` 和 `FastAPI` 的推荐使用的服务器。\n\n### 总结\n\n`uvicorn` 是运行 `FastAPI` 应用程序的主要 `Web` 服务器，`uvicorn` 和 `Gunicorn` 结合使用，拥有一个异步多进程服务器。\n\n## 什么是ASGI、WSGI\n\nhttps://www.cnblogs.com/poloyy/15291403.html\n\n## 最简单的 FastAPI代码\n\n```python\nfrom fastapi import FastAPI\napp = FastAPI()\n@app.get('/')\nasync def first():\n    return {'message': 'Hello World'}\n```\n\n## 启动 uvicorn \n\n进到 `.py` 文件所处目录下的命令运行\n\n```python\nuvicorn main:app --reload\n```\n\n![1](../../static/Python/FastAPI/FastAPI-2：快速入门-1.png)\n\n能不能不用命令行方式运行呢，否则太不方便了？ --可以！\n\n### 使用 `uvicorn.run()`\n\n```python\nfrom fastapi import FastAPI\napp = FastAPI()\n@app.get('/')\nasync def first():\n    return {'message': 'Hello World'}\nif __name__ == '__main__':\n    uvicorn.run(app='main:app', host='0.0.0.0', post=8010, reload=True, debug=True)\n# 这样就不用敲命令行啦；\n# uvicorn 有什么命令行参数，run()方法就有什么参数。\n```\n\n### uvicorn常用参数\n\n| 参数        | 作用                                   |\n| ----------- | -------------------------------------- |\n| app         | 运行的 .py 文件:FastAPI实例对象        |\n| host        | 访问url，默认 127.0.0.1                |\n| port        | 访问端口，默认8080                     |\n| reload      | 热更新，有内容修改自动重启服务器       |\n| debug       | 同 reload                              |\n| reload_dirs | 设置需要 reload 的目录，List[str] 类型 |\n| log_level   | 设置日志级别，默认 info                |\n\n","source":"_posts/Python/FastAPI/FastAPI-3：uvicorn.run().md","raw":"---\ntitle: FastAPI-3：uvicorn.run()\ndate: 2023-11-07 18:53:27\n---\n# FastAPI-3：uvicorn.run()\n\n## Uvicorn\n\n- 基于 `uvloop` 和 `httptools` 构建的非常快速的 `ASGI` 服务器；\n- 它不是一个 `Web` 框架，而是一个服务器；\n- 例如，他不是一个提供路径路由的框架，这是 `FastAPI` 框架提供的东西；\n- 它是 `Starlette` 和 `FastAPI` 的推荐使用的服务器。\n\n### 总结\n\n`uvicorn` 是运行 `FastAPI` 应用程序的主要 `Web` 服务器，`uvicorn` 和 `Gunicorn` 结合使用，拥有一个异步多进程服务器。\n\n## 什么是ASGI、WSGI\n\nhttps://www.cnblogs.com/poloyy/15291403.html\n\n## 最简单的 FastAPI代码\n\n```python\nfrom fastapi import FastAPI\napp = FastAPI()\n@app.get('/')\nasync def first():\n    return {'message': 'Hello World'}\n```\n\n## 启动 uvicorn \n\n进到 `.py` 文件所处目录下的命令运行\n\n```python\nuvicorn main:app --reload\n```\n\n![1](../../static/Python/FastAPI/FastAPI-2：快速入门-1.png)\n\n能不能不用命令行方式运行呢，否则太不方便了？ --可以！\n\n### 使用 `uvicorn.run()`\n\n```python\nfrom fastapi import FastAPI\napp = FastAPI()\n@app.get('/')\nasync def first():\n    return {'message': 'Hello World'}\nif __name__ == '__main__':\n    uvicorn.run(app='main:app', host='0.0.0.0', post=8010, reload=True, debug=True)\n# 这样就不用敲命令行啦；\n# uvicorn 有什么命令行参数，run()方法就有什么参数。\n```\n\n### uvicorn常用参数\n\n| 参数        | 作用                                   |\n| ----------- | -------------------------------------- |\n| app         | 运行的 .py 文件:FastAPI实例对象        |\n| host        | 访问url，默认 127.0.0.1                |\n| port        | 访问端口，默认8080                     |\n| reload      | 热更新，有内容修改自动重启服务器       |\n| debug       | 同 reload                              |\n| reload_dirs | 设置需要 reload 的目录，List[str] 类型 |\n| log_level   | 设置日志级别，默认 info                |\n\n","slug":"Python/FastAPI/FastAPI-3：uvicorn.run()","published":1,"updated":"2023-11-07T10:54:50.456Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clooa9v5a000wgs6reent7gp3","content":"<h1 id=\"FastAPI-3：uvicorn-run\"><a href=\"#FastAPI-3：uvicorn-run\" class=\"headerlink\" title=\"FastAPI-3：uvicorn.run()\"></a>FastAPI-3：uvicorn.run()</h1><h2 id=\"Uvicorn\"><a href=\"#Uvicorn\" class=\"headerlink\" title=\"Uvicorn\"></a>Uvicorn</h2><ul>\n<li>基于 <code>uvloop</code> 和 <code>httptools</code> 构建的非常快速的 <code>ASGI</code> 服务器；</li>\n<li>它不是一个 <code>Web</code> 框架，而是一个服务器；</li>\n<li>例如，他不是一个提供路径路由的框架，这是 <code>FastAPI</code> 框架提供的东西；</li>\n<li>它是 <code>Starlette</code> 和 <code>FastAPI</code> 的推荐使用的服务器。</li>\n</ul>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p><code>uvicorn</code> 是运行 <code>FastAPI</code> 应用程序的主要 <code>Web</code> 服务器，<code>uvicorn</code> 和 <code>Gunicorn</code> 结合使用，拥有一个异步多进程服务器。</p>\n<h2 id=\"什么是ASGI、WSGI\"><a href=\"#什么是ASGI、WSGI\" class=\"headerlink\" title=\"什么是ASGI、WSGI\"></a>什么是ASGI、WSGI</h2><p><a href=\"https://www.cnblogs.com/poloyy/15291403.html\">https://www.cnblogs.com/poloyy/15291403.html</a></p>\n<h2 id=\"最简单的-FastAPI代码\"><a href=\"#最简单的-FastAPI代码\" class=\"headerlink\" title=\"最简单的 FastAPI代码\"></a>最简单的 FastAPI代码</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> fastapi <span class=\"token keyword\">import</span> FastAPI\napp <span class=\"token operator\">=</span> FastAPI<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Hello World'</span><span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"启动-uvicorn\"><a href=\"#启动-uvicorn\" class=\"headerlink\" title=\"启动 uvicorn\"></a>启动 uvicorn</h2><p>进到 <code>.py</code> 文件所处目录下的命令运行</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">uvicorn main<span class=\"token punctuation\">:</span>app <span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token builtin\">reload</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/../../static/Python/FastAPI/FastAPI-2%EF%BC%9A%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-1.png\" alt=\"1\"></p>\n<p>能不能不用命令行方式运行呢，否则太不方便了？ –可以！</p>\n<h3 id=\"使用-uvicorn-run\"><a href=\"#使用-uvicorn-run\" class=\"headerlink\" title=\"使用 uvicorn.run()\"></a>使用 <code>uvicorn.run()</code></h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> fastapi <span class=\"token keyword\">import</span> FastAPI\napp <span class=\"token operator\">=</span> FastAPI<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Hello World'</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    uvicorn<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>app<span class=\"token operator\">=</span><span class=\"token string\">'main:app'</span><span class=\"token punctuation\">,</span> host<span class=\"token operator\">=</span><span class=\"token string\">'0.0.0.0'</span><span class=\"token punctuation\">,</span> post<span class=\"token operator\">=</span><span class=\"token number\">8010</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">reload</span><span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> debug<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 这样就不用敲命令行啦；</span>\n<span class=\"token comment\"># uvicorn 有什么命令行参数，run()方法就有什么参数。</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"uvicorn常用参数\"><a href=\"#uvicorn常用参数\" class=\"headerlink\" title=\"uvicorn常用参数\"></a>uvicorn常用参数</h3><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>app</td>\n<td>运行的 .py 文件:FastAPI实例对象</td>\n</tr>\n<tr>\n<td>host</td>\n<td>访问url，默认 127.0.0.1</td>\n</tr>\n<tr>\n<td>port</td>\n<td>访问端口，默认8080</td>\n</tr>\n<tr>\n<td>reload</td>\n<td>热更新，有内容修改自动重启服务器</td>\n</tr>\n<tr>\n<td>debug</td>\n<td>同 reload</td>\n</tr>\n<tr>\n<td>reload_dirs</td>\n<td>设置需要 reload 的目录，List[str] 类型</td>\n</tr>\n<tr>\n<td>log_level</td>\n<td>设置日志级别，默认 info</td>\n</tr>\n</tbody></table>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<h1 id=\"FastAPI-3：uvicorn-run\"><a href=\"#FastAPI-3：uvicorn-run\" class=\"headerlink\" title=\"FastAPI-3：uvicorn.run()\"></a>FastAPI-3：uvicorn.run()</h1><h2 id=\"Uvicorn\"><a href=\"#Uvicorn\" class=\"headerlink\" title=\"Uvicorn\"></a>Uvicorn</h2><ul>\n<li>基于 <code>uvloop</code> 和 <code>httptools</code> 构建的非常快速的 <code>ASGI</code> 服务器；</li>\n<li>它不是一个 <code>Web</code> 框架，而是一个服务器；</li>\n<li>例如，他不是一个提供路径路由的框架，这是 <code>FastAPI</code> 框架提供的东西；</li>\n<li>它是 <code>Starlette</code> 和 <code>FastAPI</code> 的推荐使用的服务器。</li>\n</ul>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p><code>uvicorn</code> 是运行 <code>FastAPI</code> 应用程序的主要 <code>Web</code> 服务器，<code>uvicorn</code> 和 <code>Gunicorn</code> 结合使用，拥有一个异步多进程服务器。</p>\n<h2 id=\"什么是ASGI、WSGI\"><a href=\"#什么是ASGI、WSGI\" class=\"headerlink\" title=\"什么是ASGI、WSGI\"></a>什么是ASGI、WSGI</h2><p><a href=\"https://www.cnblogs.com/poloyy/15291403.html\">https://www.cnblogs.com/poloyy/15291403.html</a></p>\n<h2 id=\"最简单的-FastAPI代码\"><a href=\"#最简单的-FastAPI代码\" class=\"headerlink\" title=\"最简单的 FastAPI代码\"></a>最简单的 FastAPI代码</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> fastapi <span class=\"token keyword\">import</span> FastAPI\napp <span class=\"token operator\">=</span> FastAPI<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Hello World'</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"启动-uvicorn\"><a href=\"#启动-uvicorn\" class=\"headerlink\" title=\"启动 uvicorn\"></a>启动 uvicorn</h2><p>进到 <code>.py</code> 文件所处目录下的命令运行</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">uvicorn main<span class=\"token punctuation\">:</span>app <span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token builtin\">reload</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/../../static/Python/FastAPI/FastAPI-2%EF%BC%9A%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-1.png\" alt=\"1\"></p>\n<p>能不能不用命令行方式运行呢，否则太不方便了？ –可以！</p>\n<h3 id=\"使用-uvicorn-run\"><a href=\"#使用-uvicorn-run\" class=\"headerlink\" title=\"使用 uvicorn.run()\"></a>使用 <code>uvicorn.run()</code></h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> fastapi <span class=\"token keyword\">import</span> FastAPI\napp <span class=\"token operator\">=</span> FastAPI<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Hello World'</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    uvicorn<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>app<span class=\"token operator\">=</span><span class=\"token string\">'main:app'</span><span class=\"token punctuation\">,</span> host<span class=\"token operator\">=</span><span class=\"token string\">'0.0.0.0'</span><span class=\"token punctuation\">,</span> post<span class=\"token operator\">=</span><span class=\"token number\">8010</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">reload</span><span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> debug<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 这样就不用敲命令行啦；</span>\n<span class=\"token comment\"># uvicorn 有什么命令行参数，run()方法就有什么参数。</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"uvicorn常用参数\"><a href=\"#uvicorn常用参数\" class=\"headerlink\" title=\"uvicorn常用参数\"></a>uvicorn常用参数</h3><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>app</td>\n<td>运行的 .py 文件:FastAPI实例对象</td>\n</tr>\n<tr>\n<td>host</td>\n<td>访问url，默认 127.0.0.1</td>\n</tr>\n<tr>\n<td>port</td>\n<td>访问端口，默认8080</td>\n</tr>\n<tr>\n<td>reload</td>\n<td>热更新，有内容修改自动重启服务器</td>\n</tr>\n<tr>\n<td>debug</td>\n<td>同 reload</td>\n</tr>\n<tr>\n<td>reload_dirs</td>\n<td>设置需要 reload 的目录，List[str] 类型</td>\n</tr>\n<tr>\n<td>log_level</td>\n<td>设置日志级别，默认 info</td>\n</tr>\n</tbody></table>\n"}],"PostAsset":[{"_id":"source/_posts/笔记/笔记-23.png","slug":"笔记-23.png","post":"clooa9v4s0001gs6r1j757myv","modified":0,"renderable":0},{"_id":"source/_posts/笔记/笔记-24.png","slug":"笔记-24.png","post":"clooa9v4s0001gs6r1j757myv","modified":0,"renderable":0},{"_id":"source/_posts/笔记/笔记-29.png","slug":"笔记-29.png","post":"clooa9v4s0001gs6r1j757myv","modified":0,"renderable":0},{"_id":"source/_posts/笔记/笔记-30-1.png","slug":"笔记-30-1.png","post":"clooa9v4s0001gs6r1j757myv","modified":0,"renderable":0},{"_id":"source/_posts/笔记/笔记-30-2.png","slug":"笔记-30-2.png","post":"clooa9v4s0001gs6r1j757myv","modified":0,"renderable":0},{"_id":"source/_posts/笔记/笔记-30-3.png","slug":"笔记-30-3.png","post":"clooa9v4s0001gs6r1j757myv","modified":0,"renderable":0},{"_id":"source/_posts/笔记/笔记-30-4.png","slug":"笔记-30-4.png","post":"clooa9v4s0001gs6r1j757myv","modified":0,"renderable":0},{"_id":"source/_posts/笔记/笔记-30-5.png","slug":"笔记-30-5.png","post":"clooa9v4s0001gs6r1j757myv","modified":0,"renderable":0},{"_id":"source/_posts/笔记/笔记-30-6.png","slug":"笔记-30-6.png","post":"clooa9v4s0001gs6r1j757myv","modified":0,"renderable":0},{"_id":"source/_posts/Python/FastAPI/FastAPI-2：快速入门/FastAPI-2：快速入门-1.png","slug":"FastAPI-2：快速入门-1.png","post":"clooa9v59000vgs6rb1el28iy","modified":0,"renderable":0},{"_id":"source/_posts/Python/FastAPI/FastAPI-2：快速入门/FastAPI-2：快速入门-2.png","slug":"FastAPI-2：快速入门-2.png","post":"clooa9v59000vgs6rb1el28iy","modified":0,"renderable":0},{"_id":"source/_posts/Python/FastAPI/FastAPI-2：快速入门/FastAPI-2：快速入门-3.png","slug":"FastAPI-2：快速入门-3.png","post":"clooa9v59000vgs6rb1el28iy","modified":0,"renderable":0},{"_id":"source/_posts/Python/FastAPI/FastAPI-2：快速入门/FastAPI-2：快速入门-4.png","slug":"FastAPI-2：快速入门-4.png","post":"clooa9v59000vgs6rb1el28iy","modified":0,"renderable":0},{"_id":"source/_posts/Python/FastAPI/FastAPI-2：快速入门/FastAPI-2：快速入门-5.png","slug":"FastAPI-2：快速入门-5.png","post":"clooa9v59000vgs6rb1el28iy","modified":0,"renderable":0}],"PostCategory":[{"post_id":"clooa9v4w0003gs6rd5dpd05v","category_id":"clooa9v500006gs6rc3k1gsgf","_id":"clooa9v54000fgs6r7ihu36jj"},{"post_id":"clooa9v4w0003gs6rd5dpd05v","category_id":"clooa9v53000cgs6rg4v97qpp","_id":"clooa9v54000hgs6rfoae65qd"},{"post_id":"clooa9v59000vgs6rb1el28iy","category_id":"clooa9v500006gs6rc3k1gsgf","_id":"clooa9v5b000zgs6radasg32s"},{"post_id":"clooa9v59000vgs6rb1el28iy","category_id":"clooa9v53000cgs6rg4v97qpp","_id":"clooa9v5b0010gs6rdceuckso"}],"PostTag":[{"post_id":"clooa9v4s0001gs6r1j757myv","tag_id":"clooa9v4y0004gs6revru2t42","_id":"clooa9v57000lgs6r3fwu515x"},{"post_id":"clooa9v4s0001gs6r1j757myv","tag_id":"clooa9v510009gs6rb06zcvrg","_id":"clooa9v57000mgs6rce046jpa"},{"post_id":"clooa9v4s0001gs6r1j757myv","tag_id":"clooa9v53000dgs6rbipy78ug","_id":"clooa9v57000ogs6rhfvzelzx"},{"post_id":"clooa9v4s0001gs6r1j757myv","tag_id":"clooa9v53000egs6rfd84ffwf","_id":"clooa9v57000pgs6r7fnockt0"},{"post_id":"clooa9v4s0001gs6r1j757myv","tag_id":"clooa9v54000ggs6raufs7s4j","_id":"clooa9v57000qgs6r2jh51a69"},{"post_id":"clooa9v4s0001gs6r1j757myv","tag_id":"clooa9v54000igs6rfpba6m1i","_id":"clooa9v57000rgs6r7jcrdiqf"},{"post_id":"clooa9v4s0001gs6r1j757myv","tag_id":"clooa9v55000jgs6r63o31lsn","_id":"clooa9v57000sgs6rbo1jct38"},{"post_id":"clooa9v4w0003gs6rd5dpd05v","tag_id":"clooa9v4y0004gs6revru2t42","_id":"clooa9v57000tgs6r7mcq4c7r"},{"post_id":"clooa9v4w0003gs6rd5dpd05v","tag_id":"clooa9v57000ngs6r4z1t04g9","_id":"clooa9v57000ugs6r4c0yaw37"},{"post_id":"clooa9v59000vgs6rb1el28iy","tag_id":"clooa9v4y0004gs6revru2t42","_id":"clooa9v5a000xgs6rd0tc8j6l"},{"post_id":"clooa9v59000vgs6rb1el28iy","tag_id":"clooa9v57000ngs6r4z1t04g9","_id":"clooa9v5b000ygs6r6ug4hvws"}],"Tag":[{"name":"Python","_id":"clooa9v4y0004gs6revru2t42"},{"name":"MySQL","_id":"clooa9v510009gs6rb06zcvrg"},{"name":"Linux","_id":"clooa9v53000dgs6rbipy78ug"},{"name":"Nginx","_id":"clooa9v53000egs6rfd84ffwf"},{"name":"sqlite3","_id":"clooa9v54000ggs6raufs7s4j"},{"name":"ES","_id":"clooa9v54000igs6rfpba6m1i"},{"name":"MongoDB","_id":"clooa9v55000jgs6r63o31lsn"},{"name":"FastAPI","_id":"clooa9v57000ngs6r4z1t04g9"}]}}